{
  "companyId": "",
  "authTokenExpireIds": [],
  "connectorIds": [
    "variablesConnector",
    "annotationConnector",
    "httpConnector",
    "nodeConnector",
    "pingOneSSOConnector",
    "functionsConnector",
    "errorConnector"
  ],
  "createdDate": 1724072191091,
  "currentVersion": 1,
  "customerId": "",
  "deployedDate": 1724072192778,
  "description": "Last Updated: August 19th, 2024",
  "flowStatus": "enabled",
  "isOutputSchemaSaved": false,
  "name": "PingOne Account Recovery by Email",
  "publishedVersion": 1,
  "settings": {
    "csp": "worker-src 'self' blob:; script-src 'self' https://cdn.jsdelivr.net https://code.jquery.com https://devsdk.singularkey.com http://cdnjs.cloudflare.com 'unsafe-inline' 'unsafe-eval';",
    "intermediateLoadingScreenCSS": "",
    "intermediateLoadingScreenHTML": "",
    "useCustomCSS": true,
    "css": ".companyLogo {\n    height: 65px;\n}\n\n.icon-padding::before {\n  padding-right: 5px;\n}",
    "cssLinks": [
      "https://assets.pingone.com/ux/end-user-nano/0.1.0-alpha.9/end-user-nano.css",
      "https://assets.pingone.com/ux/astro-nano/0.1.0-alpha.11/icons.css"
    ],
    "customTitle": "Account Recovery by Email",
    "customFaviconLink": "https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png",
    "logLevel": 2
  },
  "timeouts": "null",
  "updatedDate": 1724072192833,
  "flowId": "8583c20b51859d12a9160bf675d749de",
  "versionId": 1,
  "graphData": {
    "elements": {
      "nodes": [
        {
          "data": {
            "id": "wz25oki6qd",
            "nodeType": "CONNECTION",
            "connectionId": "06922a684039827499bdbdd97f49827b",
            "connectorId": "variablesConnector",
            "name": "Variables",
            "label": "Variables",
            "status": "configured",
            "capabilityName": "saveValue",
            "type": "trigger",
            "properties": {
              "saveVariables": {
                "value": [
                  {
                    "name": "companyLogo",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                    "key": 0.3651977481717872,
                    "label": "companyLogo (string - flowInstance)",
                    "type": "string"
                  },
                  {
                    "name": "companyName",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Ping Identity\"\n      }\n    ]\n  }\n]",
                    "key": 0.2827866731051578,
                    "label": "companyName (string - flowInstance)",
                    "type": "string"
                  }
                ]
              },
              "nodeTitle": {
                "value": "Set Company & Logo"
              }
            },
            "idUnique": "3gttj24txo"
          },
          "position": {
            "x": 334,
            "y": 514
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "0jkx2dk119",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#4462edff"
              },
              "annotationTextColor": {
                "value": "#ffffffff"
              },
              "annotation": {
                "value": "PingOne Account Recovery by Email"
              },
              "width": {
                "value": 900
              },
              "fontStyle": {
                "value": "bold"
              },
              "fontSize": {
                "value": 16
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "cornerRadius": {
                "value": 8
              }
            },
            "status": "configured"
          },
          "position": {
            "x": 214,
            "y": 274
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "5y2rv1bm60",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#ffffffff"
              },
              "annotationTextColor": {
                "value": "#000000"
              },
              "annotation": {
                "value": "Last Updated: August 19th, 2024"
              },
              "width": {
                "value": 240
              },
              "fontSize": {
                "value": 14
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "cornerRadius": {
                "value": 8
              },
              "strokeEnabled": {
                "value": false
              },
              "strokeWidth": {
                "value": 1
              },
              "strokeColor": {
                "value": "#181818ff"
              }
            },
            "status": "configured",
            "idUnique": "o2v5xhdcbc"
          },
          "position": {
            "x": 214,
            "y": 214
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "d3gppfo315",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "Http",
            "status": "configured",
            "capabilityName": "customHTMLTemplate",
            "type": "trigger",
            "properties": {
              "textOne": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Enter your email address to receive a recovery code that will let you change your password.\"\n      }\n    ]\n  }\n]"
              },
              "customHTML": {
                "value": "<div class=\"end-user-nano\">\n  <div\n    class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n    <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n      <div class=\"card shadow mb-5\">\n        <main aria-labelledby=\"title\">\n          <div class=\"card-body p-5 d-flex flex-column\">\n            <img class=\"companyLogo align-self-center mb-5\" src=\"{{global.variables.companyLogo}}\" alt=\"{{global.variables.companyName}}\">\n\n            {{#if title}}\n            <h1 id=\"title\" class=\"text-center mb-4\">{{title}}</h1>\n            {{/if}}\n\n            {{#if textOne}}\n            <p class=\"text-muted text-center\">{{textOne}}</p>\n            {{/if}}\n\n            {{#if textTwo}}\n            <p class=\"text-muted text-center\">{{textTwo}}</p>\n            {{/if}}\n\n            <!-- Generic Error Message -->\n            <p class=\"text-danger mdi mdi-alert-circle text-center icon-padding\" id=\"feedbackError\" data-id=\"feedback\"\n              data-skcomponent=\"skerror\" aria-live=\"assertive\"></p>\n\n            <!-- Field Validation Error Messages -->\n            <p class=\"text-danger mdi mdi-alert-circle text-center icon-padding\" id=\"emailError\" data-skerrorid=\"email\"\n              data-skcomponent=\"skerrormessage\" aria-live=\"assertive\"></p>\n            <p class=\"text-danger mdi mdi-alert-circle text-center icon-padding\" id=\"passwordError\" data-skerrorid=\"password\"\n              data-skcomponent=\"skerrormessage\" aria-live=\"assertive\"></p>\n\n            {{#if userMessage}}\n            <p class=\"text-info text-center fade\" aria-live=\"assertive\">{{userMessage}}</p>\n            {{/if}}\n\n            <form id=\"emailForm\" aria-labelledby=\"title\" data-id=\"emailForm\">\n              <div class=\"mb-4 form-floating\">\n                <input class=\"form-control\" type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email Address\"\n                  autocomplete=\"email\" value=\"\" data-id=\"email-input\" aria-required=\"true\"\n                  aria-describedby=\"emailLabel\" />\n                <label id=\"emailLabel\" for=\"email\">Email Address</label>\n              </div>\n              <div class=\"d-flex flex-column\">\n                {{#if continueButtonLabel}}\n                <button data-id=\"button\" type=\"submit\" class=\"btn btn-primary mb-3\" data-skcomponent=\"skbutton\"\n                  data-skbuttontype=\"form-submit\" id=\"btnContinue\" data-skform=\"emailForm\"\n                  data-skbuttonvalue=\"CONTINUE\">\n                  {{continueButtonLabel}}\n                </button>\n                {{/if}}\n              </div>\n            </form>\n          </div>\n        </main>\n      </div>\n    </div>\n  </div>\n</div>\n"
              },
              "formFieldsList": {
                "value": [
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "email",
                    "displayName": "Email Address",
                    "hashedVisibility": false,
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  }
                ]
              },
              "nodeTitle": {
                "value": "User Identifier Form"
              },
              "customCSS": {
                "value": "@keyframes fadeOut {\n    0% {\n        opacity: 1;\n        visibility: visible;\n    }\n    80% {\n        opacity: .8;\n        visibility: visible;\n    }\n\n    100% {\n        opacity: 0;\n        visibility: hidden;\n        max-height: 0;\n    }\n}\n\n.fade {\n    overflow: hidden;\n    animation: fadeOut 20s forwards;\n}"
              },
              "validationRules": {
                "value": [
                  {
                    "propertyName": "email",
                    "rules": [
                      {
                        "ruleName": "presence",
                        "message": "Enter your email address"
                      },
                      {
                        "ruleName": "email",
                        "message": "Enter a valid email address"
                      }
                    ]
                  }
                ]
              },
              "backgroundColor": {
                "value": "#afd5ffff"
              },
              "customScript": {
                "value": "const setFieldFocus = (id) => {\n    const element = document.getElementById(id);\n    if (element) {\n        element.focus();\n    }\n}\n\nconst start = () => {\n    setFieldFocus(\"email\")\n}\n\nif (document.readyState === \"loading\") {\n    // Loading hasn't finished yet\n    document.addEventListener(\"DOMContentLoaded\", start);\n} else {\n    // `DOMContentLoaded` has already fired\n    start();\n}"
              },
              "inputSchema": {
                "value": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"displayName\": \"Title\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true\n    },\n    \"textOne\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text One\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true\n    },\n    \"textTwo\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text Two\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true\n    },\n    \"userMessage\": {\n      \"type\": \"string\",\n      \"displayName\": \"User Message\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true\n    },\n    \"continueButtonLabel\": {\n      \"type\": \"string\",\n      \"displayName\": \"Continue Button Label\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true\n    }\n  }\n}"
              },
              "outputSchema": {
                "value": {}
              },
              "title": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Recover Your Account\"\n      }\n    ]\n  }\n]"
              },
              "nodeDescription": {
                "value": "Prompt for email address"
              },
              "continueButtonLabel": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Continue\"\n      }\n    ]\n  }\n]"
              },
              "userMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"teleport.svg\",\n        \"url\": \"message\",\n        \"data\": \"{{local.0bpfvjlfvh.payload.output.message}}\",\n        \"tooltip\": \"{{local.0bpfvjlfvh.payload.output.message}}\",\n        \"children\": [\n          {\n            \"text\": \"message\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              }
            }
          },
          "position": {
            "x": 634,
            "y": 514
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "j9siq0mzgn",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 754,
            "y": 514
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "mgyrsc3iyb",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 454,
            "y": 514
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "kj7dlai63b",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 454,
            "y": 364
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "0bpfvjlfvh",
            "nodeType": "CONNECTION",
            "connectionId": "e7eae662d2ca276e4c6f097fc36a3bb1",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Node",
            "status": "configured",
            "capabilityName": "startNode",
            "type": "trigger",
            "properties": {
              "inputSchema": {
                "value": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"message\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"displayName\": \"Message\",\n\t\t\t\"preferredControlType\": \"textField\",\n\t\t\t\"enableParameters\": true,\n\t\t\t\"propertyName\": \"message\"\n\t\t}\n\t}\n}"
              },
              "nodeTitle": {
                "value": "Start"
              }
            }
          },
          "position": {
            "x": 334,
            "y": 364
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "0btbsj8ijk",
            "nodeType": "CONNECTION",
            "connectionId": "e7eae662d2ca276e4c6f097fc36a3bb1",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Node",
            "status": "configured",
            "capabilityName": "goToNode",
            "type": "action",
            "properties": {
              "nodeInstanceId": {
                "value": "v9puwtns1t"
              },
              "nodeTitle": {
                "value": "Go to Recover Account By Email"
              },
              "email": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"email\",\n        \"data\": \"{{local.d3gppfo315.payload.output.email}}\",\n        \"tooltip\": \"{{local.d3gppfo315.payload.output.email}}\",\n        \"children\": [\n          {\n            \"text\": \"email\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              }
            }
          },
          "position": {
            "x": 934,
            "y": 514
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "pbv7legq3o",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#f7f7adff"
              },
              "annotationTextColor": {
                "value": "#000000"
              },
              "annotation": {
                "value": "Input Schema: email"
              },
              "width": {
                "value": 400
              },
              "fontSize": {
                "value": 14
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "cornerRadius": {
                "value": 8
              },
              "strokeEnabled": {
                "value": false
              },
              "strokeWidth": {
                "value": 1
              },
              "strokeColor": {
                "value": "#181818ff"
              }
            },
            "status": "configured",
            "idUnique": "940rm8qjb1"
          },
          "position": {
            "x": 239,
            "y": 792
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "hi7kk8r9qk",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#5D00D6ff"
              },
              "annotationTextColor": {
                "value": "#ffffffff"
              },
              "annotation": {
                "value": "Forgot Password"
              },
              "width": {
                "value": 2600
              },
              "fontStyle": {
                "value": "bold"
              },
              "fontSize": {
                "value": 14
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "cornerRadius": {
                "value": 8
              }
            },
            "status": "configured"
          },
          "position": {
            "x": 239,
            "y": 732
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "v9puwtns1t",
            "nodeType": "CONNECTION",
            "connectionId": "e7eae662d2ca276e4c6f097fc36a3bb1",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Node",
            "status": "configured",
            "capabilityName": "startNode",
            "type": "trigger",
            "properties": {
              "nodeTitle": {
                "value": "Forgot Password"
              },
              "inputSchema": {
                "value": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"email\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"displayName\": \"Email Address\",\n\t\t\t\"preferredControlType\": \"textField\",\n\t\t\t\"enableParameters\": true,\n\t\t\t\"propertyName\": \"email\"\n\t\t}\n\t}\n}"
              }
            }
          },
          "position": {
            "x": 330,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "gu8aplq3ou",
            "nodeType": "EVAL",
            "label": "Evaluator"
          },
          "position": {
            "x": 450,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "m9l9y9m4jw",
            "nodeType": "CONNECTION",
            "connectionId": "94141bf2f1b9b59a5f5365ff135e02bb",
            "connectorId": "pingOneSSOConnector",
            "name": "PingOne",
            "label": "PingOne",
            "status": "configured",
            "capabilityName": "sendRecoveryCode",
            "type": "action",
            "properties": {
              "identifier": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"id\",\n        \"data\": \"{{local.v9adm9ez5d.payload.output.matchedUser.id}}\",\n        \"tooltip\": \"{{local.v9adm9ez5d.payload.output.matchedUser.id}}\",\n        \"children\": [\n          {\n            \"text\": \"id\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Send Recovery Code"
              }
            }
          },
          "position": {
            "x": 930,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "xdekxjajju",
            "nodeType": "EVAL",
            "properties": {
              "vfdw439zp2": {
                "value": "always"
              }
            }
          },
          "position": {
            "x": 1050,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "vfdw439zp2",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "Http",
            "status": "configured",
            "capabilityName": "customHTMLTemplate",
            "type": "trigger",
            "properties": {
              "title": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Enter New Password\"\n      }\n    ]\n  }\n]"
              },
              "subtitle": {
                "value": null
              },
              "buttonText": {
                "value": null
              },
              "formFieldsList": {
                "value": [
                  {
                    "propertyName": "recoveryCode",
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "value": "",
                    "hashedVisibility": false,
                    "displayName": "Recovery Code"
                  },
                  {
                    "propertyName": "newPassword",
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "value": "",
                    "hashedVisibility": true,
                    "displayName": "New Password"
                  },
                  {
                    "propertyName": "verifyNewPassword",
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "value": "",
                    "hashedVisibility": true,
                    "displayName": "Verify New Password"
                  },
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  }
                ]
              },
              "nodeTitle": {
                "value": "Password Recovery Form"
              },
              "customHTML": {
                "value": "<div class=\"end-user-nano\">\n  <div\n    class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n    <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n      <div class=\"card shadow mb-5\">\n        <main aria-labelledby=\"title\">\n          <div class=\"card-body p-5 d-flex flex-column\">\n            <img class=\"companyLogo align-self-center mb-5\" src=\"{{global.variables.companyLogo}}\" alt=\"{{global.variables.companyName}}\" />\n\n            {{#if title}}\n            <h1 id=\"title\" class=\"text-center mb-4\">{{title}}</h1>\n            {{/if}}\n\n            {{#if textOne}}\n            <p class=\"text-muted text-center\">{{textOne}}</p>\n            {{/if}}\n\n            <!-- Generic Error Message -->\n            <p class=\"text-danger mdi mdi-alert-circle text-center icon-padding\" data-id=\"feedback\" data-skcomponent=\"skerror\"\n              aria-live=\"assertive\"></p>\n\n            <!-- Field Validation Error Messages -->\n            <p class=\"text-danger mdi mdi-alert-circle text-center icon-padding\" data-skerrorid=\"recoveryCode\"\n              data-skcomponent=\"skerrormessage\" aria-live=\"assertive\"></p>\n            <p class=\"text-danger mdi mdi-alert-circle text-center icon-padding\" data-skerrorid=\"newPassword\"\n              data-skcomponent=\"skerrormessage\" aria-live=\"assertive\"></p>\n            <p class=\"text-danger mdi mdi-alert-circle text-center icon-padding\" data-skerrorid=\"verifyNewPassword\"\n              data-skcomponent=\"skerrormessage\" aria-live=\"assertive\"></p>\n\n            <p id=\"resendMessage\" class=\"text-success mdi mdi-check-circle text-center\"  \n              style=\"display: {{#if resendMessage}} block; {{else}} none; {{/if}}\"aria-live=\"assertive\">\n              <span class=\"ms-2\">{{resendMessage}}</span></p>\n\n            <form id=\"recoveryCodeForm\" data-id=\"recoveryCodeForm\">\n              <div class=\"mb-4 form-floating\">\n                <input id=\"recoveryCode\" data-id=\"recoveryCode\" class=\"form-control\" type=\"text\" name=\"recoveryCode\"\n                    placeholder=\"Recovery Code\" autocomplete=\"one-time-code\" aria-describedby=\"recoveryCodeLabel\" />\n                <label id=\"recoveryCodeLabel\" data-id=\"recoveryCodeLabel\" class=\"form-label\" for=\"recoveryCode\">\n                    Recovery Code\n                  </label>\n              </div>\n              <div id=\"newPasswordContainer\" class=\"mb-4 form-floating\">\n                <input id=\"newPassword\" data-id=\"newPassword\" class=\"form-control\" type=\"password\" name=\"newPassword\"\n                    placeholder=\"New Password\" autocomplete=\"new-password\" aria-describedby=\"newPasswordLabel\" />\n                <label id=\"newPasswordLabel\" data-id=\"newPasswordLabel\" class=\"form-label\" for=\"newPassword\">\n                    New Password\n                  </label>\n              </div>\n              <div id=\"verifyPasswordContainer\" class=\"mb-4 form-floating\">\n                <input id=\"verifyNewPassword\" data-id=\"verifyNewPassword\" class=\"form-control\" type=\"password\"\n                    name=\"verifyNewPassword\" placeholder=\"Verify New Password\" autocomplete=\"new-password\"\n                    aria-describedby=\"verifyNewPasswordLabel\" />\n                <label id=\"verifyNewPasswordLabel\" class=\"form-label\" for=\"verifyNewPassword\">Verify New\n                    Password</label>\n              </div>\n              <div class=\"d-flex flex-column\">\n                {{#if continueButtonLabel}}\n                <button id=\"submitBtn\" data-id=\"submitBtn\" class=\"btn btn-primary mb-3\" data-skcomponent=\"skbutton\"\n                    data-skbuttontype=\"form-submit\" data-skform=\"recoveryCodeForm\" data-skbuttonvalue=\"UPDATE\">\n                    {{continueButtonLabel}}\n                </button>\n                {{/if}}\n                {{#if resendButtonLabel}}\n                <button id=\"resendBtn\" class=\"btn btn-link\" data-skcomponent=\"skbutton\"\n                    data-skbuttontype=\"next-event\" data-skbuttonvalue=\"RESEND\" type=\"button\">\n                    {{resendButtonLabel}}\n                </button>\n                {{/if}}\n                {{#if cancelButtonLabel}}\n                <button id=\"backBtn\" data-id=\"backBtn\" class=\"btn btn-link\" data-skcomponent=\"skbutton\"\n                    data-skbuttontype=\"next-event\" data-skform=\"recoveryCodeForm\" data-skbuttonvalue=\"CANCEL\" type=\"button\">\n                    {{cancelButtonLabel}}\n                </button>\n                {{/if}}\n              </div>\n            </form>\n          </div>\n        </main>\n      </div>\n    </div>\n  </div>\n</div>"
              },
              "customCSS": {},
              "customScript": {
                "value": "const setFieldFocus = (id) => {\n    const element = document.getElementById(id);\n    if (element) {\n        element.focus();\n    }\n}\n\nconst makePasswordToggle = (id) => {\n    let container = document.getElementById(id);\n\n    if (container) {\n        let password = container.getElementsByTagName(\"input\")[0];\n        let toggler = document.createElement(\"button\");\n        toggler.setAttribute(\"type\", \"button\");\n        toggler.setAttribute(\"aria-label\", \"Show/Hide Password\");\n        toggler.className = \"btn mdi mdi-eye-off-outline position-absolute end-0 top-50 translate-middle-y\";\n        container.appendChild(toggler);\n\n        function showHidePassword() {\n            if (password.type == \"password\") {\n                password.setAttribute(\"type\", \"text\");\n                toggler.classList.add(\"mdi-eye-outline\");\n                toggler.classList.remove(\"mdi-eye-off-outline\");\n            } else {\n                toggler.classList.add(\"mdi-eye-off-outline\");\n                toggler.classList.remove(\"mdi-eye-outline\");\n                password.setAttribute(\"type\", \"password\");\n            }\n            password.focus();\n        };\n\n        toggler.addEventListener(\"click\", showHidePassword);\n    }\n}\n\nconst createChangeObserver = (id) => {\n    const targetNode = document.getElementById(id);\n\n    if (targetNode) {\n        // Observer options\n        const config = { childList: true, characterData: true, subtree: true };\n\n        const callback = function (mutationsList, observer) {\n            for (let mutation of mutationsList) {\n                if (mutation.type === 'characterData' || (mutation.type === 'childList' && mutation.addedNodes.length > 0)) {\n                    // Form has reloaded, recreate the password toggle icons\n                    makePasswordToggle(\"newPasswordContainer\");\n                    makePasswordToggle(\"verifyPasswordContainer\");\n                    setFieldFocus(\"recoveryCode\");\n                }\n            }\n        };\n\n        const observer = new MutationObserver(callback);\n\n        observer.observe(targetNode, config);\n    }\n}\n\nconst start = () => {\n    makePasswordToggle(\"newPasswordContainer\");\n    makePasswordToggle(\"verifyPasswordContainer\");\n    setFieldFocus(\"recoveryCode\");\n    createChangeObserver('resendMessage');\n}\n\nif (document.readyState === \"loading\") {\n    // Loading hasn't finished yet\n    document.addEventListener(\"DOMContentLoaded\", start);\n} else {\n    // `DOMContentLoaded` has already fired\n    start();\n}\n"
              },
              "validationRules": {
                "value": [
                  {
                    "propertyName": "recoveryCode",
                    "rules": [
                      {
                        "ruleName": "presence",
                        "message": "Enter recovery code"
                      }
                    ]
                  },
                  {
                    "propertyName": "newPassword",
                    "rules": [
                      {
                        "ruleName": "presence",
                        "message": "Enter new password"
                      }
                    ]
                  },
                  {
                    "propertyName": "verifyNewPassword",
                    "rules": [
                      {
                        "ruleName": "presence",
                        "message": "Verify new password"
                      }
                    ]
                  }
                ]
              },
              "nodeDescription": {
                "value": "Enter The Recovery Code and Set New Password"
              },
              "inputSchema": {
                "value": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"displayName\": \"Title\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true\n    },\n    \"textOne\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text One\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true\n    },\n    \"resendMessage\": {\n      \"type\": \"string\",\n      \"displayName\": \"Resend Message\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true\n    },\n    \"continueButtonLabel\": {\n      \"type\": \"string\",\n      \"displayName\": \"Continue Button Label\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true\n    },\n    \"resendButtonLabel\": {\n      \"type\": \"string\",\n      \"displayName\": \"Resend Button Label\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true\n    },\n    \"cancelButtonLabel\": {\n      \"type\": \"string\",\n      \"displayName\": \"Cancel Button Label\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true\n    }\n  }\n}"
              },
              "outputSchema": {
                "value": {}
              },
              "textOne": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"Create and verify a new password.\"\n      }\n    ]\n  }\n]"
              },
              "resendMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"teleport.svg\",\n        \"url\": \"resendMessage\",\n        \"data\": \"{{local.mmzegoy7gw.payload.output.resendMessage}}\",\n        \"tooltip\": \"{{local.mmzegoy7gw.payload.output.resendMessage}}\",\n        \"children\": [\n          {\n            \"text\": \"resendMessage\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "continueButtonLabel": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Continue\"\n      }\n    ]\n  }\n]"
              },
              "resendButtonLabel": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Resend Code\"\n      }\n    ]\n  }\n]"
              },
              "cancelButtonLabel": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Cancel\"\n      }\n    ]\n  }\n]"
              }
            },
            "isDisabled": false,
            "idUnique": "ao8b3p5f11"
          },
          "position": {
            "x": 1230,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "autvsbla1a",
            "nodeType": "CONNECTION",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "name": "Functions",
            "label": "Functions",
            "status": "configured",
            "capabilityName": "AEqualsMultipleB",
            "type": "trigger",
            "properties": {
              "leftValueA": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"buttonValue\",\n        \"data\": \"{{local.vfdw439zp2.payload.output.buttonValue}}\",\n        \"tooltip\": \"{{local.vfdw439zp2.payload.output.buttonValue}}\",\n        \"children\": [\n          {\n            \"text\": \"buttonValue\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "rightValueB": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"submit\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Password Recovery Button Action"
              },
              "rightValueMultiple": {
                "value": [
                  {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"UPDATE\"\n      }\n    ]\n  }\n]",
                    "id": "vgii63uk2p"
                  },
                  {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"RESEND\"\n      }\n    ]\n  }\n]",
                    "id": "3a7tpbhtep"
                  },
                  {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"CANCEL\"\n      }\n    ]\n  }\n]",
                    "id": "j2d7ax008r"
                  }
                ]
              },
              "nodeDescription": {
                "value": "Check Which Button Was Clicked"
              }
            },
            "isDisabled": false,
            "idUnique": "liwkdm3vgm"
          },
          "position": {
            "x": 1530,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "omlw87ycb5",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 1350,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "finrx3k4j3",
            "nodeType": "EVAL",
            "label": "Evaluator"
          },
          "position": {
            "x": 1650,
            "y": 1260
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "4awm7e93pi",
            "nodeType": "CONNECTION",
            "connectionId": "e7eae662d2ca276e4c6f097fc36a3bb1",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Node",
            "status": "configured",
            "capabilityName": "goToNode",
            "type": "action",
            "properties": {
              "nodeInstanceId": {
                "value": "0bpfvjlfvh"
              },
              "nodeTitle": {
                "value": "Go to Start"
              }
            }
          },
          "position": {
            "x": 1830,
            "y": 1260
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "0ksm35m5qb",
            "nodeType": "EVAL",
            "label": "Evaluator"
          },
          "position": {
            "x": 1650,
            "y": 1110
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "7e8jehllq9",
            "nodeType": "CONNECTION",
            "connectionId": "e7eae662d2ca276e4c6f097fc36a3bb1",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Node",
            "status": "configured",
            "capabilityName": "goToNode",
            "type": "action",
            "properties": {
              "nodeInstanceId": {
                "value": "mmzegoy7gw"
              },
              "nodeTitle": {
                "value": "Go to Recover Account By Email"
              },
              "resendMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Recovery passcode resent\"\n      }\n    ]\n  }\n]"
              }
            }
          },
          "position": {
            "x": 1830,
            "y": 1110
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "9pkno982vy",
            "nodeType": "CONNECTION",
            "connectionId": "94141bf2f1b9b59a5f5365ff135e02bb",
            "connectorId": "pingOneSSOConnector",
            "name": "PingOne",
            "label": "pingOneSSOConnector",
            "status": "configured",
            "capabilityName": "recoverPassword",
            "type": "action",
            "properties": {
              "matchAttributes": {
                "value": [
                  "username",
                  "email"
                ]
              },
              "userIdentifierForFindUser": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"username\",\n        \"data\": \"{{local.1teos2506v.payload.output.username}}\",\n        \"tooltip\": \"{{local.1teos2506v.payload.output.username}}\",\n        \"children\": [\n          {\n            \"text\": \"username\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "matchAttribute": {
                "value": "id"
              },
              "identifier": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"id\",\n        \"data\": \"{{local.v9adm9ez5d.payload.output.matchedUser.id}}\",\n        \"tooltip\": \"{{local.v9adm9ez5d.payload.output.matchedUser.id}}\",\n        \"children\": [\n          {\n            \"text\": \"id\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "recoveryCode": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"recoveryCode\",\n        \"data\": \"{{local.vfdw439zp2.payload.output.recoveryCode}}\",\n        \"tooltip\": \"{{local.vfdw439zp2.payload.output.recoveryCode}}\",\n        \"children\": [\n          {\n            \"text\": \"recoveryCode\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "newPassword": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"newPassword\",\n        \"data\": \"{{local.vfdw439zp2.payload.output.newPassword}}\",\n        \"tooltip\": \"{{local.vfdw439zp2.payload.output.newPassword}}\",\n        \"children\": [\n          {\n            \"text\": \"newPassword\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Validates code and update password"
              },
              "nodeDescription": {},
              "recoverPassword_localizedErrors": {
                "properties": {
                  "en": {
                    "value": [
                      {
                        "key": "unexpectedError",
                        "value": ""
                      },
                      {
                        "key": "notFound",
                        "value": ""
                      },
                      {
                        "key": "accessFailed",
                        "value": ""
                      },
                      {
                        "key": "constraintViolation",
                        "value": ""
                      },
                      {
                        "key": "invalidValue",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Invalid recovery code\"\n      }\n    ]\n  }\n]"
                      },
                      {
                        "key": "invalidFilter",
                        "value": ""
                      },
                      {
                        "key": "noUserMatch",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      },
                      {
                        "key": "accountNotUsable",
                        "value": ""
                      }
                    ]
                  }
                }
              }
            },
            "idUnique": "nezyzu3twg"
          },
          "position": {
            "x": 2430,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "emqskruuft",
            "nodeType": "CONNECTION",
            "connectionId": "53ab83a4a4ab919d9f2cb02d9e111ac8",
            "connectorId": "errorConnector",
            "name": "Error Message",
            "label": "Error Customize",
            "status": "configured",
            "capabilityName": "customErrorMessage",
            "type": "action",
            "properties": {
              "errorCode": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"httpResponseCode\",\n        \"data\": \"{{local.fe51hat32b.payload.error.httpResponseCode}}\",\n        \"tooltip\": \"{{local.fe51hat32b.payload.error.httpResponseCode}}\",\n        \"children\": [\n          {\n            \"text\": \"httpResponseCode\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Passcode mismatch or new password violation"
              },
              "nodeDescription": {},
              "errorMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Invalid recovery code and/or password\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "errorDescription": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              }
            },
            "idUnique": "8am3fknso1"
          },
          "position": {
            "x": 2730,
            "y": 1110
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "uvr5vj2oqi",
            "nodeType": "EVAL",
            "properties": {
              "emqskruuft": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 2550,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "acknzwphjw",
            "nodeType": "CONNECTION",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "name": "Functions",
            "label": "Functions",
            "status": "configured",
            "capabilityName": "customFunction",
            "type": "trigger",
            "properties": {
              "variableInputList": {
                "value": [
                  {
                    "name": "newPassword",
                    "preferredDataType": "string",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"newPassword\",\n        \"data\": \"{{local.vfdw439zp2.payload.output.newPassword}}\",\n        \"tooltip\": \"{{local.vfdw439zp2.payload.output.newPassword}}\",\n        \"children\": [\n          {\n            \"text\": \"newPassword\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "name": "verifyNewPassword",
                    "preferredDataType": "string",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"verifyNewPassword\",\n        \"data\": \"{{local.vfdw439zp2.payload.output.verifyNewPassword}}\",\n        \"tooltip\": \"{{local.vfdw439zp2.payload.output.verifyNewPassword}}\",\n        \"children\": [\n          {\n            \"text\": \"verifyNewPassword\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  }
                ]
              },
              "nodeTitle": {
                "value": "Verify Passwords Match"
              },
              "nodeDescription": {
                "value": "Verify New Passwords Match Before Setting"
              },
              "code": {
                "value": "// Test to ensure passwords match\nmodule.exports = a = async ({ params }) => {\n\tconst newPassword = params.newPassword;\n\tconst verifyNewPassword = params.verifyNewPassword;\n\n\tif (!newPassword || !verifyNewPassword || (newPassword !== verifyNewPassword)) {\n\t\treturn false;\n\t}\n\n\treturn { \"success\": true};\n}"
              },
              "outputSchema": {
                "value": "{\n\t\"output\": {\n\t\t\"type\": \"object\",\n\t\t\"properties\": {\n\t\t\t\"success\": {\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t}\n\t}\n}"
              }
            }
          },
          "position": {
            "x": 1830,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "xaeamokdef",
            "nodeType": "EVAL",
            "label": "Evaluator",
            "properties": {
              "w2nqndopri": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 1950,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "w2nqndopri",
            "nodeType": "CONNECTION",
            "connectionId": "53ab83a4a4ab919d9f2cb02d9e111ac8",
            "connectorId": "errorConnector",
            "name": "Error Message",
            "label": "Error Customize",
            "status": "configured",
            "capabilityName": "customErrorMessage",
            "type": "action",
            "properties": {
              "errorMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Passwords do not match.\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Passwords do not match error"
              }
            }
          },
          "position": {
            "x": 2130,
            "y": 1110
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "6geqqycejl",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 1650,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "v9adm9ez5d",
            "nodeType": "CONNECTION",
            "connectionId": "94141bf2f1b9b59a5f5365ff135e02bb",
            "connectorId": "pingOneSSOConnector",
            "name": "PingOne",
            "label": "PingOne",
            "status": "configured",
            "capabilityName": "userLookup",
            "type": "action",
            "properties": {
              "matchAttributes": {
                "value": [
                  "email"
                ]
              },
              "userIdentifierForFindUser": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"teleport.svg\",\n        \"url\": \"email\",\n        \"data\": \"{{local.v9puwtns1t.payload.output.email}}\",\n        \"tooltip\": \"{{local.v9puwtns1t.payload.output.email}}\",\n        \"children\": [\n          {\n            \"text\": \"email\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Lookup User"
              }
            },
            "idUnique": "576fmtfv7p"
          },
          "position": {
            "x": 630,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "qllc4q0rvz",
            "nodeType": "EVAL",
            "properties": {
              "undefined": {
                "value": "always"
              },
              "m9l9y9m4jw": {
                "value": "always"
              }
            }
          },
          "position": {
            "x": 750,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "4a669r77c3",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "Http",
            "status": "configured",
            "capabilityName": "customHTMLTemplate",
            "type": "trigger",
            "properties": {
              "customHTML": {
                "value": "<div class=\"end-user-nano\">\n    <div\n        class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n        <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n            <div class=\"card shadow mb-5\">\n                <div class=\"card-body p-5 d-flex flex-column\">\n                    <img class=\"companyLogo align-self-center mb-5\" src=\"{{global.variables.companyLogo}}\" alt=\"{{global.variables.companyName}}\" />\n\n                    {{#if title}}\n                    <h1 class=\"text-center mb-4\">{{title}}</h1>\n                    {{/if}}\n\n                    <div class=\"mx-auto mt-3 mb-4\">\n                        <svg class=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 52 52\">\n                            <circle class=\"checkmarkCircle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" />\n                            <path class=\"checkmarkCheck\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\n                        </svg>\n                    </div>\n\n                    {{#if textOne}}\n                    <p class=\"text-muted text-center\">{{textOne}}</p>\n                    {{/if}}\n\n                    {{#if textTwo}}\n                    <p class=\"text-muted text-center\">{{textTwo}}</p>\n                    {{/if}}\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"
              },
              "formFieldsList": {
                "value": [
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  }
                ]
              },
              "nodeTitle": {
                "value": "Password Reset Success"
              },
              "customCSS": {
                "value": ":root {\n  --animation-dimension: 120px;\n  --animation-start-color: #71e171;\n  --animation-midway-color: #67d067;\n  --animation-finish-color: #59b259;\n}\n\n.checkmark {\n  width: var(--animation-dimension);\n  height: var(--animation-dimension);\n  border-radius: 50%;\n  display: block;\n  stroke-width: 5;\n  stroke: #ffffff;\n  stroke-miterlimit: 10;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n  animation: fill 0.4s ease-in-out 0.4s forwards,\n    scale 0.3s ease-in-out 0.9s both;\n}\n\n.checkmarkCircle {\n  stroke-dasharray: 166;\n  stroke-dashoffset: 166;\n  stroke-width: 5;\n  stroke-miterlimit: 10;\n  stroke: var(--animation-finish-color);\n  fill: none;\n  animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards,\n    colorChange 1.2s ease-in-out forwards;\n}\n\n.checkmarkCheck {\n  transform-origin: 50% 50%;\n  stroke-dasharray: 48;\n  stroke-dashoffset: 48;\n  animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards,\n    colorChange 0.6s ease-in-out 0.8s forwards;\n}\n\n@keyframes colorChange {\n  0% {\n    stroke: var(--animation-start-color);\n  }\n  50% {\n    stroke: var(--animation-midway-color);\n  } \n  100% {\n    stroke: var(--animation-finish-color);\n  }\n}\n\n@keyframes stroke {\n  100% {\n    stroke-dashoffset: 0;\n  }\n}\n@keyframes scale {\n  0%,\n  100% {\n    transform: none;\n  }\n  50% {\n    transform: scale3d(1.1, 1.1, 1);\n  }\n  70% {\n    transform: scale3d(0.98, 0.98, 1);\n  }\n  85% {\n    transform: scale3d(1.02, 1.02, 1);\n  }\n}\n@keyframes fill {\n  100% {\n    box-shadow: inset 0px 0px 0px 0px var(--animation-finish-color);\n  }\n}"
              },
              "validationRules": {
                "value": []
              },
              "backgroundColor": {
                "value": "#afd5ffff"
              },
              "customScript": {},
              "inputSchema": {
                "value": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"displayName\": \"Title\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true\n    },\n    \"textOne\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text One\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true\n    },\n    \"textTwo\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text Two\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true\n    }\n  }\n}"
              },
              "title": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Success\"\n      }\n    ]\n  }\n]"
              },
              "nodeDescription": {
                "value": "Success Message With Animated Checkmark"
              },
              "textOne": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Your password has been successfully updated.\"\n      }\n    ]\n  }\n]"
              },
              "oeInteractionCacheExpire": {
                "value": true
              }
            },
            "idUnique": "tcoqrlkb25"
          },
          "position": {
            "x": 2730,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "mmzegoy7gw",
            "nodeType": "CONNECTION",
            "connectionId": "e7eae662d2ca276e4c6f097fc36a3bb1",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Node",
            "status": "configured",
            "capabilityName": "startNode",
            "type": "trigger",
            "properties": {
              "nodeTitle": {
                "value": "Resend Recovery"
              },
              "inputSchema": {
                "value": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"resendMessage\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"displayName\": \"Resend Message\",\n\t\t\t\"preferredControlType\": \"textField\",\n\t\t\t\"enableParameters\": true,\n\t\t\t\"propertyName\": \"resendMessage\"\n\t\t}\n\t}\n}"
              }
            }
          },
          "position": {
            "x": 630,
            "y": 1080
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "zmbz1kvrbb",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 750,
            "y": 1080
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "hoy0v6fkrb",
            "nodeType": "CONNECTION",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "name": "Functions",
            "label": "Functions",
            "status": "configured",
            "capabilityName": "customFunction",
            "type": "trigger",
            "properties": {
              "nodeTitle": {
                "value": "Verify User Found"
              },
              "variableInputList": {
                "value": [
                  {
                    "name": "p1UserId",
                    "preferredDataType": "string",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"id\",\n        \"data\": \"{{local.v9adm9ez5d.payload.output.matchedUser.id}}\",\n        \"tooltip\": \"{{local.v9adm9ez5d.payload.output.matchedUser.id}}\",\n        \"children\": [\n          {\n            \"text\": \"id\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  }
                ]
              },
              "code": {
                "value": "module.exports = a = async ({params}) => {\n\tconst { p1UserId } = params;\n\n\tif (!p1UserId) {\n\t\treturn false;\n\t}\n\n\treturn \n}"
              },
              "nodeDescription": {
                "value": "Check If P1 User Exists"
              }
            },
            "idUnique": "sxnpkmd89m"
          },
          "position": {
            "x": 2130,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "b5c3emwd8q",
            "nodeType": "EVAL",
            "label": "Evaluator",
            "properties": {
              "undefined": {
                "value": "anyTriggersFalse"
              },
              "emqskruuft": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 2250,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        }
      ],
      "edges": [
        {
          "data": {
            "id": "wcbyn8ajih",
            "source": "0ksm35m5qb",
            "target": "7e8jehllq9"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "mb5magj5md",
            "source": "xaeamokdef",
            "target": "w2nqndopri"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "eecye07zy3",
            "source": "autvsbla1a",
            "target": "0ksm35m5qb",
            "multiValueSourceId": "3a7tpbhtep"
          },
          "position": {
            "x": 64,
            "y": 92
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "ew17vwfa1u",
            "source": "9pkno982vy",
            "target": "uvr5vj2oqi"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "z3sp5doadd",
            "source": "v9adm9ez5d",
            "target": "qllc4q0rvz"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "w9shv1uoua",
            "source": "uvr5vj2oqi",
            "target": "4a669r77c3"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "hz0u2ahfn5",
            "source": "acknzwphjw",
            "target": "xaeamokdef"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "3dzxiduywp",
            "source": "zmbz1kvrbb",
            "target": "m9l9y9m4jw"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "u4i3cam8vu",
            "source": "d3gppfo315",
            "target": "j9siq0mzgn"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "uca5z0vl12",
            "source": "mgyrsc3iyb",
            "target": "d3gppfo315"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "uwqn3flhw0",
            "source": "0bpfvjlfvh",
            "target": "kj7dlai63b"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "89dm3ouu5d",
            "source": "kj7dlai63b",
            "target": "d3gppfo315"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "h52692wjs",
            "source": "j9siq0mzgn",
            "target": "0btbsj8ijk"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "jlyh3xku2s",
            "source": "wz25oki6qd",
            "target": "mgyrsc3iyb"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "j4lxi6y9us",
            "source": "m9l9y9m4jw",
            "target": "xdekxjajju"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "4qmjzn5uli",
            "source": "uvr5vj2oqi",
            "target": "emqskruuft"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "mkd3v2tzqv",
            "source": "autvsbla1a",
            "target": "finrx3k4j3",
            "multiValueSourceId": "j2d7ax008r"
          },
          "position": {
            "x": 64,
            "y": 132
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "btmqq3n3k8",
            "source": "6geqqycejl",
            "target": "acknzwphjw"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "jna6k429u3",
            "source": "vfdw439zp2",
            "target": "omlw87ycb5"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "41zhtjh0q6",
            "source": "v9puwtns1t",
            "target": "gu8aplq3ou"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "2txga2suu5",
            "source": "finrx3k4j3",
            "target": "4awm7e93pi"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "ek3q7ykllj",
            "source": "xdekxjajju",
            "target": "vfdw439zp2"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "al6jiijkke",
            "source": "omlw87ycb5",
            "target": "autvsbla1a"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "xcr1yrj63f",
            "source": "xaeamokdef",
            "target": "hoy0v6fkrb"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "x9pa6qlas2",
            "source": "b5c3emwd8q",
            "target": "9pkno982vy"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "zzze39yroz",
            "source": "qllc4q0rvz",
            "target": "m9l9y9m4jw"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "ch6my1h0ry",
            "source": "autvsbla1a",
            "target": "6geqqycejl",
            "multiValueSourceId": "vgii63uk2p"
          },
          "position": {
            "x": 64,
            "y": 52
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "xvbeorriob",
            "source": "gu8aplq3ou",
            "target": "v9adm9ez5d"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "cdvgo67i30",
            "source": "hoy0v6fkrb",
            "target": "b5c3emwd8q"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "2y1rl0w5bn",
            "source": "b5c3emwd8q",
            "target": "emqskruuft"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "y4sxxcjnjm",
            "source": "mmzegoy7gw",
            "target": "zmbz1kvrbb"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        }
      ]
    },
    "data": {},
    "zoomingEnabled": true,
    "userZoomingEnabled": true,
    "zoom": 1,
    "minZoom": 1e-50,
    "maxZoom": 1e+50,
    "panningEnabled": true,
    "userPanningEnabled": true,
    "pan": {
      "x": 0,
      "y": 0
    },
    "boxSelectionEnabled": true,
    "renderer": {
      "name": "null"
    }
  },
  "flowColor": "#E3F0FF",
  "savedDate": 1724072190891,
  "variables": [
    {
      "context": "flowInstance",
      "createdDate": 1723733673806,
      "fields": {
        "type": "string",
        "displayName": "Url for company's logo image",
        "mutable": true,
        "min": 0,
        "max": 2000
      },
      "id": "70e8e6ee-0ced-4a23-b113-6c0149c018cc",
      "type": "property",
      "visibility": "private",
      "name": "companyLogo##SK##flowInstance",
      "companyId": ""
    },
    {
      "context": "flowInstance",
      "createdDate": 1723733618022,
      "fields": {
        "type": "string",
        "displayName": "",
        "mutable": true,
        "min": 0,
        "max": 2000
      },
      "id": "ae3faac6-277a-436d-b3c9-30dd49cedb2d",
      "type": "property",
      "visibility": "private",
      "name": "companyName##SK##flowInstance",
      "companyId": ""
    }
  ],
  "connections": []
}