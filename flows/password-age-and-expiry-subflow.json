{
  "flows": [
    {
      "companyId": "",
      "authTokenExpireIds": [],
      "connectorIds": [
        "variablesConnector",
        "annotationConnector",
        "httpConnector",
        "pingOneSSOConnector",
        "errorConnector",
        "functionsConnector",
        "flowConnector"
      ],
      "createdDate": 1718798953175,
      "currentVersion": 1,
      "customerId": "",
      "description": "Last Updated: June 18th, 2024",
      "flowStatus": "enabled",
      "isOutputSchemaSaved": false,
      "name": "Password Age and Expiry - Main",
      "publishedVersion": 1,
      "settings": {
        "csp": "worker-src 'self' blob:; script-src 'self' https://cdn.jsdelivr.net https://code.jquery.com https://devsdk.singularkey.com http://cdnjs.cloudflare.com 'unsafe-inline' 'unsafe-eval';",
        "intermediateLoadingScreenCSS": "",
        "intermediateLoadingScreenHTML": "",
        "logLevel": 2,
        "customTitle": "Password Expiry Reference",
        "customFaviconLink": "https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png",
        "useCustomCSS": true,
        "css": ".companyLogo {\n    /* Logo image URL set using Branding Node  */\n    height: 65px;\n}",
        "cssLinks": [
          "https://assets.pingone.com/ux/end-user-nano/0.1.0-alpha.1/end-user-nano.css",
          "https://assets.pingone.com/ux/astro-nano/0.1.0-alpha.11/icons.css"
        ]
      },
      "timeouts": "null",
      "updatedDate": 1718798955063,
      "flowId": "bb501e2097c0ef05e8c4fbd07b81e005",
      "versionId": 1,
      "graphData": {
        "elements": {
          "nodes": [
            {
              "data": {
                "id": "scgf64t73j",
                "nodeType": "CONNECTION",
                "connectionId": "06922a684039827499bdbdd97f49827b",
                "connectorId": "variablesConnector",
                "name": "Variables",
                "label": "Variables",
                "status": "configured",
                "capabilityName": "saveValue",
                "type": "trigger",
                "properties": {
                  "saveVariables": {
                    "value": [
                      {
                        "name": "p1PasswordPolicyId",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                        "key": 0.6509346346737181,
                        "label": "p1PasswordPolicyId (string - flowInstance)",
                        "type": "string",
                        "nameDefault": "id"
                      },
                      {
                        "name": "p1ClientId",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                        "key": 0.5544264360896436,
                        "label": "p1ClientId (string - flowInstance)",
                        "type": "string",
                        "nameDefault": "clientId"
                      },
                      {
                        "name": "p1ClientSecret",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                        "key": 0.8284716406920605,
                        "label": "p1ClientSecret (string - flowInstance)",
                        "type": "string",
                        "nameDefault": "clientSecret"
                      },
                      {
                        "name": "p1TLD",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"com\"\n      }\n    ]\n  }\n]",
                        "key": 0.7314366075845637,
                        "label": "p1TLD (string - flowInstance)",
                        "type": "string",
                        "nameDefault": "p1TLD"
                      },
                      {
                        "name": "passwordWarningDays",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"7\"\n      }\n    ]\n  }\n]",
                        "key": 0.9289424030539721,
                        "label": "passwordWarningDays (number - flowInstance)",
                        "type": "number"
                      }
                    ]
                  },
                  "nodeTitle": {
                    "value": "Configure API Settings"
                  }
                }
              },
              "position": {
                "x": 604,
                "y": 454
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "wbu0yckis7",
                "nodeType": "ANNOTATION",
                "name": "Annotation",
                "connectionId": "921bfae85c38ed45045e07be703d86b8",
                "connectorId": "annotationConnector",
                "capabilityName": "updateAnnotationProperties",
                "type": "action",
                "properties": {
                  "backgroundColor": {
                    "value": "#4462edff"
                  },
                  "annotationTextColor": {
                    "value": "#ffffffff"
                  },
                  "annotation": {
                    "value": "PingOne Days Until Password Expiry"
                  },
                  "width": {
                    "value": 2600
                  },
                  "fontStyle": {
                    "value": "bold"
                  },
                  "fontSize": {
                    "value": 16
                  },
                  "fontFamily": {
                    "value": "sans-serif"
                  },
                  "cornerRadius": {
                    "value": 8
                  }
                },
                "status": "configured"
              },
              "position": {
                "x": 214,
                "y": 274
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "m3soewtwmm",
                "nodeType": "CONNECTION",
                "connectionId": "06922a684039827499bdbdd97f49827b",
                "connectorId": "variablesConnector",
                "name": "Variables",
                "label": "Variables",
                "status": "configured",
                "capabilityName": "saveValue",
                "type": "trigger",
                "properties": {
                  "saveVariables": {
                    "value": [
                      {
                        "name": "companyName",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Ping Identity\"\n      }\n    ]\n  }\n]",
                        "key": 0.2827866731051578,
                        "label": "companyName (string - flowInstance)",
                        "type": "string"
                      },
                      {
                        "name": "companyLogo",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                        "key": 0.3651977481717872,
                        "label": "companyLogo (string - flowInstance)",
                        "type": "string"
                      }
                    ]
                  },
                  "nodeTitle": {
                    "value": "Set Company & Logo"
                  },
                  "nodeDescription": {
                    "value": "Used for Form Logo and Text"
                  }
                },
                "idUnique": "3ugzhfz3ne"
              },
              "position": {
                "x": 304,
                "y": 454
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "suf41233lu",
                "nodeType": "ANNOTATION",
                "name": "Annotation",
                "connectionId": "921bfae85c38ed45045e07be703d86b8",
                "connectorId": "annotationConnector",
                "capabilityName": "updateAnnotationProperties",
                "type": "action",
                "properties": {
                  "backgroundColor": {
                    "value": "#ffffffff"
                  },
                  "annotationTextColor": {
                    "value": "#000000"
                  },
                  "annotation": {
                    "value": "Last Updated: June 18th, 2024"
                  },
                  "width": {
                    "value": 240
                  },
                  "fontSize": {
                    "value": 14
                  },
                  "fontFamily": {
                    "value": "sans-serif"
                  },
                  "cornerRadius": {
                    "value": 8
                  },
                  "strokeEnabled": {
                    "value": false
                  },
                  "strokeWidth": {
                    "value": 1
                  },
                  "strokeColor": {
                    "value": "#181818ff"
                  }
                },
                "status": "configured",
                "idUnique": "o2v5xhdcbc"
              },
              "position": {
                "x": 214,
                "y": 214
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "6xu63a828o",
                "nodeType": "CONNECTION",
                "connectionId": "867ed4363b2bc21c860085ad2baa817d",
                "connectorId": "httpConnector",
                "name": "Http",
                "label": "Http",
                "status": "configured",
                "capabilityName": "customHTMLTemplate",
                "type": "trigger",
                "properties": {
                  "textOne": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Welcome to \"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"companyName\",\n        \"data\": \"{{global.variables.companyName}}\",\n        \"tooltip\": \"{{global.variables.companyName}}\",\n        \"children\": [\n          {\n            \"text\": \"companyName\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "customHTML": {
                    "value": "<div class=\"end-user-nano\">\n  <div\n    class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n    <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n      <div class=\"card shadow mb-5\">\n        <main aria-labelledby=\"title\">\n          <div class=\"card-body p-5 d-flex flex-column\">\n            <img class=\"companyLogo align-self-center mb-5\" src=\"{{global.variables.companyLogo}}\" alt=\"{{global.variables.companyName}}\">\n\n            {{#if title}}\n            <h1 id=\"title\" class=\"text-center mb-4\">{{title}}</h1>\n            {{/if}}\n\n            {{#if textOne}}\n            <p class=\"text-muted text-center\">{{textOne}}</p>\n            {{/if}}\n\n            {{#if textTwo}}\n            <p class=\"text-muted text-center\">{{textTwo}}</p>\n            {{/if}}\n\n            <!-- Generic Error Message -->\n            <p class=\"text-danger mdi mdi-alert-circle text-center\" id=\"feedbackError\" data-id=\"feedback\"\n              data-skcomponent=\"skerror\" aria-live=\"assertive\"></p>\n\n            <!-- Field Validation Error Messages -->\n            <p class=\"text-danger mdi mdi-alert-circle text-center\" id=\"emailError\" data-skerrorid=\"email\"\n              data-skcomponent=\"skerrormessage\" aria-live=\"assertive\"></p>\n            <p class=\"text-danger mdi mdi-alert-circle text-center\" id=\"passwordError\" data-skerrorid=\"password\"\n              data-skcomponent=\"skerrormessage\" aria-live=\"assertive\"></p>\n\n            <form id=\"emailPasswordForm\" aria-labelledby=\"title\" data-id=\"emailPasswordForm\">\n              <div class=\"mb-4 form-floating\">\n                <input class=\"form-control\" type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email Address\"\n                  autocomplete=\"email\" value=\"\" data-id=\"email-input\" aria-required=\"true\"\n                  aria-describedby=\"emailLabel\" />\n                <label id=\"emailLabel\" for=\"email\">Email Address</label>\n              </div>\n              <div id=\"passwordDiv\" class=\"mb-4 form-floating\">\n                <input class=\"form-control\" type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\"\n                  autocomplete=\"current-password\" value=\"\" data-id=\"password-input\" aria-required=\"true\"\n                  aria-describedby=\"passwordLabel\" />\n                <label id=\"passwordLabel\" for=\"password\">Password</label>\n              </div>\n              <div class=\"d-flex flex-column\">\n                {{#if signonButtonLabel}}\n                <button data-id=\"button\" type=\"submit\" class=\"btn btn-primary mb-3\" data-skcomponent=\"skbutton\"\n                  data-skbuttontype=\"form-submit\" id=\"btnSignIn\" data-skform=\"emailPasswordForm\"\n                  data-skbuttonvalue=\"SIGNON\">\n                  {{signonButtonLabel}}\n                </button>\n                {{/if}}\n\n                {{#if resetButtonLabel}}\n                <button data-id=\"button\" class=\"btn btn-link\" data-skcomponent=\"skbutton\" data-skbuttontype=\"next-event\"\n                  id=\"btnTrouble\" data-skbuttonvalue=\"TROUBLE\">\n                  {{resetButtonLabel}}\n                </button>\n                {{/if}}\n\n                {{#if registerButtonLabel}}\n                <button data-id=\"button\" class=\"btn btn-link\" data-skcomponent=\"skbutton\" data-skbuttontype=\"next-event\"\n                  id=\"btnRegister\" data-skbuttonvalue=\"REGISTER\">\n                  {{registerButtonLabel}}\n                </button>\n                {{/if}}\n              </div>\n            </form>\n          </div>\n        </main>\n      </div>\n    </div>\n  </div>\n</div>\n"
                  },
                  "formFieldsList": {
                    "value": [
                      {
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "propertyName": "email",
                        "displayName": "Email Address",
                        "hashedVisibility": false,
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      },
                      {
                        "propertyName": "password",
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                        "hashedVisibility": true,
                        "displayName": "Password"
                      },
                      {
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "propertyName": "buttonValue"
                      }
                    ]
                  },
                  "nodeTitle": {
                    "value": "Sign On Form"
                  },
                  "customCSS": {
                    "value": ""
                  },
                  "validationRules": {
                    "value": [
                      {
                        "propertyName": "email",
                        "rules": [
                          {
                            "ruleName": "presence",
                            "message": "Enter your email address"
                          },
                          {
                            "ruleName": "email",
                            "message": "Enter a valid email address"
                          }
                        ]
                      },
                      {
                        "propertyName": "password",
                        "rules": [
                          {
                            "ruleName": "presence",
                            "message": "Enter your password"
                          }
                        ]
                      }
                    ]
                  },
                  "backgroundColor": {
                    "value": "#afd5ffff"
                  },
                  "customScript": {
                    "value": "const setFieldFocus = (id) => {\n    const element = document.getElementById(id);\n    if (element) {\n        element.focus();\n    }\n}\n\nconst makePasswordToggle = (id) => {\n    let container = document.getElementById(id);\n\n    if (container) {\n        let password = container.getElementsByTagName(\"input\")[0];\n        let toggler = document.createElement(\"button\");\n        toggler.setAttribute(\"type\", \"button\");\n        toggler.setAttribute(\"aria-label\", \"Show/Hide Password\");\n        toggler.className = \"btn mdi mdi-eye-off-outline position-absolute end-0 top-50 translate-middle-y\";\n        container.appendChild(toggler);\n\n        function showHidePassword() {\n            if (password.type == \"password\") {\n                password.setAttribute(\"type\", \"text\");\n                toggler.classList.add(\"mdi-eye-outline\");\n                toggler.classList.remove(\"mdi-eye-off-outline\");\n            } else {\n                toggler.classList.add(\"mdi-eye-off-outline\");\n                toggler.classList.remove(\"mdi-eye-outline\");\n                password.setAttribute(\"type\", \"password\");\n            }\n            password.focus();\n        };\n\n        toggler.addEventListener(\"click\", showHidePassword);\n    }\n}\n\nconst start = () => {\n    makePasswordToggle(\"passwordDiv\");\n    setFieldFocus(\"email\")\n}\n\nif (document.readyState === \"loading\") {\n    // Loading hasn't finished yet\n    document.addEventListener(\"DOMContentLoaded\", start);\n} else {\n    // `DOMContentLoaded` has already fired\n    start();\n}"
                  },
                  "inputSchema": {
                    "value": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"displayName\": \"Title\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"title\"\n    },\n    \"textOne\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text One\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"textOne\"\n    },\n    \"textTwo\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text Two\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"textTwo\"\n    },\n    \"signonButtonLabel\": {\n      \"type\": \"string\",\n      \"displayName\": \"Sign On Button Label\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"signonButtonLabel\"\n    },\n    \"forgotButtonLabel\": {\n      \"type\": \"string\",\n      \"displayName\": \"Forgot Password Button Label\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"resetButtonLabel\"\n    },\n    \"registerButtonLabel\": {\n      \"type\": \"string\",\n      \"displayName\": \"Register Button Label\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"registerButtonLabel\"\n    }\n  }\n}"
                  },
                  "outputSchema": {
                    "value": {}
                  },
                  "title": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Sign On\"\n      }\n    ]\n  }\n]"
                  },
                  "nodeDescription": {
                    "value": "Prompt for email and password"
                  },
                  "textTwo": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"This reference flow will display the number of days until your password expires.\"\n      }\n    ]\n  }\n]"
                  },
                  "buttonLabel": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Continue\"\n      }\n    ]\n  }\n]"
                  },
                  "signonButtonLabel": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Sign On\"\n      }\n    ]\n  }\n]"
                  }
                }
              },
              "position": {
                "x": 1204,
                "y": 454
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "g33198d8id",
                "nodeType": "EVAL"
              },
              "position": {
                "x": 424,
                "y": 454
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "v5ex5a5rgv",
                "nodeType": "EVAL",
                "label": "Evaluator"
              },
              "position": {
                "x": 1324,
                "y": 454
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "ioizt93sbs",
                "nodeType": "CONNECTION",
                "connectionId": "94141bf2f1b9b59a5f5365ff135e02bb",
                "connectorId": "pingOneSSOConnector",
                "name": "PingOne",
                "label": "PingOne",
                "status": "configured",
                "capabilityName": "checkPassword",
                "type": "action",
                "properties": {
                  "matchAttribute": {
                    "value": "id"
                  },
                  "identifier": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"id\",\n        \"data\": \"{{local.2971uk6anp.payload.output.matchedUser.id}}\",\n        \"tooltip\": \"{{local.2971uk6anp.payload.output.matchedUser.id}}\",\n        \"children\": [\n          {\n            \"text\": \"id\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "password": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"password\",\n        \"data\": \"{{local.6xu63a828o.payload.output.password}}\",\n        \"tooltip\": \"{{local.6xu63a828o.payload.output.password}}\",\n        \"children\": [\n          {\n            \"text\": \"password\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "checkPassword_localizedErrors": {
                    "properties": {
                      "en": {
                        "value": [
                          {
                            "key": "unexpectedError",
                            "value": ""
                          },
                          {
                            "key": "notFound",
                            "value": ""
                          },
                          {
                            "key": "accessFailed",
                            "value": ""
                          },
                          {
                            "key": "noUserMatch",
                            "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Invalid email/password combination\"\n      }\n    ]\n  }\n]"
                          },
                          {
                            "key": "userDisabled",
                            "value": ""
                          },
                          {
                            "key": "noPassword",
                            "value": ""
                          },
                          {
                            "key": "passwordLockedOut",
                            "value": ""
                          },
                          {
                            "key": "passwordNotValid",
                            "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Invalid email/password combination\"\n      }\n    ]\n  }\n]"
                          }
                        ]
                      }
                    }
                  },
                  "nodeTitle": {
                    "value": "Check Credentials"
                  }
                },
                "isDisabled": false
              },
              "position": {
                "x": 1804,
                "y": 454
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "r7ax1jzqjg",
                "nodeType": "EVAL",
                "label": "Evaluator",
                "properties": {
                  "nz4nkl3imt": {
                    "value": "anyTriggersFalse"
                  },
                  "8o1mpeceu1": {
                    "value": "allTriggersTrue"
                  }
                }
              },
              "position": {
                "x": 1924,
                "y": 454
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "nz4nkl3imt",
                "nodeType": "CONNECTION",
                "connectionId": "53ab83a4a4ab919d9f2cb02d9e111ac8",
                "connectorId": "errorConnector",
                "name": "Error Message",
                "label": "Error Message",
                "status": "configured",
                "capabilityName": "customErrorMessage",
                "type": "action",
                "properties": {
                  "errorMessage": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Invalid email/password combination\"\n      }\n    ]\n  }\n]"
                  },
                  "nodeTitle": {
                    "value": "Authentication Error"
                  }
                }
              },
              "position": {
                "x": 2104,
                "y": 604
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "2971uk6anp",
                "nodeType": "CONNECTION",
                "connectionId": "94141bf2f1b9b59a5f5365ff135e02bb",
                "connectorId": "pingOneSSOConnector",
                "name": "PingOne",
                "label": "PingOne",
                "status": "configured",
                "capabilityName": "userLookup",
                "type": "action",
                "properties": {
                  "matchAttributes": {
                    "value": [
                      "email"
                    ]
                  },
                  "userIdentifierForFindUser": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"email\",\n        \"data\": \"{{local.6xu63a828o.payload.output.email}}\",\n        \"tooltip\": \"{{local.6xu63a828o.payload.output.email}}\",\n        \"children\": [\n          {\n            \"text\": \"email\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "nodeTitle": {
                    "value": "Retrieve P1 User"
                  }
                }
              },
              "position": {
                "x": 1504,
                "y": 454
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "amb5csxbou",
                "nodeType": "EVAL",
                "properties": {
                  "nz4nkl3imt": {
                    "value": "anyTriggersFalse"
                  },
                  "vfckgr5g4m": {
                    "value": "anyTriggersFalse"
                  }
                }
              },
              "position": {
                "x": 1624,
                "y": 454
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "ic4lgvxrgn",
                "nodeType": "EVAL"
              },
              "position": {
                "x": 724,
                "y": 454
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "jc2yu77s33",
                "nodeType": "ANNOTATION",
                "name": "Annotation",
                "connectionId": "921bfae85c38ed45045e07be703d86b8",
                "connectorId": "annotationConnector",
                "capabilityName": "updateAnnotationProperties",
                "type": "action",
                "properties": {
                  "backgroundColor": {
                    "value": "#50e3c2ff"
                  },
                  "annotationTextColor": {
                    "value": "#000000"
                  },
                  "annotation": {
                    "value": "Set your API, password policy id details"
                  },
                  "width": {
                    "value": 320
                  },
                  "fontSize": {
                    "value": 14
                  },
                  "fontFamily": {
                    "value": "sans-serif"
                  },
                  "fontStyle": {
                    "value": "normal"
                  },
                  "cornerRadius": {
                    "value": 8
                  },
                  "strokeEnabled": {
                    "value": true
                  },
                  "strokeWidth": {
                    "value": 1
                  },
                  "strokeColor": {
                    "value": "#181818ff"
                  }
                },
                "status": "configured",
                "idUnique": "lb31g4gkg6"
              },
              "position": {
                "x": 454,
                "y": 334
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "1e5yvnzqdp",
                "nodeType": "CONNECTION",
                "connectionId": "de650ca45593b82c49064ead10b9fe17",
                "connectorId": "functionsConnector",
                "name": "Functions",
                "label": "Functions",
                "status": "configured",
                "capabilityName": "customFunction",
                "type": "trigger",
                "properties": {
                  "nodeTitle": {
                    "value": "Flow Configuration Check"
                  },
                  "variableInputList": {
                    "value": [
                      {
                        "name": "p1PasswordPolicyId",
                        "preferredDataType": "string",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"p1PasswordPolicyId\",\n        \"data\": \"{{global.variables.p1PasswordPolicyId}}\",\n        \"tooltip\": \"{{global.variables.p1PasswordPolicyId}}\",\n        \"children\": [\n          {\n            \"text\": \"p1PasswordPolicyId\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      },
                      {
                        "name": "p1ClientId",
                        "preferredDataType": "string",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"p1ClientId\",\n        \"data\": \"{{global.variables.p1ClientId}}\",\n        \"tooltip\": \"{{global.variables.p1ClientId}}\",\n        \"children\": [\n          {\n            \"text\": \"p1ClientId\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      },
                      {
                        "name": "p1ClientSecret",
                        "preferredDataType": "string",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"p1ClientSecret\",\n        \"data\": \"{{global.variables.p1ClientSecret}}\",\n        \"tooltip\": \"{{global.variables.p1ClientSecret}}\",\n        \"children\": [\n          {\n            \"text\": \"p1ClientSecret\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      }
                    ]
                  },
                  "code": {
                    "value": "// Iterate over params object, return false if any\n// passed in parameters are null/empty\nmodule.exports = a = async ({ params }) => {\n\n\tfor (var key in params) {\n\t\tif (!params[key]) {\n\t\t\treturn false; \n\t\t}\n\t}\n\n\treturn \n}"
                  },
                  "outputSchema": {
                    "value": "{\n\t\"output\": {\n\t\t\"type\": \"object\",\n\t\t\"properties\": {\n\t\t\t\n\t\t}\n\t}\n}"
                  },
                  "nodeDescription": {
                    "value": "Add input variables to check for null/empty"
                  }
                }
              },
              "position": {
                "x": 904,
                "y": 454
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "gpny8trtkd",
                "nodeType": "EVAL",
                "properties": {
                  "undefined": {
                    "value": "allTriggersTrue"
                  },
                  "15nulbk44p": {
                    "value": "anyTriggersFalse"
                  }
                }
              },
              "position": {
                "x": 1024,
                "y": 454
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "15nulbk44p",
                "nodeType": "CONNECTION",
                "connectionId": "867ed4363b2bc21c860085ad2baa817d",
                "connectorId": "httpConnector",
                "name": "Http",
                "label": "Http",
                "status": "configured",
                "capabilityName": "customHTMLTemplate",
                "type": "trigger",
                "properties": {
                  "customHTML": {
                    "value": "<div\n  class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n  <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n    <div class=\"card shadow mb-5\">\n      <div class=\"card-body p-5 d-flex flex-column\">\n        <img class=\"companyLogo align-self-center mb-5\" src=\"{{global.variables.companyLogo}}\" alt=\"{{global.variables.companyName}}\" />\n        <h1 class=\"text-center mb-4\">Flow Configuration Error</h1>\n        <p class=\"text-muted text-center\">{{errorMessage}}</p>\n      </div>\n    </div>\n  </div>\n</div>"
                  },
                  "formFieldsList": {
                    "value": [
                      {
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "propertyName": "buttonValue"
                      }
                    ]
                  },
                  "nodeTitle": {
                    "value": "Error Message"
                  },
                  "nodeDescription": {
                    "value": "Configuration value not set error"
                  },
                  "backgroundColor": {
                    "value": "#ffc8c1ff"
                  },
                  "inputSchema": {
                    "value": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"errorMessage\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"displayName\": \"Error Message\",\n\t\t\t\"preferredControlType\": \"textField\",\n\t\t\t\"enableParameters\": true,\n\t\t\t\"propertyName\": \"errorMessage\"\n\t\t}\n\t}\n}"
                  },
                  "outputSchema": {
                    "value": {}
                  },
                  "customCSS": {
                    "value": ""
                  },
                  "customScript": {
                    "value": ""
                  },
                  "validationRules": {
                    "value": []
                  },
                  "errorMessage": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Unable to execute the flow due to missing parameter values.\"\n      }\n    ]\n  }\n]"
                  }
                },
                "idUnique": "3nm07rhtek"
              },
              "position": {
                "x": 1204,
                "y": 634
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "8o1mpeceu1",
                "nodeType": "CONNECTION",
                "connectionId": "2581eb287bb1d9bd29ae9886d675f89f",
                "connectorId": "flowConnector",
                "name": "Flow Connector",
                "label": "Flow Connector",
                "status": "configured",
                "capabilityName": "startSubFlow",
                "type": "action",
                "properties": {
                  "subFlowId": {
                    "value": {
                      "label": "Password Age and Expiry - Subflow",
                      "value": "9a055668a5e0b6c1490f47e28c14eb13"
                    }
                  },
                  "subFlowVersionId": {
                    "value": -1
                  },
                  "p1UserId": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"id\",\n        \"data\": \"{{local.2971uk6anp.payload.output.matchedUser.id}}\",\n        \"tooltip\": \"{{local.2971uk6anp.payload.output.matchedUser.id}}\",\n        \"children\": [\n          {\n            \"text\": \"id\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "p1PasswordPolicyId": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"p1PasswordPolicyId\",\n        \"data\": \"{{global.variables.p1PasswordPolicyId}}\",\n        \"tooltip\": \"{{global.variables.p1PasswordPolicyId}}\",\n        \"children\": [\n          {\n            \"text\": \"p1PasswordPolicyId\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "p1ClientId": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"p1ClientId\",\n        \"data\": \"{{global.variables.p1ClientId}}\",\n        \"tooltip\": \"{{global.variables.p1ClientId}}\",\n        \"children\": [\n          {\n            \"text\": \"p1ClientId\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "p1ClientSecret": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"p1ClientSecret\",\n        \"data\": \"{{global.variables.p1ClientSecret}}\",\n        \"tooltip\": \"{{global.variables.p1ClientSecret}}\",\n        \"children\": [\n          {\n            \"text\": \"p1ClientSecret\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "p1Domain": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"p1TLD\",\n        \"data\": \"{{global.variables.p1TLD}}\",\n        \"tooltip\": \"{{global.variables.p1TLD}}\",\n        \"children\": [\n          {\n            \"text\": \"p1TLD\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "nodeTitle": {
                    "value": "Check Password Expiration"
                  }
                }
              },
              "position": {
                "x": 2104,
                "y": 454
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "v8g97ygce0",
                "nodeType": "CONNECTION",
                "connectionId": "de650ca45593b82c49064ead10b9fe17",
                "connectorId": "functionsConnector",
                "name": "Functions",
                "label": "Functions",
                "status": "configured",
                "capabilityName": "customFunction",
                "type": "trigger",
                "properties": {
                  "variableInputList": {
                    "value": [
                      {
                        "name": "passwordPolicyHasExpiration",
                        "preferredDataType": "boolean",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"flow-connector.svg\",\n        \"url\": \"passwordPolicyHasExpiriation\",\n        \"data\": \"{{local.8o1mpeceu1.payload.output.passwordPolicyHasExpiriation}}\",\n        \"tooltip\": \"{{local.8o1mpeceu1.payload.output.passwordPolicyHasExpiriation}}\",\n        \"children\": [\n          {\n            \"text\": \"passwordPolicyHasExpiriation\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      },
                      {
                        "name": "daysUntilPasswordExpires",
                        "preferredDataType": "number",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"flow-connector.svg\",\n        \"url\": \"daysUntilPasswordExpires\",\n        \"data\": \"{{local.8o1mpeceu1.payload.output.daysUntilPasswordExpires}}\",\n        \"tooltip\": \"{{local.8o1mpeceu1.payload.output.daysUntilPasswordExpires}}\",\n        \"children\": [\n          {\n            \"text\": \"daysUntilPasswordExpires\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      },
                      {
                        "name": "passwordWarningDays",
                        "preferredDataType": "number",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"passwordWarningDays\",\n        \"data\": \"{{global.variables.passwordWarningDays}}\",\n        \"tooltip\": \"{{global.variables.passwordWarningDays}}\",\n        \"children\": [\n          {\n            \"text\": \"passwordWarningDays\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      },
                      {
                        "name": "userHasPassword",
                        "preferredDataType": "boolean",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"flow-connector.svg\",\n        \"url\": \"userHasPassword\",\n        \"data\": \"{{local.8o1mpeceu1.payload.output.userHasPassword}}\",\n        \"tooltip\": \"{{local.8o1mpeceu1.payload.output.userHasPassword}}\",\n        \"children\": [\n          {\n            \"text\": \"userHasPassword\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      }
                    ]
                  },
                  "code": {
                    "value": "/**\n * Checks if a password is about to expire.\n *\n * @param {boolean} params.passwordPolicyHasExpiration - Indicates if the password policy includes an expiration.\n * @param {number} params.daysUntilPasswordExpires - The number of days until the password expires.\n * @param {number} params.passwordWarningDays - The number of days before expiration to start warning the user.\n * @param {boolean} params.userHasPassword - Indicates if the user has a password.\n * @returns {boolean} - Returns false if the password is about to expire, true otherwise.\n */\nmodule.exports = a = async ({params}) => {\n\tconst { passwordPolicyHasExpiration, daysUntilPasswordExpires, passwordWarningDays, userHasPassword } = params;\n\n\tif (userHasPassword && passwordPolicyHasExpiration && daysUntilPasswordExpires <= passwordWarningDays ) {\n\t\treturn false;\n\t}\n\treturn \n}"
                  },
                  "nodeTitle": {
                    "value": "Password Expiry Check"
                  },
                  "nodeDescription": {
                    "value": "Is Password outside of warning range"
                  }
                },
                "isDisabled": false
              },
              "position": {
                "x": 2404,
                "y": 454
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "fybkjlp0sv",
                "nodeType": "EVAL"
              },
              "position": {
                "x": 2224,
                "y": 454
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "d9talj38t0",
                "nodeType": "EVAL",
                "properties": {
                  "6z3ztkakq0": {
                    "value": "anyTriggersFalse"
                  },
                  "79pgzj7jlr": {
                    "value": "anyTriggersFalse"
                  }
                }
              },
              "position": {
                "x": 2524,
                "y": 454
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "1yb7gfizup",
                "nodeType": "CONNECTION",
                "connectionId": "867ed4363b2bc21c860085ad2baa817d",
                "connectorId": "httpConnector",
                "name": "Http",
                "label": "Http",
                "status": "configured",
                "capabilityName": "customHTMLTemplate",
                "type": "trigger",
                "properties": {
                  "inputSchema": {
                    "value": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"title\": {\n            \"type\": \"string\",\n            \"displayName\": \"Title\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true,\n            \"propertyName\": \"title\"\n        },\n        \"textOne\": {\n            \"type\": \"string\",\n            \"displayName\": \"Text One\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true,\n            \"propertyName\": \"textOne\"\n        },\n        \"passwordPolicyHasExpiration\": {\n            \"type\": \"boolean\",\n            \"displayName\": \"Password Policy Has Expiration\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true\n        },\n        \"passwordExpirationDays\": {\n            \"type\": \"string\",\n            \"displayName\": \"Password Expiration Days\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true\n        },\n        \"passwordWarningDays\": {\n            \"type\": \"string\",\n            \"displayName\": \"Password Warning Days\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true\n        },\n        \"buttonLabel\": {\n            \"type\": \"string\",\n            \"displayName\": \"Button Label\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true,\n            \"propertyName\": \"buttonLabel\"\n        }\n    }\n}"
                  },
                  "outputSchema": {
                    "value": {}
                  },
                  "customHTML": {
                    "value": "<div class=\"end-user-nano\">\n  <div\n    class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n    <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n      <div class=\"card shadow mb-5\">\n        <div class=\"card-body p-5 d-flex flex-column\">\n          <img class=\"companyLogo align-self-center mb-5\" src=\"{{global.variables.companyLogo}}\" alt=\"{{global.variables.companyName}}\" />\n\n          {{#if title}}\n          <h1 class=\"text-center mb-4\">{{title}}</h1>\n          {{/if}}\n\n          {{#if textOne}}\n          <p class=\"text-muted text-center\">{{textOne}}</p>\n          {{/if}}\n\n          {{#if passwordPolicyHasExpiration}}\n          <p class=\"text-muted text-center\">Your password will expire in <strong>{{passwordExpirationDays}}</strong> days.</p>\n          <p class=\"text-muted text-center\">You'll begin to receive warnings to update your password <strong>{{passwordWarningDays}}</strong> days before it expires.</p>\n          {{else}}\n          <p class=\"text-muted text-center\">Your password doesn't expire.</p>\n          {{/if}}\n\n          {{#if buttonLabel}}\n          <div class=\"d-flex flex-column\">\n            <button data-id=\"next-button\" type=\"submit\" class=\"btn btn-primary mb-3\" data-skcomponent=\"skbutton\"\n             data-skbuttontype=\"next-event\"  data-skbuttonvalue=\"NEXT\" id=\"btnNext\">\n                {{buttonLabel}}\n            </button>\n          </div>\n          {{/if}}\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"
                  },
                  "customCSS": {
                    "value": ""
                  },
                  "customScript": {
                    "value": ""
                  },
                  "validationRules": {
                    "value": []
                  },
                  "title": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Password Healthy\"\n      }\n    ]\n  }\n]"
                  },
                  "textOne": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Your password does not require updating at this time.\"\n      }\n    ]\n  }\n]"
                  },
                  "formFieldsList": {
                    "value": [
                      {
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "propertyName": "buttonValue"
                      }
                    ]
                  },
                  "nodeTitle": {
                    "value": "Password is Healthy"
                  },
                  "nodeDescription": {},
                  "passwordPolicyHasExpiration": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"flow-connector.svg\",\n        \"url\": \"passwordPolicyHasExpiriation\",\n        \"data\": \"{{local.8o1mpeceu1.payload.output.passwordPolicyHasExpiriation}}\",\n        \"tooltip\": \"{{local.8o1mpeceu1.payload.output.passwordPolicyHasExpiriation}}\",\n        \"children\": [\n          {\n            \"text\": \"passwordPolicyHasExpiriation\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "passwordExpirationDays": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"flow-connector.svg\",\n        \"url\": \"daysUntilPasswordExpires\",\n        \"data\": \"{{local.8o1mpeceu1.payload.output.daysUntilPasswordExpires}}\",\n        \"tooltip\": \"{{local.8o1mpeceu1.payload.output.daysUntilPasswordExpires}}\",\n        \"children\": [\n          {\n            \"text\": \"daysUntilPasswordExpires\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "oeInteractionCacheExpire": {
                    "value": true
                  },
                  "passwordWarningDays": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"passwordWarningDays\",\n        \"data\": \"{{global.variables.passwordWarningDays}}\",\n        \"tooltip\": \"{{global.variables.passwordWarningDays}}\",\n        \"children\": [\n          {\n            \"text\": \"passwordWarningDays\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  }
                },
                "idUnique": "8rsda1hj30"
              },
              "position": {
                "x": 2704,
                "y": 454
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "79pgzj7jlr",
                "nodeType": "CONNECTION",
                "connectionId": "867ed4363b2bc21c860085ad2baa817d",
                "connectorId": "httpConnector",
                "name": "Http",
                "label": "Http",
                "status": "configured",
                "capabilityName": "customHTMLTemplate",
                "type": "trigger",
                "properties": {
                  "inputSchema": {
                    "value": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"title\": {\n            \"type\": \"string\",\n            \"displayName\": \"Title\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true,\n            \"propertyName\": \"title\"\n        },\n\t\t\"textOne\": {\n            \"type\": \"string\",\n            \"displayName\": \"Text One\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true,\n            \"propertyName\": \"textOne\"\n        },\n\t\t\"passwordPolicyHasExpiration\": {\n            \"type\": \"boolean\",\n            \"displayName\": \"Password Policy Has Expiration\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true\n        },\n        \"passwordExpirationDays\": {\n            \"type\": \"string\",\n            \"displayName\": \"Password Expiration Days\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true\n        },\n        \"passwordPolicyMaxAge\": {\n            \"type\": \"string\",\n            \"displayName\": \"Password Policy Max Age\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true\n        },\n        \"passwordWarningDays\": {\n            \"type\": \"string\",\n            \"displayName\": \"Password Warning Days\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true\n        },\n\t\t\"buttonLabel\": {\n            \"type\": \"string\",\n            \"displayName\": \"Button Label\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true,\n            \"propertyName\": \"buttonLabel\"\n        }\n    }\n}"
                  },
                  "outputSchema": {
                    "value": {}
                  },
                  "customHTML": {
                    "value": "<div class=\"end-user-nano\">\n  <div\n    class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n    <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n      <div class=\"card shadow mb-5\">\n        <div class=\"card-body p-5 d-flex flex-column\">\n          <img class=\"companyLogo align-self-center mb-5\" src=\"{{global.variables.companyLogo}}\" alt=\"{{global.variables.companyName}}\" />\n\n          {{#if title}}\n          <h1 class=\"text-center mb-4\">{{title}}</h1>\n          {{/if}}\n\n          {{#if textOne}}\n          <p class=\"text-muted text-center\">{{textOne}}</p>\n          {{/if}}\n\n          {{#if passwordPolicyMaxAge}}\n          <p class=\"text-muted text-center\">Your password policy requires a new password every <strong>{{passwordPolicyMaxAge}}</strong> days.</p>\n          {{/if}}\n\n          {{#if passwordPolicyHasExpiration}}\n          <p class=\"text-muted text-center\">Your password will expire in <strong>{{passwordExpirationDays}}</strong> days.</p>\n          {{/if}}\n\n           {{#if passwordWarningDays}}\n          <p class=\"text-muted text-center\">The threshold for warnings is set to <strong>{{passwordWarningDays}}</strong> days.</p>\n          {{/if}}\n\n          \n\n          {{#if buttonLabel}}\n          <div class=\"d-flex flex-column\">\n            <button data-id=\"next-button\" type=\"submit\" class=\"btn btn-primary mb-3\" data-skcomponent=\"skbutton\"\n             data-skbuttontype=\"next-event\"  data-skbuttonvalue=\"NEXT\" id=\"btnNext\">\n                {{buttonLabel}}\n            </button>\n          </div>\n          {{/if}}\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"
                  },
                  "customCSS": {
                    "value": ""
                  },
                  "customScript": {
                    "value": ""
                  },
                  "validationRules": {
                    "value": []
                  },
                  "title": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Password Expiry Warning\"\n      }\n    ]\n  }\n]"
                  },
                  "textOne": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Your password requires updating.\"\n      }\n    ]\n  }\n]"
                  },
                  "formFieldsList": {
                    "value": [
                      {
                        "preferredControlType": "textField",
                        "preferredDataType": "string",
                        "propertyName": "buttonValue"
                      }
                    ]
                  },
                  "nodeTitle": {
                    "value": "Password Needs Updating"
                  },
                  "nodeDescription": {},
                  "passwordPolicyHasExpiration": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"flow-connector.svg\",\n        \"url\": \"passwordPolicyHasExpiriation\",\n        \"data\": \"{{local.8o1mpeceu1.payload.output.passwordPolicyHasExpiriation}}\",\n        \"tooltip\": \"{{local.8o1mpeceu1.payload.output.passwordPolicyHasExpiriation}}\",\n        \"children\": [\n          {\n            \"text\": \"passwordPolicyHasExpiriation\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "passwordExpirationDays": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"flow-connector.svg\",\n        \"url\": \"daysUntilPasswordExpires\",\n        \"data\": \"{{local.8o1mpeceu1.payload.output.daysUntilPasswordExpires}}\",\n        \"tooltip\": \"{{local.8o1mpeceu1.payload.output.daysUntilPasswordExpires}}\",\n        \"children\": [\n          {\n            \"text\": \"daysUntilPasswordExpires\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "oeInteractionCacheExpire": {
                    "value": true
                  },
                  "passwordPolicyMaxAge": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"flow-connector.svg\",\n        \"url\": \"passwordPolicyMaxAge\",\n        \"data\": \"{{local.8o1mpeceu1.payload.output.passwordPolicyMaxAge}}\",\n        \"tooltip\": \"{{local.8o1mpeceu1.payload.output.passwordPolicyMaxAge}}\",\n        \"children\": [\n          {\n            \"text\": \"passwordPolicyMaxAge\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "passwordWarningDays": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"passwordWarningDays\",\n        \"data\": \"{{global.variables.passwordWarningDays}}\",\n        \"tooltip\": \"{{global.variables.passwordWarningDays}}\",\n        \"children\": [\n          {\n            \"text\": \"passwordWarningDays\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  }
                },
                "idUnique": "86dm8cpenn"
              },
              "position": {
                "x": 2704,
                "y": 634
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            }
          ],
          "edges": [
            {
              "data": {
                "id": "nhdn1smtxe",
                "source": "m3soewtwmm",
                "target": "g33198d8id"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "6jj9lxuqnv",
                "source": "r7ax1jzqjg",
                "target": "8o1mpeceu1"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "sjbptctdvp",
                "source": "amb5csxbou",
                "target": "nz4nkl3imt"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "vp5xmj9an5",
                "source": "8o1mpeceu1",
                "target": "fybkjlp0sv"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "ktvb1mmtpm",
                "source": "gpny8trtkd",
                "target": "6xu63a828o"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "iy4n6c7h2k",
                "source": "6xu63a828o",
                "target": "v5ex5a5rgv"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "js4wzo3a7",
                "source": "fybkjlp0sv",
                "target": "v8g97ygce0"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "uj0pdc5tgb",
                "source": "v8g97ygce0",
                "target": "d9talj38t0"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "7a52dmco1i",
                "source": "d9talj38t0",
                "target": "1yb7gfizup"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "iog6fpa2q5",
                "source": "scgf64t73j",
                "target": "ic4lgvxrgn"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "d05dd7zdsv",
                "source": "d9talj38t0",
                "target": "79pgzj7jlr"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "dsjyu2cwrn",
                "source": "ioizt93sbs",
                "target": "r7ax1jzqjg"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "982e4r16fm",
                "source": "ic4lgvxrgn",
                "target": "1e5yvnzqdp"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "dmcjb4a9bp",
                "source": "r7ax1jzqjg",
                "target": "nz4nkl3imt"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "ien27hfrbf",
                "source": "g33198d8id",
                "target": "scgf64t73j"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "nskkqtdlpo",
                "source": "1e5yvnzqdp",
                "target": "gpny8trtkd"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "92p27icwpe",
                "source": "v5ex5a5rgv",
                "target": "2971uk6anp"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "edjazib1xd",
                "source": "2971uk6anp",
                "target": "amb5csxbou"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "jq03cutxhl",
                "source": "amb5csxbou",
                "target": "ioizt93sbs"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "c31lx5dnr4",
                "source": "gpny8trtkd",
                "target": "15nulbk44p"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            }
          ]
        },
        "data": {},
        "zoomingEnabled": true,
        "userZoomingEnabled": true,
        "zoom": 1,
        "minZoom": 1e-50,
        "maxZoom": 1e+50,
        "panningEnabled": true,
        "userPanningEnabled": true,
        "pan": {
          "x": 0,
          "y": 0
        },
        "boxSelectionEnabled": true,
        "renderer": {
          "name": "null"
        }
      },
      "flowColor": "#ff661c",
      "savedDate": 1718798953053,
      "variables": [
        {
          "context": "flowInstance",
          "createdDate": 1718725070678,
          "fields": {
            "type": "string",
            "displayName": "",
            "mutable": true,
            "min": 0,
            "max": 2000
          },
          "id": "70e7704d-45a7-4be1-9fad-2e0c51dcc966",
          "type": "property",
          "visibility": "private",
          "name": "companyName##SK##flowInstance",
          "companyId": ""
        },
        {
          "context": "flowInstance",
          "createdDate": 1718727235134,
          "customerId": "f3e47d945ae971a4b4142ec75012d155",
          "fields": {
            "type": "string",
            "displayName": "PingOne Client Application Id",
            "mutable": true,
            "min": 0,
            "max": 2000
          },
          "id": "ee895b6b-8fe2-42ec-b454-49c344aed36a",
          "type": "property",
          "visibility": "private",
          "name": "p1ClientId##SK##flowInstance",
          "companyId": ""
        },
        {
          "context": "flowInstance",
          "createdDate": 1718727291784,
          "customerId": "f3e47d945ae971a4b4142ec75012d155",
          "fields": {
            "type": "string",
            "displayName": "PingOne Client Application Secret",
            "mutable": true,
            "min": 0,
            "max": 2000
          },
          "id": "d650468f-2c67-4199-afdf-a2d6bcf436f9",
          "type": "property",
          "visibility": "private",
          "name": "p1ClientSecret##SK##flowInstance",
          "companyId": ""
        },
        {
          "context": "flowInstance",
          "createdDate": 1718727181277,
          "customerId": "f3e47d945ae971a4b4142ec75012d155",
          "fields": {
            "type": "string",
            "displayName": "",
            "mutable": true,
            "min": 0,
            "max": 2000
          },
          "id": "a7936736-4a14-4a6a-9aa4-a8519dae3fe7",
          "type": "property",
          "visibility": "private",
          "name": "p1PasswordPolicyId##SK##flowInstance",
          "companyId": ""
        },
        {
          "context": "flowInstance",
          "createdDate": 1718725105223,
          "fields": {
            "type": "string",
            "displayName": "",
            "mutable": true,
            "min": 0,
            "max": 2000
          },
          "id": "975e33dc-b297-48db-b693-770baa841d4e",
          "type": "property",
          "visibility": "private",
          "name": "p1TLD##SK##flowInstance",
          "companyId": ""
        },
        {
          "context": "flowInstance",
          "createdDate": 1718735667401,
          "customerId": "f3e47d945ae971a4b4142ec75012d155",
          "fields": {
            "type": "number",
            "displayName": "",
            "value": "10",
            "mutable": true,
            "min": 0,
            "max": 2000
          },
          "id": "c25b30c2-88a2-43d3-9989-a5dfd7751e61",
          "type": "property",
          "visibility": "private",
          "name": "passwordWarningDays##SK##flowInstance",
          "companyId": ""
        }
      ],
      "connections": [],
      "parentFlowId": "bb501e2097c0ef05e8c4fbd07b81e005"
    },
    {
      "companyId": "",
      "authTokenExpireIds": [],
      "connectorIds": [
        "variablesConnector",
        "httpConnector",
        "functionsConnector",
        "annotationConnector",
        "nodeConnector"
      ],
      "createdDate": 1718796441167,
      "currentVersion": 1,
      "customerId": "",
      "description": "Last Updated: June 18th, 2024",
      "flowStatus": "enabled",
      "inputSchemaCompiled": {
        "parameters": {
          "type": "object",
          "properties": {
            "p1UserId": {
              "description": "PingOne User Id",
              "preferredDataType": "string",
              "isExpanded": true,
              "type": "string",
              "name": "p1UserId"
            },
            "p1PasswordPolicyId": {
              "description": "PingOne Password Policy Id",
              "preferredDataType": "string",
              "isExpanded": true,
              "type": "string",
              "name": "p1PasswordPolicyId"
            },
            "p1ClientId": {
              "description": "PingOne Client Id",
              "preferredDataType": "string",
              "isExpanded": true,
              "type": "string",
              "name": "p1ClientId"
            },
            "p1ClientSecret": {
              "description": "PingOne Client Secret",
              "preferredDataType": "string",
              "isExpanded": true,
              "type": "string",
              "name": "p1ClientSecret"
            },
            "p1Domain": {
              "description": "PingOne Domain (Eg com, eu)",
              "preferredDataType": "string",
              "isExpanded": true,
              "type": "string",
              "name": "p1Domain"
            }
          },
          "additionalProperties": false,
          "required": [
            "p1UserId",
            "p1PasswordPolicyId",
            "p1ClientId",
            "p1ClientSecret",
            "p1Domain"
          ]
        }
      },
      "isInputSchemaSaved": true,
      "isOutputSchemaSaved": false,
      "name": "Password Age and Expiry - Subflow",
      "publishedVersion": 1,
      "settings": {
        "csp": "worker-src 'self' blob:; script-src 'self' https://cdn.jsdelivr.net https://code.jquery.com https://devsdk.singularkey.com http://cdnjs.cloudflare.com 'unsafe-inline' 'unsafe-eval';",
        "intermediateLoadingScreenCSS": "",
        "intermediateLoadingScreenHTML": "",
        "logLevel": 2,
        "customTitle": "PingOne Days Until Password Expiry",
        "customFaviconLink": "https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png",
        "useCustomCSS": false,
        "cssLinks": []
      },
      "timeouts": "null",
      "updatedDate": 1718796458153,
      "flowId": "9a055668a5e0b6c1490f47e28c14eb13",
      "versionId": 1,
      "graphData": {
        "elements": {
          "nodes": [
            {
              "data": {
                "id": "scgf64t73j",
                "nodeType": "CONNECTION",
                "connectionId": "06922a684039827499bdbdd97f49827b",
                "connectorId": "variablesConnector",
                "name": "Variables",
                "label": "Variables",
                "status": "configured",
                "capabilityName": "saveValue",
                "type": "trigger",
                "properties": {
                  "saveVariables": {
                    "value": [
                      {
                        "name": "p1PasswordPolicyId",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"auth.svg\",\n        \"url\": \"p1PasswordPolicyId\",\n        \"data\": \"{{global.parameters.p1PasswordPolicyId}}\",\n        \"tooltip\": \"{{global.parameters.p1PasswordPolicyId}}\",\n        \"children\": [\n          {\n            \"text\": \"p1PasswordPolicyId\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                        "key": 0.6509346346737181,
                        "label": "p1PasswordPolicyId (string - flowInstance)",
                        "type": "string",
                        "nameDefault": "p1PasswordPolicyId"
                      },
                      {
                        "name": "p1ClientId",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"auth.svg\",\n        \"url\": \"p1ClientId\",\n        \"data\": \"{{global.parameters.p1ClientId}}\",\n        \"tooltip\": \"{{global.parameters.p1ClientId}}\",\n        \"children\": [\n          {\n            \"text\": \"p1ClientId\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                        "key": 0.5544264360896436,
                        "label": "p1ClientId (string - flowInstance)",
                        "type": "string",
                        "nameDefault": "p1ClientId"
                      },
                      {
                        "name": "p1ClientSecret",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"auth.svg\",\n        \"url\": \"p1ClientSecret\",\n        \"data\": \"{{global.parameters.p1ClientSecret}}\",\n        \"tooltip\": \"{{global.parameters.p1ClientSecret}}\",\n        \"children\": [\n          {\n            \"text\": \"p1ClientSecret\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                        "key": 0.8284716406920605,
                        "label": "p1ClientSecret (string - flowInstance)",
                        "type": "string",
                        "nameDefault": "p1ClientSecret"
                      },
                      {
                        "name": "p1TLD",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"auth.svg\",\n        \"url\": \"p1Domain\",\n        \"data\": \"{{global.parameters.p1Domain}}\",\n        \"tooltip\": \"{{global.parameters.p1Domain}}\",\n        \"children\": [\n          {\n            \"text\": \"p1Domain\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                        "key": 0.7314366075845637,
                        "label": "p1TLD (string - flowInstance)",
                        "type": "string",
                        "nameDefault": "p1Domain"
                      },
                      {
                        "name": "p1UserId",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"auth.svg\",\n        \"url\": \"p1UserId\",\n        \"data\": \"{{global.parameters.p1UserId}}\",\n        \"tooltip\": \"{{global.parameters.p1UserId}}\",\n        \"children\": [\n          {\n            \"text\": \"p1UserId\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                        "key": 0.6877929322658345,
                        "label": "p1UserId (string - flowInstance)",
                        "type": "string",
                        "nameDefault": "p1UserId"
                      }
                    ]
                  },
                  "nodeTitle": {
                    "value": "Configure API Settings"
                  }
                }
              },
              "position": {
                "x": 330,
                "y": 480
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "i0t27zilzl",
                "nodeType": "CONNECTION",
                "connectionId": "867ed4363b2bc21c860085ad2baa817d",
                "connectorId": "httpConnector",
                "name": "Http",
                "label": "HTTP",
                "status": "configured",
                "capabilityName": "makeRestApiCall",
                "type": "trigger",
                "properties": {
                  "nodeTitle": {
                    "value": "Get Access Token"
                  },
                  "url": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"https://auth.pingone.\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"p1TLD\",\n        \"data\": \"{{global.variables.p1TLD}}\",\n        \"tooltip\": \"{{global.variables.p1TLD}}\",\n        \"children\": [\n          {\n            \"text\": \"p1TLD\"\n          }\n        ]\n      },\n      {\n        \"text\": \"/\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"auth.svg\",\n        \"url\": \"companyId\",\n        \"data\": \"{{global.companyId}}\",\n        \"tooltip\": \"{{global.companyId}}\",\n        \"children\": [\n          {\n            \"text\": \"companyId\"\n          }\n        ]\n      },\n      {\n        \"text\": \"/as/token\"\n      }\n    ]\n  }\n]"
                  },
                  "httpMethod": {
                    "value": "POST"
                  },
                  "httpBody": {
                    "value": "xwwwFormUrlEncoded"
                  },
                  "bodyParams": {
                    "value": [
                      {
                        "key": "grant_type",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"client_credentials\"\n      }\n    ]\n  }\n]"
                      }
                    ]
                  },
                  "headers": {
                    "value": [
                      {
                        "key": "Authorization",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Basic \"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"functions.svg\",\n        \"url\": \"encodedCredentials\",\n        \"data\": \"{{local.x8uzxb8vs2.payload.output.encodedCredentials}}\",\n        \"tooltip\": \"{{local.x8uzxb8vs2.payload.output.encodedCredentials}}\",\n        \"children\": [\n          {\n            \"text\": \"encodedCredentials\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      }
                    ]
                  },
                  "nodeDescription": {
                    "value": "API Call to P1 to retrieve Access Token"
                  }
                }
              },
              "position": {
                "x": 930,
                "y": 480
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "ru53iptn7b",
                "nodeType": "EVAL",
                "label": "Evaluator",
                "properties": {
                  "il5p2bi3jz": {
                    "value": "anyTriggersFalse"
                  }
                }
              },
              "position": {
                "x": 1050,
                "y": 480
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "7r0u675r0s",
                "nodeType": "CONNECTION",
                "connectionId": "867ed4363b2bc21c860085ad2baa817d",
                "connectorId": "httpConnector",
                "name": "Http",
                "label": "HTTP",
                "status": "configured",
                "capabilityName": "makeRestApiCall",
                "type": "trigger",
                "properties": {
                  "nodeTitle": {
                    "value": "Get user password state"
                  },
                  "url": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"https://api.pingone.\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"p1TLD\",\n        \"data\": \"{{global.variables.p1TLD}}\",\n        \"tooltip\": \"{{global.variables.p1TLD}}\",\n        \"children\": [\n          {\n            \"text\": \"p1TLD\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"/v1\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"/environments/\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"auth.svg\",\n        \"url\": \"companyId\",\n        \"data\": \"{{global.companyId}}\",\n        \"tooltip\": \"{{global.companyId}}\",\n        \"children\": [\n          {\n            \"text\": \"companyId\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"/users/\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"p1UserId\",\n        \"data\": \"{{global.variables.p1UserId}}\",\n        \"tooltip\": \"{{global.variables.p1UserId}}\",\n        \"children\": [\n          {\n            \"text\": \"p1UserId\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"/password\"\n      }\n    ]\n  }\n]"
                  },
                  "headers": {
                    "value": [
                      {
                        "key": "Authorization",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Bearer {{local.i0t27zilzl.payload.output.rawResponse.body.access_token}}\"\n      }\n    ]\n  }\n]"
                      }
                    ]
                  }
                }
              },
              "position": {
                "x": 1230,
                "y": 480
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "m7yig0jeg7",
                "nodeType": "CONNECTION",
                "connectionId": "867ed4363b2bc21c860085ad2baa817d",
                "connectorId": "httpConnector",
                "name": "Http",
                "label": "HTTP",
                "status": "configured",
                "capabilityName": "makeRestApiCall",
                "type": "trigger",
                "properties": {
                  "nodeTitle": {
                    "value": "Get password policy detail"
                  },
                  "url": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"https://api.pingone.\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"p1TLD\",\n        \"data\": \"{{global.variables.p1TLD}}\",\n        \"tooltip\": \"{{global.variables.p1TLD}}\",\n        \"children\": [\n          {\n            \"text\": \"p1TLD\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"/v1\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"/environments/\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"auth.svg\",\n        \"url\": \"companyId\",\n        \"data\": \"{{global.companyId}}\",\n        \"tooltip\": \"{{global.companyId}}\",\n        \"children\": [\n          {\n            \"text\": \"companyId\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"/passwordPolicies/\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"p1PasswordPolicyId\",\n        \"data\": \"{{global.variables.p1PasswordPolicyId}}\",\n        \"tooltip\": \"{{global.variables.p1PasswordPolicyId}}\",\n        \"children\": [\n          {\n            \"text\": \"p1PasswordPolicyId\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  "headers": {
                    "value": [
                      {
                        "key": "Authorization",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Bearer {{local.i0t27zilzl.payload.output.rawResponse.body.access_token}}\"\n      }\n    ]\n  }\n]"
                      }
                    ]
                  }
                }
              },
              "position": {
                "x": 1530,
                "y": 480
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "3c43mpbpy5",
                "nodeType": "CONNECTION",
                "connectionId": "de650ca45593b82c49064ead10b9fe17",
                "connectorId": "functionsConnector",
                "name": "Functions",
                "label": "Functions",
                "status": "configured",
                "capabilityName": "customFunction",
                "type": "trigger",
                "properties": {
                  "nodeTitle": {
                    "value": "Calculate Days Until Password Expires"
                  },
                  "code": {
                    "value": "/**\n * Determines the password expiration status and days until expiration.\n * \n * @param {string} params.passwordStatus - The current password status (\"NO_PASSWORD\" or other).\n * @param {string} params.lastChangedAt - The date when the password was last changed.\n * @param {string|number} params.maxAgeDays - The maximum age of the password in days.\n * @returns {Object} - An object containing password expiration policy status and days until expiration.\n * @returns {boolean} return.policyHasExpiration - Indicates if the password policy includes an expiration.\n * @returns {boolean} return.userHasPassword - Indicates if the user has a password.\n * @returns {number|string} return.daysUntilExpire - The number of days until the password expires or \"ERROR\" if date calculation failed.\n * @returns {number} return.maxAgeDays - The maximum age of the password in days.\n */\nmodule.exports = async ({ params }) => {\n  const { passwordStatus, lastChangedAt, maxAgeDays } = params;\n  const maxAge = parseInt(maxAgeDays);\n\n  if (passwordStatus === \"NO_PASSWORD\") {\n    return {\n      policyHasExpiration: Boolean(maxAgeDays),\n      userHasPassword: false,\n      daysUntilExpire: 0,\n      maxAgeDays: maxAgeDays\n    };\n  }\n\n  if (!maxAgeDays) {\n    return {\n      policyHasExpiration: false,\n      userHasPassword: passwordStatus !== \"NO_PASSWORD\",\n      daysUntilExpire: 0,\n      maxAgeDays: maxAgeDays\n    };\n  }\n\n  try {\n    const passwordExpireDate = new Date(Date.parse(lastChangedAt));\n    const today = new Date();\n\n    // Check if the parsed dates are valid\n    if (isNaN(passwordExpireDate.getTime()) || isNaN(today.getTime())) {\n      throw new Error(\"Invalid date format\");\n    }\n\n    passwordExpireDate.setDate(passwordExpireDate.getDate() + maxAge);\n\n    const daysLeft = Math.round((passwordExpireDate - today) / (1000 * 60 * 60 * 24));\n\n    return {\n      policyHasExpiration: true,\n      userHasPassword: true,\n      daysUntilExpire: daysLeft,\n      maxAgeDays: maxAgeDays\n    };\n  } catch (error) {\n    console.error(\"Error calculating password expiration date:\", error.message);\n    return {\n      policyHasExpiration: false,\n      userHasPassword: true,\n      daysUntilExpire: \"ERROR\", // Indicates an error in date calculation\n      maxAgeDays: maxAgeDays\n    };\n  }\n};\n"
                  },
                  "variableInputList": {
                    "value": [
                      {
                        "name": "lastChangedAt",
                        "preferredDataType": "string",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"moustache\",\n        \"data\": \"{{local.7r0u675r0s.payload.output.rawResponse.body.lastChangedAt}}\",\n        \"name\": \"lastChangedAt\",\n        \"children\": [\n          {\n            \"text\": \"\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      },
                      {
                        "name": "maxAgeDays",
                        "preferredDataType": "string",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"moustache\",\n        \"data\": \"{{local.m7yig0jeg7.payload.output.rawResponse.body.maxAgeDays}}\",\n        \"name\": \"maxAgeDays\",\n        \"children\": [\n          {\n            \"text\": \"\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      },
                      {
                        "name": "passwordStatus",
                        "preferredDataType": "string",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"moustache\",\n        \"data\": \"{{local.7r0u675r0s.payload.output.rawResponse.body.status}}\",\n        \"name\": \"status\",\n        \"children\": [\n          {\n            \"text\": \"\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      }
                    ]
                  },
                  "outputSchema": {
                    "value": "{\n\t\"output\": {\n\t\t\"type\": \"object\",\n\t\t\"properties\": {\n\t\t\t\"policyHasExpiration\": {\n\t\t\t\t\"type\": \"boolean\"\n\t\t\t},\n\t\t\t\"userHasPassword\": {\n\t\t\t\t\"type\": \"boolean\"\n\t\t\t},\n\t\t\t\"daysUntilExpire\": {\n\t\t\t\t\"type\": \"number\"\n\t\t\t},\n\t\t\t\"maxAgeDays\": {\n\t\t\t\t\"type\": \"number\"\n\t\t\t}\n\t\t}\n\t}\n}"
                  }
                }
              },
              "position": {
                "x": 1830,
                "y": 480
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "54ptc4k8na",
                "nodeType": "EVAL",
                "label": "Evaluator",
                "properties": {
                  "9ubftixtze": {
                    "value": "anyTriggersFalse"
                  }
                }
              },
              "position": {
                "x": 1950,
                "y": 480
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "x8uzxb8vs2",
                "nodeType": "CONNECTION",
                "connectionId": "de650ca45593b82c49064ead10b9fe17",
                "connectorId": "functionsConnector",
                "name": "Functions",
                "label": "Functions",
                "status": "configured",
                "capabilityName": "customFunction",
                "type": "trigger",
                "properties": {
                  "nodeTitle": {
                    "value": "Base 64 encode credentials"
                  },
                  "code": {
                    "value": "/**\n * Encode basic credentials\n * @param {string} clientId - The client Id to encode\n * @param {string} clientSecret - The client secret to encode\n * @returns {string} base64 encoded clientId:clientSecret\n */\nmodule.exports = a = async ({ params }) => {\n  const clientId = params.clientId;\n  const clientSecret = params.clientSecret;\n\n  // If either value is missing, return an error\n  if (!clientId || !clientSecret) {\n    return false;\n  }\n\n  const encodedCredentials = new Buffer(clientId + \":\" + clientSecret).toString(\"base64\");\n\n  return { 'encodedCredentials': encodedCredentials }\n}"
                  },
                  "variableInputList": {
                    "value": [
                      {
                        "name": "clientId",
                        "preferredDataType": "string",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"p1ClientId\",\n        \"data\": \"{{global.variables.p1ClientId}}\",\n        \"tooltip\": \"{{global.variables.p1ClientId}}\",\n        \"children\": [\n          {\n            \"text\": \"p1ClientId\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      },
                      {
                        "name": "clientSecret",
                        "preferredDataType": "string",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"p1ClientSecret\",\n        \"data\": \"{{global.variables.p1ClientSecret}}\",\n        \"tooltip\": \"{{global.variables.p1ClientSecret}}\",\n        \"children\": [\n          {\n            \"text\": \"p1ClientSecret\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                      }
                    ]
                  },
                  "outputSchema": {
                    "value": "{\n\t\"output\": {\n\t\t\"type\": \"object\",\n\t\t\"properties\": {\n\t\t\t\"encodedCredentials\": {\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t}\n\t}\n}"
                  }
                }
              },
              "position": {
                "x": 630,
                "y": 480
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "tsuwjnwaau",
                "nodeType": "EVAL"
              },
              "position": {
                "x": 750,
                "y": 480
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "hm5j7gfrxe",
                "nodeType": "ANNOTATION",
                "name": "Annotation",
                "connectionId": "921bfae85c38ed45045e07be703d86b8",
                "connectorId": "annotationConnector",
                "capabilityName": "updateAnnotationProperties",
                "type": "action",
                "properties": {
                  "backgroundColor": {
                    "value": "#ffffffff"
                  },
                  "annotationTextColor": {
                    "value": "#000000"
                  },
                  "annotation": {
                    "value": "If either the user has no password, or the password policy does not enforce expiration, the number of days until the password expires will always be 0.  Otherwise, a positive number means the password will expire in that number of days, and a negative number means the password has already expired."
                  },
                  "width": {
                    "value": 500
                  },
                  "height": {
                    "value": 140
                  },
                  "fontFamily": {
                    "value": "sans-serif"
                  }
                },
                "status": "configured"
              },
              "position": {
                "x": 1590,
                "y": 750
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "wbu0yckis7",
                "nodeType": "ANNOTATION",
                "name": "Annotation",
                "connectionId": "921bfae85c38ed45045e07be703d86b8",
                "connectorId": "annotationConnector",
                "capabilityName": "updateAnnotationProperties",
                "type": "action",
                "properties": {
                  "backgroundColor": {
                    "value": "#4462edff"
                  },
                  "annotationTextColor": {
                    "value": "#ffffffff"
                  },
                  "annotation": {
                    "value": "Password Expiry Reference - Subflow"
                  },
                  "width": {
                    "value": 2000
                  },
                  "fontStyle": {
                    "value": "bold"
                  },
                  "fontSize": {
                    "value": 16
                  },
                  "fontFamily": {
                    "value": "sans-serif"
                  },
                  "cornerRadius": {
                    "value": 8
                  }
                },
                "status": "configured"
              },
              "position": {
                "x": 214,
                "y": 274
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "suf41233lu",
                "nodeType": "ANNOTATION",
                "name": "Annotation",
                "connectionId": "921bfae85c38ed45045e07be703d86b8",
                "connectorId": "annotationConnector",
                "capabilityName": "updateAnnotationProperties",
                "type": "action",
                "properties": {
                  "backgroundColor": {
                    "value": "#ffffffff"
                  },
                  "annotationTextColor": {
                    "value": "#000000"
                  },
                  "annotation": {
                    "value": "Last Updated: June 18th, 2024"
                  },
                  "width": {
                    "value": 240
                  },
                  "fontSize": {
                    "value": 14
                  },
                  "fontFamily": {
                    "value": "sans-serif"
                  },
                  "cornerRadius": {
                    "value": 8
                  },
                  "strokeEnabled": {
                    "value": false
                  },
                  "strokeWidth": {
                    "value": 1
                  },
                  "strokeColor": {
                    "value": "#181818ff"
                  }
                },
                "status": "configured",
                "idUnique": "o2v5xhdcbc"
              },
              "position": {
                "x": 214,
                "y": 214
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "ic4lgvxrgn",
                "nodeType": "EVAL"
              },
              "position": {
                "x": 450,
                "y": 480
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "f94j4e6u39",
                "nodeType": "ANNOTATION",
                "name": "Annotation",
                "connectionId": "921bfae85c38ed45045e07be703d86b8",
                "connectorId": "annotationConnector",
                "capabilityName": "updateAnnotationProperties",
                "type": "action",
                "properties": {
                  "backgroundColor": {
                    "value": "#f7f7adff"
                  },
                  "annotationTextColor": {
                    "value": "#000000"
                  },
                  "annotation": {
                    "value": "Input Schema: p1UserId, p1PasswordPolicyId, p1ClientId, p1ClientSecret, p1Domain"
                  },
                  "width": {
                    "value": 600
                  },
                  "fontSize": {
                    "value": 14
                  },
                  "fontFamily": {
                    "value": "sans-serif"
                  },
                  "cornerRadius": {
                    "value": 8
                  },
                  "strokeEnabled": {
                    "value": false
                  },
                  "strokeWidth": {
                    "value": 1
                  },
                  "strokeColor": {
                    "value": "#181818ff"
                  }
                },
                "status": "configured",
                "idUnique": "d2mbrib33f"
              },
              "position": {
                "x": 214,
                "y": 334
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "rv0qeuomq1",
                "nodeType": "EVAL",
                "properties": {
                  "tbup8yyr0m": {
                    "value": "anyTriggersFalse"
                  }
                }
              },
              "position": {
                "x": 1350,
                "y": 480
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "n3lxxqctjm",
                "nodeType": "EVAL",
                "properties": {
                  "d8jxzaee6e": {
                    "value": "anyTriggersFalse"
                  }
                }
              },
              "position": {
                "x": 1650,
                "y": 480
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "8vvwusqdad",
                "nodeType": "CONNECTION",
                "connectionId": "867ed4363b2bc21c860085ad2baa817d",
                "connectorId": "httpConnector",
                "name": "Http",
                "label": "Http",
                "status": "configured",
                "capabilityName": "createSuccessResponse",
                "type": "action",
                "properties": {
                  "claimsNameValuePairs": {
                    "value": [
                      {
                        "name": "passwordPolicyHasExpiriation",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"functions.svg\",\n        \"url\": \"policyHasExpiration\",\n        \"data\": \"{{local.3c43mpbpy5.payload.output.policyHasExpiration}}\",\n        \"tooltip\": \"{{local.3c43mpbpy5.payload.output.policyHasExpiration}}\",\n        \"children\": [\n          {\n            \"text\": \"policyHasExpiration\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                        "key": 0.49750794845075585,
                        "label": "passwordPolicyHasExpiriation (string - flowInstance)",
                        "type": "string",
                        "nameDefault": "policyHasExpiration"
                      },
                      {
                        "name": "userHasPassword",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"functions.svg\",\n        \"url\": \"userHasPassword\",\n        \"data\": \"{{local.3c43mpbpy5.payload.output.userHasPassword}}\",\n        \"tooltip\": \"{{local.3c43mpbpy5.payload.output.userHasPassword}}\",\n        \"children\": [\n          {\n            \"text\": \"userHasPassword\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                        "key": 0.8670071765230145,
                        "label": "userHasPassword (string - flowInstance)",
                        "type": "string",
                        "nameDefault": "userHasPassword"
                      },
                      {
                        "name": "daysUntilPasswordExpires",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"functions.svg\",\n        \"url\": \"daysUntilExpire\",\n        \"data\": \"{{local.3c43mpbpy5.payload.output.daysUntilExpire}}\",\n        \"tooltip\": \"{{local.3c43mpbpy5.payload.output.daysUntilExpire}}\",\n        \"children\": [\n          {\n            \"text\": \"daysUntilExpire\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                        "key": 0.9279070448219215,
                        "label": "daysUntilPasswordExpires (number - flowInstance)",
                        "type": "number",
                        "nameDefault": "daysUntilExpire"
                      },
                      {
                        "name": "passwordPolicyMaxAge",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"functions.svg\",\n        \"url\": \"maxAgeDays\",\n        \"data\": \"{{local.3c43mpbpy5.payload.output.maxAgeDays}}\",\n        \"tooltip\": \"{{local.3c43mpbpy5.payload.output.maxAgeDays}}\",\n        \"children\": [\n          {\n            \"text\": \"maxAgeDays\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                        "key": 0.02430974725299051,
                        "label": "passwordPolicyMaxAge (number - flowInstance)",
                        "type": "number",
                        "nameDefault": "maxAgeDays"
                      }
                    ]
                  },
                  "oeInteractionCacheExpire": {
                    "value": true
                  },
                  "backgroundColor": {
                    "value": "#9dc967ff"
                  },
                  "nodeTitle": {
                    "value": "Return Sucess"
                  },
                  "nodeDescription": {
                    "value": "Return password expiry details"
                  },
                  "returnRequestParameters": {
                    "value": false
                  }
                }
              },
              "position": {
                "x": 2130,
                "y": 480
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "93gjy7nh4o",
                "nodeType": "ANNOTATION",
                "name": "Annotation",
                "connectionId": "921bfae85c38ed45045e07be703d86b8",
                "connectorId": "annotationConnector",
                "capabilityName": "updateAnnotationProperties",
                "type": "action",
                "properties": {
                  "backgroundColor": {
                    "value": "#5D00D6ff"
                  },
                  "annotationTextColor": {
                    "value": "#ffffffff"
                  },
                  "annotation": {
                    "value": "Return Error"
                  },
                  "width": {
                    "value": 600
                  },
                  "fontStyle": {
                    "value": "bold"
                  },
                  "fontSize": {
                    "value": 14
                  },
                  "fontFamily": {
                    "value": "sans-serif"
                  },
                  "cornerRadius": {
                    "value": 8
                  }
                },
                "status": "configured"
              },
              "position": {
                "x": 214,
                "y": 784
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "qbot62ymdm",
                "nodeType": "CONNECTION",
                "connectionId": "e7eae662d2ca276e4c6f097fc36a3bb1",
                "connectorId": "nodeConnector",
                "name": "Node",
                "label": "Node",
                "status": "configured",
                "capabilityName": "startNode",
                "type": "trigger",
                "properties": {
                  "inputSchema": {
                    "value": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"message\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"displayName\": \"Message\",\n\t\t\t\"preferredControlType\": \"textField\",\n\t\t\t\"enableParameters\": true,\n\t\t\t\"propertyName\": \"message\"\n\t\t}\n\t}\n}"
                  },
                  "nodeTitle": {
                    "value": "Return Error"
                  }
                }
              },
              "position": {
                "x": 334,
                "y": 934
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "jaciokqhe9",
                "nodeType": "EVAL",
                "label": "Evaluator"
              },
              "position": {
                "x": 454,
                "y": 934
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "4heno6f1my",
                "nodeType": "CONNECTION",
                "connectionId": "867ed4363b2bc21c860085ad2baa817d",
                "connectorId": "httpConnector",
                "name": "Http",
                "label": "Http",
                "status": "configured",
                "capabilityName": "createErrorResponse",
                "type": "action",
                "properties": {
                  "oeInteractionCacheExpire": {
                    "value": true
                  },
                  "nodeTitle": {
                    "value": "Return Error"
                  },
                  "claimsNameValuePairs": {
                    "value": [
                      {
                        "name": "message",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"teleport.svg\",\n        \"url\": \"message\",\n        \"data\": \"{{local.qbot62ymdm.payload.output.message}}\",\n        \"tooltip\": \"{{local.qbot62ymdm.payload.output.message}}\",\n        \"children\": [\n          {\n            \"text\": \"message\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                        "key": 0.43713043392519,
                        "label": "message (string - flowInstance)",
                        "type": "string",
                        "nameDefault": "message"
                      }
                    ]
                  },
                  "backgroundColor": {
                    "value": "#ffc8c1ff"
                  }
                }
              },
              "position": {
                "x": 634,
                "y": 934
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "il5p2bi3jz",
                "nodeType": "CONNECTION",
                "connectionId": "e7eae662d2ca276e4c6f097fc36a3bb1",
                "connectorId": "nodeConnector",
                "name": "Node",
                "label": "Node",
                "status": "configured",
                "capabilityName": "goToNode",
                "type": "action",
                "properties": {
                  "nodeInstanceId": {
                    "value": "qbot62ymdm"
                  },
                  "message": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Unable to retrieve access token\"\n      }\n    ]\n  }\n]"
                  }
                }
              },
              "position": {
                "x": 1230,
                "y": 660
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "tbup8yyr0m",
                "nodeType": "CONNECTION",
                "connectionId": "e7eae662d2ca276e4c6f097fc36a3bb1",
                "connectorId": "nodeConnector",
                "name": "Node",
                "label": "Node",
                "status": "configured",
                "capabilityName": "goToNode",
                "type": "action",
                "properties": {
                  "nodeInstanceId": {
                    "value": "qbot62ymdm"
                  },
                  "message": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Unable to retrieve user password state\"\n      }\n    ]\n  }\n]"
                  }
                },
                "idUnique": "q67e9gq5g"
              },
              "position": {
                "x": 1530,
                "y": 660
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "d8jxzaee6e",
                "nodeType": "CONNECTION",
                "connectionId": "e7eae662d2ca276e4c6f097fc36a3bb1",
                "connectorId": "nodeConnector",
                "name": "Node",
                "label": "Node",
                "status": "configured",
                "capabilityName": "goToNode",
                "type": "action",
                "properties": {
                  "nodeInstanceId": {
                    "value": "qbot62ymdm"
                  },
                  "message": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Unable to password policy details\"\n      }\n    ]\n  }\n]"
                  }
                },
                "idUnique": "722c3v345m"
              },
              "position": {
                "x": 1830,
                "y": 660
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            },
            {
              "data": {
                "id": "9ubftixtze",
                "nodeType": "CONNECTION",
                "connectionId": "e7eae662d2ca276e4c6f097fc36a3bb1",
                "connectorId": "nodeConnector",
                "name": "Node",
                "label": "Node",
                "status": "configured",
                "capabilityName": "goToNode",
                "type": "action",
                "properties": {
                  "nodeInstanceId": {
                    "value": "qbot62ymdm"
                  },
                  "message": {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Unable to calcaulate password expiry\"\n      }\n    ]\n  }\n]"
                  }
                },
                "idUnique": "9puvr9p0qi"
              },
              "position": {
                "x": 2130,
                "y": 660
              },
              "group": "nodes",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": false,
              "classes": ""
            }
          ],
          "edges": [
            {
              "data": {
                "id": "30kgoj59x8",
                "source": "7r0u675r0s",
                "target": "rv0qeuomq1"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "iog6fpa2q5",
                "source": "scgf64t73j",
                "target": "ic4lgvxrgn"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "v0t4yvikuc",
                "source": "m7yig0jeg7",
                "target": "n3lxxqctjm"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "v1j5oct81p",
                "source": "3c43mpbpy5",
                "target": "54ptc4k8na"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "uu6k51qped",
                "source": "ic4lgvxrgn",
                "target": "x8uzxb8vs2"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "c1vbbim95v",
                "source": "x8uzxb8vs2",
                "target": "tsuwjnwaau"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "5hv9c1bi2e",
                "source": "n3lxxqctjm",
                "target": "d8jxzaee6e"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "fbc5otfqxe",
                "source": "tsuwjnwaau",
                "target": "i0t27zilzl"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "cdu4tqtwj9",
                "source": "i0t27zilzl",
                "target": "ru53iptn7b"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "iqi3tynfpu",
                "source": "54ptc4k8na",
                "target": "9ubftixtze"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "nw3va88xjp",
                "source": "ru53iptn7b",
                "target": "7r0u675r0s"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "gygb7v1be5",
                "source": "54ptc4k8na",
                "target": "8vvwusqdad"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "zhma0jgumn",
                "source": "qbot62ymdm",
                "target": "jaciokqhe9"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "bedjhj3d5q",
                "source": "jaciokqhe9",
                "target": "4heno6f1my"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "japluw3n12",
                "source": "ru53iptn7b",
                "target": "il5p2bi3jz"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "yj4bsy4cuh",
                "source": "rv0qeuomq1",
                "target": "tbup8yyr0m"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "4vnghsefxs",
                "source": "n3lxxqctjm",
                "target": "3c43mpbpy5"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            },
            {
              "data": {
                "id": "vjec2opwwx",
                "source": "rv0qeuomq1",
                "target": "m7yig0jeg7"
              },
              "position": {
                "x": 0,
                "y": 0
              },
              "group": "edges",
              "removed": false,
              "selected": false,
              "selectable": true,
              "locked": false,
              "grabbable": true,
              "pannable": true,
              "classes": ""
            }
          ]
        },
        "data": {},
        "zoomingEnabled": true,
        "userZoomingEnabled": true,
        "zoom": 1,
        "minZoom": 1e-50,
        "maxZoom": 1e+50,
        "panningEnabled": true,
        "userPanningEnabled": true,
        "pan": {
          "x": 0,
          "y": 0
        },
        "boxSelectionEnabled": true,
        "renderer": {
          "name": "null"
        }
      },
      "inputSchema": [
        {
          "propertyName": "p1UserId",
          "description": "PingOne User Id",
          "preferredDataType": "string",
          "preferredControlType": "textField",
          "isExpanded": true,
          "required": true
        },
        {
          "propertyName": "p1PasswordPolicyId",
          "description": "PingOne Password Policy Id",
          "preferredDataType": "string",
          "preferredControlType": "textField",
          "isExpanded": true,
          "required": true
        },
        {
          "propertyName": "p1ClientId",
          "description": "PingOne Client Id",
          "preferredDataType": "string",
          "preferredControlType": "textField",
          "isExpanded": true,
          "required": true
        },
        {
          "propertyName": "p1ClientSecret",
          "description": "PingOne Client Secret",
          "preferredDataType": "string",
          "preferredControlType": "textField",
          "isExpanded": true,
          "required": true
        },
        {
          "propertyName": "p1Domain",
          "description": "PingOne Domain (Eg com, eu)",
          "preferredDataType": "string",
          "preferredControlType": "textField",
          "isExpanded": true,
          "required": true
        }
      ],
      "flowColor": "#E3F0FF",
      "savedDate": 1718796440888,
      "variables": [
        {
          "context": "flowInstance",
          "createdDate": 1718725105223,
          "fields": {
            "type": "string",
            "displayName": "",
            "mutable": true,
            "min": 0,
            "max": 2000
          },
          "id": "975e33dc-b297-48db-b693-770baa841d4e",
          "type": "property",
          "visibility": "private",
          "name": "p1TLD##SK##flowInstance",
          "companyId": ""
        },
        {
          "context": "flowInstance",
          "createdDate": 1718725105223,
          "fields": {
            "type": "string",
            "displayName": "",
            "mutable": true,
            "min": 0,
            "max": 2000
          },
          "id": "088fd695-4198-453f-ac11-47ccf3e77fae",
          "type": "property",
          "visibility": "private",
          "name": "p1UserId##SK##flowInstance",
          "companyId": ""
        },
        {
          "context": "flowInstance",
          "createdDate": 1718727181277,
          "customerId": "f3e47d945ae971a4b4142ec75012d155",
          "fields": {
            "type": "string",
            "displayName": "",
            "mutable": true,
            "min": 0,
            "max": 2000
          },
          "id": "a7936736-4a14-4a6a-9aa4-a8519dae3fe7",
          "type": "property",
          "visibility": "private",
          "name": "p1PasswordPolicyId##SK##flowInstance",
          "companyId": ""
        },
        {
          "context": "flowInstance",
          "createdDate": 1718727235134,
          "customerId": "f3e47d945ae971a4b4142ec75012d155",
          "fields": {
            "type": "string",
            "displayName": "PingOne Client Application Id",
            "mutable": true,
            "min": 0,
            "max": 2000
          },
          "id": "ee895b6b-8fe2-42ec-b454-49c344aed36a",
          "type": "property",
          "visibility": "private",
          "name": "p1ClientId##SK##flowInstance",
          "companyId": ""
        },
        {
          "context": "flowInstance",
          "createdDate": 1718727291784,
          "customerId": "f3e47d945ae971a4b4142ec75012d155",
          "fields": {
            "type": "string",
            "displayName": "PingOne Client Application Secret",
            "mutable": true,
            "min": 0,
            "max": 2000
          },
          "id": "d650468f-2c67-4199-afdf-a2d6bcf436f9",
          "type": "property",
          "visibility": "private",
          "name": "p1ClientSecret##SK##flowInstance",
          "companyId": ""
        }
      ]
    }
  ],
  "companyId": "",
  "customerId": ""
}