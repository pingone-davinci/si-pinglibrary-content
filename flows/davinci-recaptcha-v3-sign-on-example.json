{
  "companyId": "193bc45b-146d-4bf0-88fd-b9dcb6f7288e",
  "authTokenExpireIds": [],
  "connectorIds": [
    "functionsConnector",
    "httpConnector",
    "variablesConnector",
    "annotationConnector"
  ],
  "createdDate": 1710960745736,
  "currentVersion": 136,
  "customerId": "f3e47d945ae971a4b4142ec75012d155",
  "description": "Reference DaVinci orchestration flow that integrates reCAPTCHA in a sign-on process to assess whether a form submission is by a human or a bot.",
  "flowStatus": "enabled",
  "isOutputSchemaSaved": false,
  "name": "reCAPTCHA v3 Sign On Example",
  "publishedVersion": 136,
  "settings": {
    "csp": "worker-src 'self' blob:; script-src 'self' https://cdn.jsdelivr.net https://code.jquery.com https://devsdk.singularkey.com http://cdnjs.cloudflare.com 'unsafe-inline' 'unsafe-eval';",
    "intermediateLoadingScreenCSS": "",
    "intermediateLoadingScreenHTML": "",
    "cssLinks": [
      "https://assets.pingone.com/ux/end-user-nano/0.1.0-alpha.1/end-user-nano.css",
      "https://assets.pingone.com/ux/astro-nano/0.1.0-alpha.11/icons.css"
    ],
    "useCustomCSS": true,
    "debugMode": true,
    "logLevel": 2,
    "jsLinks": [
      {
        "label": "https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js",
        "value": "https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js",
        "defer": "false",
        "crossorigin": "",
        "integrity": "",
        "referrerpolicy": "",
        "type": ""
      }
    ],
    "useCustomScript": true,
    "css": ".companyLogo {\n    /* Ping Logo  */\n    height: 65px;\n}"
  },
  "timeouts": "null",
  "updatedDate": 1710960752164,
  "flowId": "6c58c99f62a4e25ebbdaaf8e573a2eb4",
  "versionId": 136,
  "graphData": {
    "elements": {
      "nodes": [
        {
          "data": {
            "id": "mwnugsl3ez",
            "nodeType": "CONNECTION",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "name": "Functions",
            "label": "Functions",
            "status": "configured",
            "capabilityName": "AGreaterThanEqualToB",
            "type": "trigger",
            "properties": {
              "leftValueA": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"moustache\",\n        \"data\": \"{{local.d5xd4gj7l7.payload.output.rawResponse.body.score}}\",\n        \"name\": \"score\",\n        \"children\": [\n          {\n            \"text\": \"\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "rightValueB": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"CAPTCHA_THRESHOLD\",\n        \"data\": \"{{global.variables.CAPTCHA_THRESHOLD}}\",\n        \"tooltip\": \"{{global.variables.CAPTCHA_THRESHOLD}}\",\n        \"children\": [\n          {\n            \"text\": \"CAPTCHA_THRESHOLD\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "type": {
                "value": "number"
              },
              "nodeTitle": {
                "value": "reCaptcha Result Check"
              }
            },
            "isDisabled": false,
            "idUnique": "dz4nfgx57r"
          },
          "position": {
            "x": 1530,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "7lbvbju71e",
            "nodeType": "EVAL",
            "label": "Evaluator",
            "idUnique": "bzw3senjno"
          },
          "position": {
            "x": 1350,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "d5xd4gj7l7",
            "nodeType": "CONNECTION",
            "connectionId": "481e952e6b11db8360587b8711620786",
            "connectorId": "httpConnector",
            "name": "HTTP",
            "label": "Http",
            "status": "configured",
            "capabilityName": "makeRestApiCall",
            "type": "trigger",
            "properties": {
              "url": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"https://www.google.com/recaptcha/api/siteverify\"\n      }\n    ]\n  }\n]"
              },
              "httpMethod": {
                "value": "POST"
              },
              "bodyParams": {
                "value": [
                  {
                    "key": "secret",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"CAPTCHA_V3_SECRET\",\n        \"data\": \"{{global.variables.CAPTCHA_V3_SECRET}}\",\n        \"tooltip\": \"{{global.variables.CAPTCHA_V3_SECRET}}\",\n        \"children\": [\n          {\n            \"text\": \"CAPTCHA_V3_SECRET\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "key": "response",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"recaptcha_token\",\n        \"data\": \"{{local.srsltttf0p.payload.output.recaptcha_token}}\",\n        \"tooltip\": \"{{local.srsltttf0p.payload.output.recaptcha_token}}\",\n        \"children\": [\n          {\n            \"text\": \"recaptcha_token\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  }
                ]
              },
              "outputSchema": {
                "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"challenge_ts\": {\n      \"type\": \"string\"\n    },\n    \"hostname\": {\n      \"type\": \"string\"\n    },\n    \"error-codes\": {\n      \"type\": \"array\",\n      \"items\": {}\n    }\n  },\n  \"required\": [\n    \"success\",\n    \"challenge_ts\",\n    \"hostname\",\n    \"error-codes\"\n  ]\n}"
              },
              "nodeTitle": {
                "value": "Verify Captcha API Call"
              },
              "httpBody": {
                "value": "formData"
              }
            },
            "isDisabled": false,
            "idUnique": "rg734w4u88"
          },
          "position": {
            "x": 1230,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "fciwyebq1m",
            "nodeType": "EVAL",
            "label": "Evaluator",
            "idUnique": "xxzhyhae5o"
          },
          "position": {
            "x": 1050,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "pyvavyfdno",
            "nodeType": "EVAL",
            "properties": {
              "upiynhx9v": {
                "value": "anyTriggersFalse"
              },
              "i21eb2n1ho": {
                "value": "anyTriggersFalse"
              }
            },
            "idUnique": "hw6u1vsgw5"
          },
          "position": {
            "x": 1650,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "srsltttf0p",
            "nodeType": "CONNECTION",
            "connectionId": "481e952e6b11db8360587b8711620786",
            "connectorId": "httpConnector",
            "name": "HTTP",
            "label": "Http",
            "status": "configured",
            "capabilityName": "customHTMLTemplate",
            "type": "trigger",
            "properties": {
              "customHTML": {
                "value": "<div class=\"end-user-nano\">\n    <div\n        class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n        <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n            <div class=\"card shadow mb-5\">\n                <div class=\"card-body p-5 d-flex flex-column\">\n                    <img class=\"companyLogo align-self-center mb-5\" src=\"{{global.variables.companyLogo}}\" alt=\"{{global.variables.companyName}}\" />\n\n                    {{#if title}}\n                    <h1 class=\"text-center mb-4\">{{title}}</h1>\n                    {{/if}}\n\n                    {{#if textOne}}\n                    <p class=\"text-muted text-center\">{{textOne}}</p>\n                    {{/if}}\n\n                    {{#if textTwo}}\n                    <p class=\"text-muted text-center\">{{textTwo}}</p>\n                    {{/if}}\n\n                    <!-- Generic Error Message -->\n                    <p id=\"feedback\" data-id=\"feedback\" class=\"text-danger mdi mdi-alert-circle\"\n                        data-skcomponent=\"skerror\"></p>\n\n                    <!-- Field Validation Error Messages -->\n                    <p class=\"text-danger mdi mdi-alert-circle\" data-skerrorid=\"username\" data-skcomponent=\"skerrormessage\"></p>\n                    <p class=\"text-danger mdi mdi-alert-circle\" data-skerrorid=\"password\" data-skcomponent=\"skerrormessage\"></p>\n\n\n                    <form id=\"signonForm\" data-id=\"signonForm\">\n                        <!-- Captch form fields -->\n                        <input type=\"hidden\" id=\"g-recaptcha-response\" name=\"g-recaptcha-response\">\n                        <input type=\"hidden\" id=\"recaptcha_token\" name=\"recapture_token\">\n\n                        <div class=\"mb-4 form-floating\">\n                            <input class=\"form-control\" type=\"text\" id=\"username\" name=\"username\" placeholder=\"username\"\n                            autocomplete=\"off\" value=\"\" data-id=\"username-input\" />\n                            <label class=\"form-label\" for=\"username\">Username</label>\n                        </div>\n                        <div id=\"passwordDiv\" class=\"mb-4 form-floating\">\n                            <input class=\"form-control\" type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\"\n                            autocomplete=\"off\" value=\"\" data-id=\"password-input\" />\n                            <label class=\"form-label\" for=\"password\">Password</label>\n                        </div>\n                        <div class=\"d-flex flex-column\">\n                            \n                            <button class=\"btn btn-primary mb-3\" type=\"button\" id=\"captchaBtn\">{{buttonLabel}}</button>\n\n                           \n                            <button data-id=\"button\" type=\"submit\" class=\"btn btn-primary mb-3 d-none\" data-skcomponent=\"skbutton\"\n                            data-skbuttontype=\"form-submit\" data-skform=\"signonForm\" id=\"btnSignIn\"\n                             data-skbuttonvalue=\"SIGNON\">\n                            \n                            </button>\n                       \n                        \n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"
              },
              "formFieldsList": {
                "value": [
                  {
                    "propertyName": "username",
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"demo_user\"\n      }\n    ]\n  }\n]",
                    "hashedVisibility": false,
                    "displayName": "username"
                  },
                  {
                    "propertyName": "password",
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                    "hashedVisibility": false,
                    "displayName": "password"
                  },
                  {
                    "propertyName": "recaptcha_token",
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "value": "",
                    "hashedVisibility": false
                  },
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  }
                ]
              },
              "customScript": {
                "value": "\n// Initializes the handler for the captcha button click event.\nconst createCaptchaButtonHandler = () => {\n  let captchaButton = document.getElementById(\"captchaBtn\");\n\n  if (captchaButton) {\n    captchaButton.addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      grecaptcha.ready(function () {\n\n        grecaptcha.execute('{{CAPTCHA_V3_SITE_KEY}}', { action: 'submit' })\n          .then(function (token) {\n            document.getElementById('recaptcha_token').value = token;\n            console.log(token);\n            document.getElementById(\"btnSignIn\").click();\n          })\n          .catch(error => {\n            console.error(\"Captcha execution failed:\", error);\n          });\n      });\n    });\n  }\n};\n\nconst setFieldFocus = (id) => {\n  const element = document.getElementById(id);\n  if (element) {\n    element.focus();\n  }\n}\n\nconst makePasswordToggle = (id) => {\n  let container = document.getElementById(id);\n\n  if (container) {\n    let password = container.getElementsByTagName(\"input\")[0];\n    let toggler = document.createElement(\"button\");\n    toggler.setAttribute(\"type\", \"button\");\n    toggler.setAttribute(\"aria-label\", \"Show/Hide Password\");\n    toggler.className = \"btn mdi mdi-eye-off-outline position-absolute end-0 top-50 translate-middle-y\";\n    container.appendChild(toggler);\n\n    function showHidePassword() {\n      if (password.type == \"password\") {\n        password.setAttribute(\"type\", \"text\");\n        toggler.classList.add(\"mdi-eye-outline\");\n        toggler.classList.remove(\"mdi-eye-off-outline\");\n      } else {\n        toggler.classList.add(\"mdi-eye-off-outline\");\n        toggler.classList.remove(\"mdi-eye-outline\");\n        password.setAttribute(\"type\", \"password\");\n      }\n      password.focus();\n    };\n\n    toggler.addEventListener(\"click\", showHidePassword);\n  }\n}\n\nconst start = () => {\n  makePasswordToggle(\"passwordDiv\");\n  setFieldFocus(\"username\");\n  createCaptchaButtonHandler();\n}\n\nif (document.readyState === \"loading\") {\n  // Loading hasn't finished yet\n  document.addEventListener(\"DOMContentLoaded\", start);\n} else {\n  // `DOMContentLoaded` has already fired\n  start();\n}"
              },
              "nodeTitle": {
                "value": "Reference Form with reCaptcha V3"
              },
              "inputSchema": {
                "value": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"CAPTCHA_V3_SITE_KEY\": {\n      \"type\": \"string\",\n      \"displayName\": \"Captcha Site Key\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"CAPTCHA_V3_SITE_KEY\"\n    },\n    \"title\": {\n      \"type\": \"string\",\n      \"displayName\": \"Title\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"title\"\n    },\n    \"textOne\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text One\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"textOne\"\n    },\n    \"textTwo\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text Two\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"textTwo\"\n    },\n    \"buttonLabel\": {\n      \"type\": \"string\",\n      \"displayName\": \"Button Label\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"buttonLabel\"\n    }\n  }\n}"
              },
              "title": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"reCAPTCHA V3 Demo\"\n      }\n    ]\n  }\n]"
              },
              "buttonLabel": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Sign on with \"\n      },\n      {\n        \"text\": \"reCAPTCHA\"\n      }\n    ]\n  }\n]"
              },
              "textOne": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"No username or password is needed to run this example flow.\"\n      }\n    ]\n  }\n]"
              },
              "CAPTCHA_V3_SITE_KEY": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"CAPTCHA_V3_SITE_KEY\",\n        \"data\": \"{{global.variables.CAPTCHA_V3_SITE_KEY}}\",\n        \"tooltip\": \"{{global.variables.CAPTCHA_V3_SITE_KEY}}\",\n        \"children\": [\n          {\n            \"text\": \"CAPTCHA_V3_SITE_KEY\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "textTwo": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Click the 'Sign on with \"\n      },\n      {\n        \"text\": \"reCAPTCHA\"\n      },\n      {\n        \"text\": \"' to proceed.\"\n      }\n    ]\n  }\n]"
              }
            },
            "idUnique": "5c7do7l9e6"
          },
          "position": {
            "x": 930,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "fk5qu0scfl",
            "nodeType": "CONNECTION",
            "connectionId": "06922a684039827499bdbdd97f49827b",
            "connectorId": "variablesConnector",
            "name": "Variables",
            "label": "Variables",
            "status": "configured",
            "capabilityName": "saveValue",
            "type": "trigger",
            "properties": {
              "saveVariables": {
                "value": [
                  {
                    "name": "CAPTCHA_V3_SITE_KEY",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                    "key": 0.20674159122602198,
                    "type": "string",
                    "label": "CAPTCHA_V3_SITE_KEY (string - flowInstance)"
                  },
                  {
                    "name": "CAPTCHA_V3_SECRET",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                    "key": 0.3983255169680584,
                    "label": "CAPTCHA_V3_SECRET (string - flowInstance)",
                    "type": "string"
                  },
                  {
                    "name": "CAPTCHA_THRESHOLD",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \".7\"\n      }\n    ]\n  }\n]",
                    "key": 0.07864115773379288,
                    "label": "CAPTCHA_THRESHOLD (number - flowInstance)",
                    "type": "number"
                  },
                  {
                    "name": "companyLogo",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png\"\n      }\n    ]\n  }\n]",
                    "key": 0.5791095173454557,
                    "label": "companyLogo (string - flowInstance)",
                    "type": "string"
                  }
                ]
              },
              "nodeTitle": {
                "value": "Flow Variables"
              }
            },
            "idUnique": "syyanus7e7"
          },
          "position": {
            "x": 330,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "6wf7qezhuw",
            "nodeType": "EVAL",
            "properties": {
              "srsltttf0p": {
                "value": "allTriggersTrue"
              }
            }
          },
          "position": {
            "x": 450,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "am4qtuerzq",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "Http",
            "status": "configured",
            "capabilityName": "customHTMLTemplate",
            "type": "trigger",
            "properties": {
              "customHTML": {
                "value": "<div class=\"end-user-nano\">\n    <div\n        class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n        <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n            <div class=\"card shadow mb-5\">\n                <div class=\"card-body p-5 d-flex flex-column\">\n                    <img class=\"companyLogo align-self-center mb-5\" src=\"{{global.variables.companyLogo}}\" alt=\"{{global.variables.companyName}}\" />\n\n                    {{#if title}}\n                    <h1 class=\"text-center mb-4\">{{title}}</h1>\n                    {{/if}}\n\n                    <div class=\"mx-auto mt-3 mb-4\">\n                        <svg class=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 52 52\">\n                            <circle class=\"checkmarkCircle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" />\n                            <path class=\"checkmarkCheck\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\n                        </svg>\n                    </div>\n\n                    {{#if textOne}}\n                    <p class=\"text-muted text-center\">{{textOne}}</p>\n                    {{/if}}\n\n                    {{#if textTwo}}\n                    <p class=\"text-muted text-center\">{{textTwo}}</p>\n                    {{/if}}\n\n                    {{#if textThree}}\n                    <p class=\"text-center fw-bold\">{{textThree}}</p>\n                    {{/if}}\n\n\n                    <p class=\"text-danger mdi mdi-alert-circle\" data-id=\"feedback\" data-skcomponent=\"skerror\"></p>\n\n                    {{#if buttonLabel}}\n                    <div class=\"d-flex flex-column\">\n                        <button id=\"submitBtn\" data-id=\"submitBtn\" class=\"btn btn-primary mb-3\" type=\"submit\" data-skcomponent=\"skbutton\"\n                        data-skbuttontype=\"next-event\" data-skbuttonvalue=\"NEXT\" >\n                        {{buttonLabel}}\n                        </button>\n                    </div>\n                    {{/if}}\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"
              },
              "formFieldsList": {
                "value": [
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "username",
                    "displayName": "Username",
                    "hashedVisibility": false,
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  },
                  {
                    "propertyName": "password",
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "value": "",
                    "hashedVisibility": true,
                    "displayName": "Password"
                  }
                ]
              },
              "nodeTitle": {
                "value": "Verification Success"
              },
              "customCSS": {
                "value": ":root {\n  --animation-dimension: 120px;\n  --animation-start-color: #71e171;\n  --animation-midway-color: #67d067;\n  --animation-finish-color: #59b259;\n}\n\n.checkmark {\n  width: var(--animation-dimension);\n  height: var(--animation-dimension);\n  border-radius: 50%;\n  display: block;\n  stroke-width: 5;\n  stroke: #ffffff;\n  stroke-miterlimit: 10;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n  animation: fill 0.4s ease-in-out 0.4s forwards,\n    scale 0.3s ease-in-out 0.9s both;\n}\n\n.checkmarkCircle {\n  stroke-dasharray: 166;\n  stroke-dashoffset: 166;\n  stroke-width: 5;\n  stroke-miterlimit: 10;\n  stroke: var(--animation-finish-color);\n  fill: none;\n  animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards,\n    colorChange 1.2s ease-in-out forwards;\n}\n\n.checkmarkCheck {\n  transform-origin: 50% 50%;\n  stroke-dasharray: 48;\n  stroke-dashoffset: 48;\n  animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards,\n    colorChange 0.6s ease-in-out 0.8s forwards;\n}\n\n@keyframes colorChange {\n  0% {\n    stroke: var(--animation-start-color);\n  }\n  50% {\n    stroke: var(--animation-midway-color);\n  } \n  100% {\n    stroke: var(--animation-finish-color);\n  }\n}\n\n@keyframes stroke {\n  100% {\n    stroke-dashoffset: 0;\n  }\n}\n@keyframes scale {\n  0%,\n  100% {\n    transform: none;\n  }\n  50% {\n    transform: scale3d(1.1, 1.1, 1);\n  }\n  70% {\n    transform: scale3d(0.98, 0.98, 1);\n  }\n  85% {\n    transform: scale3d(1.02, 1.02, 1);\n  }\n}\n@keyframes fill {\n  100% {\n    box-shadow: inset 0px 0px 0px 0px var(--animation-finish-color);\n  }\n}"
              },
              "validationRules": {
                "value": []
              },
              "backgroundColor": {
                "value": "#9dc967ff"
              },
              "customScript": {},
              "inputSchema": {
                "value": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"displayName\": \"Title\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"title\"\n    },\n    \"textOne\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text One\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"textOne\"\n    },\n    \"textTwo\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text Two\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"textTwo\"\n    },\n    \"textThree\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text Three\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"textThree\"\n    },\n    \"buttonLabel\": {\n      \"type\": \"string\",\n      \"displayName\": \"Button Label\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"buttonLabel\"\n    }\n  }\n}"
              },
              "title": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"reCAPTCHA\"\n      },\n      {\n        \"text\": \" Verification \"\n      },\n      {\n        \"text\": \"Success!\"\n      }\n    ]\n  }\n]"
              },
              "nodeDescription": {
                "value": "Success message with animated checkmark"
              },
              "textOne": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"For the reCAPTCHA v3 scale, the range is from 0.0 to 1.0, where 0.0 indicates the highest suspicion of being a bot, and 1.0 signifies the highest confidence in genuine human activity.\"\n      }\n    ]\n  }\n]"
              },
              "textTwo": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"A score of \"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"CAPTCHA_THRESHOLD\",\n        \"data\": \"{{global.variables.CAPTCHA_THRESHOLD}}\",\n        \"tooltip\": \"{{global.variables.CAPTCHA_THRESHOLD}}\",\n        \"children\": [\n          {\n            \"text\": \"CAPTCHA_THRESHOLD\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \" or greater is required to proceed.\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "textThree": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Your score: \"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"moustache\",\n        \"data\": \"{{local.d5xd4gj7l7.payload.output.rawResponse.body.score}}\",\n        \"name\": \"score\",\n        \"children\": [\n          {\n            \"text\": \"\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              }
            },
            "idUnique": "p3z6662uwb"
          },
          "position": {
            "x": 1830,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "i21eb2n1ho",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "Http",
            "status": "configured",
            "capabilityName": "customHTMLTemplate",
            "type": "trigger",
            "properties": {
              "customHTML": {
                "value": "<div class=\"end-user-nano\">\n    <div\n        class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n        <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n            <div class=\"card shadow mb-5\">\n                <div class=\"card-body p-5 d-flex flex-column\">\n                    <img class=\"companyLogo align-self-center mb-5\" src=\"{{global.variables.companyLogo}}\" alt=\"{{global.variables.companyName}}\" />\n\n                    {{#if title}}\n                    <h1 class=\"text-center mb-4\">{{title}}</h1>\n                    {{/if}}\n\n                    <div class=\"mx-auto mt-3 mb-4\">\n    <svg class=\"xmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\n        <circle class=\"xmarkCircle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" />\n        <path class=\"xmarkX\" fill=\"none\" d=\"M16,16 L36,36 M36,16 L16,36\" />\n    </svg>\n</div>\n\n\n\n\n\n                    {{#if textOne}}\n                    <p class=\"text-muted text-center\">{{textOne}}</p>\n                    {{/if}}\n\n                    {{#if textTwo}}\n                    <p class=\"text-muted text-center\">{{textTwo}}</p>\n                    {{/if}}\n\n                    {{#if textThree}}\n                    <p class=\"text-center fw-bold\">{{textThree}}</p>\n                    {{/if}}\n\n                    <p class=\"text-danger mdi mdi-alert-circle\" data-id=\"feedback\" data-skcomponent=\"skerror\"></p>\n\n                    {{#if buttonLabel}}\n                    <div class=\"d-flex flex-column\">\n                        <button id=\"submitBtn\" data-id=\"submitBtn\" class=\"btn btn-primary mb-3\" type=\"submit\" data-skcomponent=\"skbutton\"\n                        data-skbuttontype=\"next-event\" data-skbuttonvalue=\"NEXT\" >\n                        {{buttonLabel}}\n                        </button>\n                    </div>\n                    {{/if}}\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"
              },
              "formFieldsList": {
                "value": [
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "username",
                    "displayName": "Username",
                    "hashedVisibility": false,
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  },
                  {
                    "propertyName": "password",
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "value": "",
                    "hashedVisibility": true,
                    "displayName": "Password"
                  }
                ]
              },
              "nodeTitle": {
                "value": "Verification Error"
              },
              "customCSS": {
                "value": ":root {\n    --failure-animation-dimension: 120px;\n    /* --failure-animation-start-color: #ff8a80;\n    --failure-animation-midway-color: #ff5252;\n    --failure-animation-finish-color: #ff1744; */\n    --failure-animation-start-color: #e63946; /* A bright, vivid red */\n    --failure-animation-midway-color: #d90429; /* A slightly deeper red */\n    --failure-animation-finish-color: #ba000d; /* A rich, dark red */\n}\n\n.xmark {\n    width: var(--failure-animation-dimension);\n    height: var(--failure-animation-dimension);\n    display: block;\n    stroke-width: 5;\n    stroke: #ffffff;\n    stroke-miterlimit: 10;\n    border-radius: 50%;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n    animation: fill 0.4s ease-in-out 0.4s forwards, scale 0.3s ease-in-out 0.9s both;\n}\n\n.xmarkCircle {\n    stroke-dasharray: 166;\n    stroke-dashoffset: 166;\n    stroke-width: 5;\n    stroke: var(--failure-animation-finish-color);\n    fill: none;\n    animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;\n}\n\n.xmarkX {\n    stroke-dasharray: 56;\n    stroke-dashoffset: 56;\n    stroke-width: 5;\n    stroke: var(--failure-animation-start-color);\n    animation: strokeX 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards, colorChangeX 0.6s ease-in-out 0.8s forwards;\n}\n\n@keyframes stroke {\n    to {\n        stroke-dashoffset: 0;\n    }\n}\n\n@keyframes strokeX {\n    to {\n        stroke-dashoffset: 0;\n    }\n}\n\n@keyframes colorChangeX {\n    0% {\n        stroke: var(--failure-animation-start-color);\n    }\n    50% {\n        stroke: var(--failure-animation-midway-color);\n    }\n    100% {\n        stroke: var(--failure-animation-finish-color);\n    }\n}\n\n@keyframes scale {\n  0%,\n  100% {\n    transform: none;\n  }\n  50% {\n    transform: scale3d(1.1, 1.1, 1);\n  }\n  70% {\n    transform: scale3d(0.98, 0.98, 1);\n  }\n  85% {\n    transform: scale3d(1.02, 1.02, 1);\n  }\n}\n\n/* Ensure scale and fill animations are correctly applied */\n"
              },
              "validationRules": {
                "value": []
              },
              "backgroundColor": {
                "value": "#ffc8c1ff"
              },
              "customScript": {},
              "inputSchema": {
                "value": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"displayName\": \"Title\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"title\"\n    },\n    \"textOne\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text One\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"textOne\"\n    },\n    \"textTwo\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text Two\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"textTwo\"\n    },\n    \"textThree\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text Three\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"textThree\"\n    },\n    \"buttonLabel\": {\n      \"type\": \"string\",\n      \"displayName\": \"Button Label\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"buttonLabel\"\n    }\n  }\n}"
              },
              "title": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"reCAPTCHA\"\n      },\n      {\n        \"text\": \" Verification \"\n      },\n      {\n        \"text\": \"Failure\"\n      }\n    ]\n  }\n]"
              },
              "nodeDescription": {
                "value": "Error message with animated X"
              },
              "textOne": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"For the reCAPTCHA v3 scale, the range is from 0.0 to 1.0, where 0.0 indicates the highest suspicion of being a bot, and 1.0 signifies the highest confidence in genuine human activity.\"\n      }\n    ]\n  }\n]"
              },
              "textTwo": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"A score of \"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"CAPTCHA_THRESHOLD\",\n        \"data\": \"{{global.variables.CAPTCHA_THRESHOLD}}\",\n        \"tooltip\": \"{{global.variables.CAPTCHA_THRESHOLD}}\",\n        \"children\": [\n          {\n            \"text\": \"CAPTCHA_THRESHOLD\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \" or \"\n      },\n      {\n        \"text\": \"greater is required to proceed.\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "textThree": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Your score: \"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"moustache\",\n        \"data\": \"{{local.d5xd4gj7l7.payload.output.rawResponse.body.score}}\",\n        \"name\": \"score\",\n        \"children\": [\n          {\n            \"text\": \"\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              }
            },
            "idUnique": "the8zdg5iv"
          },
          "position": {
            "x": 1830,
            "y": 660
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "4oqyd43bon",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#4462edff"
              },
              "annotationTextColor": {
                "value": "#ffffffff"
              },
              "annotation": {
                "value": "reCAPTCHA v3 Sign On Example"
              },
              "width": {
                "value": 1800
              },
              "fontStyle": {
                "value": "bold"
              },
              "fontSize": {
                "value": 16
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "cornerRadius": {
                "value": 8
              }
            },
            "status": "configured"
          },
          "position": {
            "x": 210,
            "y": 240
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "u3et9oq8mt",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#50e3c2ff"
              },
              "annotationTextColor": {
                "value": "#000000"
              },
              "annotation": {
                "value": "Set Flow Variables for reCaptcha v3 key and secret"
              },
              "width": {
                "value": 400
              },
              "fontSize": {
                "value": 14
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "fontStyle": {
                "value": "normal"
              },
              "cornerRadius": {
                "value": 8
              },
              "strokeEnabled": {
                "value": true
              },
              "strokeWidth": {
                "value": 1
              },
              "strokeColor": {
                "value": "#181818ff"
              }
            },
            "status": "configured",
            "idUnique": "lb31g4gkg6"
          },
          "position": {
            "x": 210,
            "y": 300
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "5p51qbker7",
            "nodeType": "CONNECTION",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "name": "Functions",
            "label": "Functions",
            "status": "configured",
            "capabilityName": "customFunction",
            "type": "trigger",
            "properties": {
              "nodeTitle": {
                "value": "Flow Configuration Check"
              },
              "variableInputList": {
                "value": [
                  {
                    "name": "captchaSiteKey",
                    "preferredDataType": "string",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"CAPTCHA_V3_SITE_KEY\",\n        \"data\": \"{{global.variables.CAPTCHA_V3_SITE_KEY}}\",\n        \"tooltip\": \"{{global.variables.CAPTCHA_V3_SITE_KEY}}\",\n        \"children\": [\n          {\n            \"text\": \"CAPTCHA_V3_SITE_KEY\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "name": "captchaSecret",
                    "preferredDataType": "string",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"CAPTCHA_V3_SECRET\",\n        \"data\": \"{{global.variables.CAPTCHA_V3_SECRET}}\",\n        \"tooltip\": \"{{global.variables.CAPTCHA_V3_SECRET}}\",\n        \"children\": [\n          {\n            \"text\": \"CAPTCHA_V3_SECRET\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "name": "captchaThreshold",
                    "preferredDataType": "number",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"CAPTCHA_THRESHOLD\",\n        \"data\": \"{{global.variables.CAPTCHA_THRESHOLD}}\",\n        \"tooltip\": \"{{global.variables.CAPTCHA_THRESHOLD}}\",\n        \"children\": [\n          {\n            \"text\": \"CAPTCHA_THRESHOLD\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  }
                ]
              },
              "code": {
                "value": "// Iterate over params object, return false if any\n// passed in parameters are null/empty\nmodule.exports = a = async ({ params }) => {\n\n\tfor (var key in params) {\n\t\tif (!params[key]) {\n\t\t\treturn false; \n\t\t}\n\t}\n\n\treturn \n}"
              },
              "outputSchema": {
                "value": "{\n\t\"output\": {\n\t\t\"type\": \"object\",\n\t\t\"properties\": {\n\t\t\t\n\t\t}\n\t}\n}"
              },
              "nodeDescription": {
                "value": "Add input variables to check for null/empty"
              }
            }
          },
          "position": {
            "x": 630,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "7jsqi65vtl",
            "nodeType": "EVAL",
            "properties": {
              "undefined": {
                "value": "allTriggersTrue"
              },
              "udbb34cil1": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 750,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "udbb34cil1",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "Http",
            "status": "configured",
            "capabilityName": "customHTMLTemplate",
            "type": "trigger",
            "properties": {
              "customHTML": {
                "value": "<div\n  class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n  <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n    <div class=\"card shadow mb-5\">\n      <div class=\"card-body p-5 d-flex flex-column\">\n        <img class=\"companyLogo align-self-center mb-5\" src=\"{{global.variables.companyLogo}}\" alt=\"{{global.variables.companyName}}\" />\n        <h1 class=\"text-center mb-4\">Flow Configuration Error</h1>\n        <p class=\"text-muted text-center\">{{errorMessage}}</p>\n      </div>\n    </div>\n  </div>\n</div>"
              },
              "formFieldsList": {
                "value": [
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  }
                ]
              },
              "nodeTitle": {
                "value": "Error Message"
              },
              "nodeDescription": {
                "value": "Configuration value not set error"
              },
              "backgroundColor": {
                "value": "#ffc8c1ff"
              },
              "sktemplate": {
                "uiId": "4283c0de636208a4273efe1c9fda225f",
                "createdDate": 1678116166705,
                "customerId": "f3e47d945ae971a4b4142ec75012d155",
                "description": "",
                "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"errorMessage\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"displayName\": \"Error Message\",\n\t\t\t\"preferredControlType\": \"textField\",\n\t\t\t\"enableParameters\": true,\n\t\t\t\"propertyName\": \"errorMessage\"\n\t\t}\n\t}\n}",
                "name": "Error Template",
                "outputSchema": {},
                "script": "",
                "style": "",
                "template": "",
                "updatedDate": 1678116321755,
                "validationRules": [],
                "version": "1.0",
                "visibility": "private",
                "companyId": "ee43f700-c751-494d-9dbf-70946a85b328",
                "value": "4283c0de636208a4273efe1c9fda225f"
              },
              "inputSchema": {
                "value": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"errorMessage\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"displayName\": \"Error Message\",\n\t\t\t\"preferredControlType\": \"textField\",\n\t\t\t\"enableParameters\": true,\n\t\t\t\"propertyName\": \"errorMessage\"\n\t\t}\n\t}\n}"
              },
              "outputSchema": {
                "value": {}
              },
              "customCSS": {
                "value": ""
              },
              "customScript": {
                "value": ""
              },
              "validationRules": {
                "value": []
              },
              "errorMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Unable to execute the flow due to missing flow values.\"\n      }\n    ]\n  }\n]"
              }
            },
            "idUnique": "3nm07rhtek"
          },
          "position": {
            "x": 930,
            "y": 660
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "raxv2a3pax",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#50e3c2ff"
              },
              "annotationTextColor": {
                "value": "#000000"
              },
              "annotation": {
                "value": "Add Custom JS link with https://www.google.com/recaptcha/api.js?render=SITEKEY_HERE"
              },
              "width": {
                "value": 630
              },
              "fontSize": {
                "value": 14
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "fontStyle": {
                "value": "normal"
              },
              "cornerRadius": {
                "value": 8
              },
              "strokeEnabled": {
                "value": true
              },
              "strokeWidth": {
                "value": 1
              },
              "strokeColor": {
                "value": "#181818ff"
              }
            },
            "status": "configured",
            "idUnique": "cw7x36wsom"
          },
          "position": {
            "x": 210,
            "y": 180
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        }
      ],
      "edges": [
        {
          "data": {
            "id": "b2lcafgbex",
            "source": "6wf7qezhuw",
            "target": "5p51qbker7"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "jjtxjxnong",
            "source": "7jsqi65vtl",
            "target": "srsltttf0p"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "yu7qs8bkao",
            "source": "pyvavyfdno",
            "target": "i21eb2n1ho"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "c3p7vnzix2",
            "source": "7lbvbju71e",
            "target": "mwnugsl3ez"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "4t1pv1ophd",
            "source": "srsltttf0p",
            "target": "fciwyebq1m"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "khw9yfa37k",
            "source": "fciwyebq1m",
            "target": "d5xd4gj7l7"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "eijde9sgta",
            "source": "d5xd4gj7l7",
            "target": "7lbvbju71e"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "aya2lcn0l8",
            "source": "mwnugsl3ez",
            "target": "pyvavyfdno"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "azscgzjovq",
            "source": "pyvavyfdno",
            "target": "am4qtuerzq"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "plymnjx5xg",
            "source": "fk5qu0scfl",
            "target": "6wf7qezhuw"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "5rw6er70m8",
            "source": "7jsqi65vtl",
            "target": "udbb34cil1"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "8yeixuaqt0",
            "source": "5p51qbker7",
            "target": "7jsqi65vtl"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        }
      ]
    },
    "data": {},
    "zoomingEnabled": true,
    "userZoomingEnabled": true,
    "zoom": 1,
    "minZoom": 1e-50,
    "maxZoom": 1e+50,
    "panningEnabled": true,
    "userPanningEnabled": true,
    "pan": {
      "x": 0,
      "y": 0
    },
    "boxSelectionEnabled": true,
    "renderer": {
      "name": "null"
    }
  },
  "flowColor": "#E3F0FF",
  "savedDate": 1710960745162,
  "variables": [
    {
      "context": "flowInstance",
      "createdDate": 1710952723812,
      "customerId": "f3e47d945ae971a4b4142ec75012d155",
      "fields": {
        "type": "number",
        "displayName": "",
        "mutable": true,
        "min": 0,
        "max": 2000
      },
      "type": "property",
      "visibility": "private",
      "name": "CAPTCHA_THRESHOLD##SK##flowInstance",
      "companyId": "193bc45b-146d-4bf0-88fd-b9dcb6f7288e"
    },
    {
      "context": "flowInstance",
      "createdDate": 1710942750789,
      "fields": {
        "type": "string",
        "displayName": "",
        "mutable": true,
        "min": 0,
        "max": 2000
      },
      "type": "property",
      "visibility": "private",
      "name": "CAPTCHA_V3_SECRET##SK##flowInstance",
      "companyId": "193bc45b-146d-4bf0-88fd-b9dcb6f7288e"
    },
    {
      "context": "flowInstance",
      "createdDate": 1710942750788,
      "fields": {
        "type": "string",
        "displayName": "",
        "mutable": true,
        "min": 0,
        "max": 2000
      },
      "type": "property",
      "visibility": "private",
      "name": "CAPTCHA_V3_SITE_KEY##SK##flowInstance",
      "companyId": "193bc45b-146d-4bf0-88fd-b9dcb6f7288e"
    },
    {
      "context": "flowInstance",
      "createdDate": 1705424772091,
      "fields": {
        "type": "string",
        "displayName": "",
        "mutable": true,
        "min": 0,
        "max": 2000
      },
      "type": "property",
      "visibility": "private",
      "name": "companyLogo##SK##flowInstance",
      "companyId": "193bc45b-146d-4bf0-88fd-b9dcb6f7288e"
    },
    {
      "context": "flowInstance",
      "createdDate": 1704310438220,
      "fields": {
        "type": "string",
        "displayName": "",
        "mutable": true,
        "min": 0,
        "max": 2000
      },
      "type": "property",
      "visibility": "private",
      "name": "companyName##SK##flowInstance",
      "companyId": "193bc45b-146d-4bf0-88fd-b9dcb6f7288e"
    }
  ],
  "connections": []
}