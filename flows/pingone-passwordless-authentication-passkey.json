{
  "companyId": "",
  "authTokenExpireIds": [],
  "connectorIds": [
    "variablesConnector",
    "pingOneSSOConnector",
    "pingOneMfaConnector",
    "errorConnector",
    "nodeConnector",
    "httpConnector",
    "annotationConnector",
    "functionsConnector"
  ],
  "createdDate": 1719344167184,
  "currentVersion": 1,
  "customerId": "",
  "deployedDate": 1719344201953,
  "description": "Last Updated: June 25th, 2024",
  "flowStatus": "enabled",
  "isOutputSchemaSaved": false,
  "name": "PingOne Passwordless Authentication (Passkey)",
  "publishedVersion": 1,
  "settings": {
    "csp": "worker-src 'self' blob:; script-src 'self' https://cdn.jsdelivr.net https://code.jquery.com https://devsdk.singularkey.com http://cdnjs.cloudflare.com 'unsafe-inline' 'unsafe-eval';",
    "intermediateLoadingScreenCSS": "",
    "intermediateLoadingScreenHTML": "",
    "cssLinks": [
      "https://assets.pingone.com/ux/end-user-nano/0.1.0-alpha.1/end-user-nano.css",
      "https://assets.pingone.com/ux/astro-nano/0.1.0-alpha.11/icons.css"
    ],
    "logLevel": 2,
    "useCustomCSS": true,
    "css": ".companyLogo {\n    height: 65px;\n}\n",
    "customTitle": "PingOne Passwordless Authentication (Passkey)",
    "customFaviconLink": "https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png"
  },
  "timeouts": "null",
  "updatedDate": 1719344202016,
  "flowId": "57df828ebbe19396618510bb794d77c3",
  "versionId": 1,
  "graphData": {
    "elements": {
      "nodes": [
        {
          "data": {
            "id": "r8zi8o8r4f",
            "nodeType": "CONNECTION",
            "connectionId": "06922a684039827499bdbdd97f49827b",
            "connectorId": "variablesConnector",
            "name": "Variables",
            "label": "Variables",
            "status": "configured",
            "capabilityName": "saveValue",
            "type": "trigger",
            "properties": {
              "saveVariables": {
                "value": [
                  {
                    "name": "origin",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"https://auth.pingone.com\"\n      }\n    ]\n  }\n]",
                    "key": 0.38383064124643007,
                    "label": "origin (string - flowInstance)",
                    "type": "string",
                    "nameDefault": "origin"
                  },
                  {
                    "name": "relyingParty",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"PingOne\"\n      }\n    ]\n  }\n]",
                    "key": 0.8294031869442895,
                    "label": "relyingParty (string - flowInstance)",
                    "type": "string"
                  },
                  {
                    "name": "rpId",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"auth.pingone.com\"\n      }\n    ]\n  }\n]",
                    "key": 0.33706413004714153,
                    "label": "rpId (string - flowInstance)",
                    "type": "string",
                    "nameDefault": "rpId"
                  },
                  {
                    "name": "companyName",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Ping Identity\"\n      }\n    ]\n  }\n]",
                    "key": 0.8558926100565449,
                    "label": "companyName (string - flowInstance)",
                    "type": "string"
                  },
                  {
                    "name": "companyLogo",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png\"\n      }\n    ]\n  }\n]",
                    "key": 0.8359163402441638,
                    "label": "companyLogo (string - flowInstance)",
                    "type": "string"
                  }
                ]
              },
              "nodeTitle": {
                "value": "Set flow instance variables"
              },
              "nodeDescription": {
                "value": "Initialize common values used in the flow so that they're easier to update in one place"
              }
            }
          },
          "position": {
            "x": 360,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "sx956cwe7n",
            "nodeType": "EVAL",
            "label": "Evaluator",
            "properties": {
              "ngrhly97a3": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 780,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "u03m4f9kgg",
            "nodeType": "CONNECTION",
            "connectionId": "94141bf2f1b9b59a5f5365ff135e02bb",
            "connectorId": "pingOneSSOConnector",
            "name": "PingOne",
            "label": "PingOne SSO",
            "status": "configured",
            "capabilityName": "userLookup",
            "type": "action",
            "properties": {
              "matchAttributes": {
                "value": [
                  "email"
                ]
              },
              "userIdentifierForFindUser": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"email\",\n        \"data\": \"{{local.dptoazbn84.payload.output.email}}\",\n        \"tooltip\": \"{{local.dptoazbn84.payload.output.email}}\",\n        \"children\": [\n          {\n            \"text\": \"email\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Find user by email"
              },
              "nodeDescription": {
                "value": "Searches for the user in PingOne's cloud directory"
              },
              "userLookup_localizedErrors": {
                "properties": {
                  "en": {
                    "value": [
                      {
                        "key": "unexpectedError",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"An unpexted error occurred. \"\n      }\n    ]\n  }\n]"
                      },
                      {
                        "key": "notFound",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Unknown account email address\"\n      }\n    ]\n  }\n]"
                      },
                      {
                        "key": "accessFailed",
                        "value": ""
                      },
                      {
                        "key": "noUserMatch",
                        "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Unknown account email address\"\n      }\n    ]\n  }\n]"
                      },
                      {
                        "key": "invalidFilter",
                        "value": ""
                      }
                    ]
                  }
                }
              }
            }
          },
          "position": {
            "x": 960,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "gsge8cw00c",
            "nodeType": "CONNECTION",
            "connectionId": "b72bd44e6be8180bd5988ac74cd9c949",
            "connectorId": "pingOneMfaConnector",
            "name": "PingOne MFA",
            "label": "PingOne MFA",
            "status": "configured",
            "capabilityName": "createDeviceAuthentication",
            "type": "action",
            "properties": {
              "userId": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"teleport.svg\",\n        \"url\": \"p1UserId\",\n        \"data\": \"{{local.ap8n8vd9o5.payload.output.p1UserId}}\",\n        \"tooltip\": \"{{local.ap8n8vd9o5.payload.output.p1UserId}}\",\n        \"children\": [\n          {\n            \"text\": \"p1UserId\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "selectedDevice": {
                "value": "id"
              },
              "nodeTitle": {
                "value": "Create device authentication"
              },
              "nodeDescription": {
                "value": "Starts the passwordless authentication process"
              },
              "customNotificationPolicyId": {
                "value": "{}"
              },
              "customTemplateVariant": {
                "value": "{}"
              },
              "customApplicationId": {
                "value": "{}"
              },
              "selectedDeviceId": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"functions.svg\",\n        \"url\": \"deviceId\",\n        \"data\": \"{{local.q28oycoxob.payload.output.deviceId}}\",\n        \"tooltip\": \"{{local.q28oycoxob.payload.output.deviceId}}\",\n        \"children\": [\n          {\n            \"text\": \"deviceId\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              }
            },
            "isDisabled": false
          },
          "position": {
            "x": 1564,
            "y": 1024
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "mvwa2wqxjw",
            "nodeType": "EVAL",
            "label": "Evaluator",
            "properties": {
              "ccvjbfpnmc": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 1080,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "ccvjbfpnmc",
            "nodeType": "CONNECTION",
            "connectionId": "53ab83a4a4ab919d9f2cb02d9e111ac8",
            "connectorId": "errorConnector",
            "name": "Error Message",
            "label": "Error Customize",
            "status": "configured",
            "capabilityName": "customErrorMessage",
            "type": "action",
            "properties": {
              "errorMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \" \"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"message\",\n        \"data\": \"{{local.u03m4f9kgg.payload.error.message}}\",\n        \"tooltip\": \"{{local.u03m4f9kgg.payload.error.message}}\",\n        \"children\": [\n          {\n            \"text\": \"message\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "errorDescription": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "errorCode": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"httpResponseCode\",\n        \"data\": \"{{local.u03m4f9kgg.payload.error.httpResponseCode}}\",\n        \"tooltip\": \"{{local.u03m4f9kgg.payload.error.httpResponseCode}}\",\n        \"children\": [\n          {\n            \"text\": \"httpResponseCode\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "errorReason": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"details\",\n        \"data\": \"{{local.u03m4f9kgg.payload.error.details}}\",\n        \"tooltip\": \"{{local.u03m4f9kgg.payload.error.details}}\",\n        \"children\": [\n          {\n            \"text\": \"details\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Error looking up user"
              },
              "nodeDescription": {}
            }
          },
          "position": {
            "x": 1260,
            "y": 660
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "01vp2p46tx",
            "nodeType": "CONNECTION",
            "connectionId": "e7eae662d2ca276e4c6f097fc36a3bb1",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Teleport",
            "status": "configured",
            "capabilityName": "startNode",
            "type": "trigger",
            "properties": {
              "inputSchema": {
                "value": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\n\t}\n}"
              },
              "nodeTitle": {
                "value": "Fido Assertion"
              }
            }
          },
          "position": {
            "x": 364,
            "y": 1564
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "at0xlzm63c",
            "nodeType": "EVAL",
            "label": "Evaluator"
          },
          "position": {
            "x": 484,
            "y": 1564
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "x9320opr65",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "HTTP",
            "status": "configured",
            "capabilityName": "customHTMLTemplate",
            "type": "trigger",
            "properties": {
              "customScript": {
                "value": "/**\n *\n * WebAuthn API Check\n *\n * Check whether the WebAuthn API is available and submit the corresponding\n * boolean value to advance the flow.\n *\n */\n\n/**\n * If the browser doesn't support WebAuthn, then set the value of the hidden\n * input field to false and submit the form. If the browser does support\n * WebAuthn, then set the value of the hidden input field to true and submit the\n * form\n *\n * @returns A boolean value representing WebAuthn API support.\n */\nconst webAuthnCheck = () => {\n  if (!window.PublicKeyCredential) {\n    document.getElementById('webAuthnSupport').value = false;\n    document.getElementById('webAuthnSupportSubmitBtn').click();\n    return false;\n  }\n\n  document.getElementById('webAuthnSupport').value = true;\n  document.getElementById('webAuthnSupportSubmitBtn').click();\n  return true;\n};\n\n/**\n * Wait for page to load to start the FIDO authentication process\n */\nif (document.readyState === 'loading') {\n  // Loading hasn't finished yet\n  document.addEventListener('DOMContentLoaded', webAuthnCheck);\n} else {\n  // `DOMContentLoaded` has already fired\n  const webAuthnSupportSubmitBtn = document.getElementById(\n    'webAuthnSupportSubmitBtn'\n  );\n  if (webAuthnSupportSubmitBtn) {\n    webAuthnSupportSubmitBtn.addEventListener('click', webAuthnCheck);\n  }\n\n  return webAuthnCheck();\n}\n"
              },
              "customHTML": {
                "value": "<div class=\"end-user-nano\">\n  <div\n    class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n    <form id=\"webAuthnSupportForm\" method=\"post\">\n      <input type=\"hidden\" name=\"webAuthnSupport\" id=\"webAuthnSupport\" />\n      <button type=\"hidden\" data-skcomponent=\"skbutton\" data-skbuttontype=\"form-submit\" class=\"d-none\"\n        data-skbuttonvalue=\"submit\" data-skform=\"webAuthnSupportForm\" id=\"webAuthnSupportSubmitBtn\"></button>\n    </form>\n  </div>\n</div>"
              },
              "formFieldsList": {
                "value": [
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  },
                  {
                    "propertyName": "webAuthnSupport",
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "value": "",
                    "hashedVisibility": false,
                    "displayName": "webAuthnSupport"
                  }
                ]
              },
              "nodeTitle": {
                "value": "Check WebAuthn support"
              },
              "nodeDescription": {
                "value": "Tries to call the WebAuthn API to see if we can use it for FIDO authentication"
              },
              "customCSS": {}
            }
          },
          "position": {
            "x": 664,
            "y": 1564
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "z10saabygi",
            "nodeType": "EVAL",
            "label": "Evaluator",
            "properties": {
              "kofipth4fm": {
                "value": "anyTriggersFalse"
              },
              "kyhmz9ywru": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 784,
            "y": 1564
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "b03jgmn0nl",
            "nodeType": "CONNECTION",
            "connectionId": "b72bd44e6be8180bd5988ac74cd9c949",
            "connectorId": "pingOneMfaConnector",
            "name": "PingOne MFA",
            "label": "PingOne MFA",
            "status": "configured",
            "capabilityName": "validateAssertionDeviceAuthentication",
            "type": "action",
            "properties": {
              "deviceAuthenticationId": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"id\",\n        \"data\": \"{{local.gsge8cw00c.payload.output.rawResponse.id}}\",\n        \"tooltip\": \"{{local.gsge8cw00c.payload.output.rawResponse.id}}\",\n        \"children\": [\n          {\n            \"text\": \"id\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "assertion": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"assertionValue\",\n        \"data\": \"{{local.mgdx3bmoyu.payload.output.assertionValue}}\",\n        \"tooltip\": \"{{local.mgdx3bmoyu.payload.output.assertionValue}}\",\n        \"children\": [\n          {\n            \"text\": \"assertionValue\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "origin": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"origin\",\n        \"data\": \"{{global.variables.origin}}\",\n        \"tooltip\": \"{{global.variables.origin}}\",\n        \"children\": [\n          {\n            \"text\": \"origin\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Validate FIDO assertion"
              },
              "nodeDescription": {
                "value": "Sends the FIDO assertion to PingOne MFA to validate"
              }
            }
          },
          "position": {
            "x": 1264,
            "y": 1564
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "mgdx3bmoyu",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "HTTP",
            "status": "configured",
            "capabilityName": "customHTMLTemplate",
            "type": "trigger",
            "properties": {
              "customScript": {
                "value": "/**\r\n *\r\n * FIDO Authentication\r\n *\r\n * Performs FIDO authentication using the WebAuthn API given public key\r\n * credentials option saved as a flow instance variable.\r\n *\r\n */\r\n\r\n/**\r\n * If the string is valid JSON, parse it and return the object. If it's not\r\n * valid JSON, return the string\r\n *\r\n * @param strVal - The stringified JSON object that you want to parse.\r\n * @returns The parsed JSON as an object.\r\n */\r\nconst parseJSONIfNeeded = (strVal) => {\r\n  try {\r\n    return JSON.parse(strVal);\r\n  } catch (error) {\r\n    if (error.name === 'SyntaxError') {\r\n      if (error.message === '\"[object Object]\" is not valid JSON') {\r\n        // In most cases, this means that the method argument was given as a\r\n        // JSON object, so we can just proceed.\r\n        // But, you can add debugging here if you need to investigate further.\r\n        return strVal;\r\n      } else {\r\n        // This means that we didn't get an object passed into the method as\r\n        // an object and there's a syntax problem with it.\r\n        throw new Error(\r\n          'JSON parsing failed due to improper JSON syntax found in public key credential request options string.',\r\n          {cause: error}\r\n        );\r\n      }\r\n    } else {\r\n      // This is unexpected and needs further debugging.\r\n      throw new Error('Unexpected error. Please try again.', {\r\n        cause: error,\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * It resets the error message element's text to an empty string\r\n */\r\nconst resetErrorMessageText = () => {\r\n  const errorMsgElement = document.getElementById('errorMsg');\r\n  if (errorMsgElement) {\r\n    errorMsgElement.innerHTML = '';\r\n  }\r\n};\r\n\r\n/**\r\n * Updates the error message element with passed in message\r\n *\r\n * @param message - The message to display in the error message element.\r\n * @returns True if message is updated, and false otherwise.\r\n */\r\nconst updateErrorMessageText = (message) => {\r\n  const errorMsgElement = document.getElementById('errorMsg');\r\n\r\n  if (errorMsgElement) {\r\n    errorMsgElement.innerHTML = message;\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n/**\r\n * It converts a list of credentials from the format given in the public key\r\n * credentials object to the format used by the WebAuthn API\r\n *\r\n * @param list - The list of credentials to convert.\r\n * @returns An array of credential objects which includes the type of\r\n * credential and its ID\r\n */\r\nconst credentialListConversion = (list) => {\r\n  const credList = [];\r\n\r\n  for (let i = 0; i < list.length; i++) {\r\n    const cred = {\r\n      type: list[i].type,\r\n      id: new Uint8Array(list[i].id),\r\n    };\r\n\r\n    if (list[i].transports) {\r\n      cred.transports = list[i].transports;\r\n    }\r\n\r\n    credList.push(cred);\r\n  }\r\n\r\n  return credList;\r\n};\r\n\r\n/**\r\n * It takes an object with the following properties:\r\n *\r\n * - challenge\r\n * - allowCredentials\r\n * - timeout\r\n *\r\n * And returns an object with the following properties:\r\n *\r\n * - challenge\r\n * - allowCredentials\r\n * - timeout\r\n *\r\n * The only difference is that the challenge property is converted from a base64\r\n * encoded string to a Uint8Array using @see {@link credentialListConversion}\r\n *\r\n * @param options - A public key credential request options object\r\n * @returns A publicKeyCredentialRequestOptions object with allowCredentials\r\n * converted into a Uint8Array.\r\n */\r\nconst buildPubKeyRequestOptions = (options) => {\r\n  const publicKeyCredentialRequestOptions = {};\r\n\r\n  if (options.challenge) {\r\n    publicKeyCredentialRequestOptions.challenge = new Uint8Array(\r\n      options.challenge\r\n    );\r\n  } else {\r\n    throw new Error('Missing challenge from options');\r\n  }\r\n\r\n  if (options.allowCredentials) {\r\n    publicKeyCredentialRequestOptions.allowCredentials =\r\n      credentialListConversion(options.allowCredentials);\r\n  } else {\r\n    throw new Error('Missing allowCredentials from options');\r\n  }\r\n\r\n  if (options.timeout) {\r\n    publicKeyCredentialRequestOptions.timeout = options.timeout;\r\n  } else {\r\n    throw new Error('Missing timeout from options');\r\n  }\r\n\r\n  return publicKeyCredentialRequestOptions;\r\n};\r\n\r\n/**\r\n * It converts a binary array to a base64 string\r\n *\r\n * @param bin - The binary data to convert to base64.\r\n * @returns A string of base64 encoded data.\r\n */\r\nconst toBase64Str = (bin) => {\r\n  return btoa(String.fromCharCode.apply(null, new Uint8Array(bin)));\r\n};\r\n\r\n/**\r\n * It takes a FIDO assertion object and returns a public key credential object\r\n *\r\n * @param assertion - The FIDO assertion object returned from the authenticator.\r\n * @returns A [PublicKeyCredential]{@link https://www.w3.org/TR/webauthn-2/#iface-pkcredential} object\r\n */\r\nconst createPubliCKeyCredential = (assertion) => {\r\n  const publicKeyCredential = {};\r\n  const response = {};\r\n\r\n  // Pull values from assertion to create public key credential\r\n  if (assertion.id) {\r\n    publicKeyCredential.id = assertion.id;\r\n  }\r\n\r\n  if (assertion.rawId) {\r\n    publicKeyCredential.rawId = toBase64Str(assertion.rawId);\r\n  }\r\n\r\n  if (assertion.type) {\r\n    publicKeyCredential.type = assertion.type;\r\n  }\r\n\r\n  // Create response object\r\n  response.clientDataJSON = toBase64Str(assertion.response.clientDataJSON);\r\n  response.authenticatorData = toBase64Str(\r\n    assertion.response.authenticatorData\r\n  );\r\n  response.signature = toBase64Str(assertion.response.signature);\r\n  response.userHandle = toBase64Str(assertion.response.userHandle);\r\n\r\n  // Add response object to public key credential object\r\n  publicKeyCredential.response = response;\r\n\r\n  return publicKeyCredential;\r\n};\r\n\r\n/**\r\n * It takes the options that were sent from the server, builds a public key\r\n * credential request, and then uses the WebAuthn API to get a FIDO assertion\r\n *\r\n * @param options - The public key credential request options that are passed to the getFIDOAssertion function\r\n * @returns The FIDO assertion if authentication is successful\r\n */\r\nconst getFIDOAssertion = async (options) => {\r\n  // Try to parse options in case they were sent in string form\r\n  options = parseJSONIfNeeded(options);\r\n\r\n  // Build the public key to pass into the WebAuthn API's\r\n  // [navigator.credentials.get()]{@link https://www.w3.org/TR/webauthn-2/#sctn-getAssertion}\r\n  // call using the passed in public key credential request options.\r\n  const publicKeyCredentialRequestOptions = buildPubKeyRequestOptions(options);\r\n\r\n  // Use WebAuthn API to get a FIDO assertion\r\n  try {\r\n    const assertion = await navigator.credentials.get({\r\n      publicKey: publicKeyCredentialRequestOptions,\r\n    });\r\n\r\n    // Construct, in order to send to the server to validate, a\r\n    // [PublicKeyCredential]{@link https://www.w3.org/TR/webauthn-2/#iface-pkcredential}\r\n    // object to the server for verification and registration.\r\n    const publicKeyCredential = createPubliCKeyCredential(assertion);\r\n\r\n    // Sets the assertion value\r\n    document.getElementById('assertionValue').value =\r\n      JSON.stringify(publicKeyCredential);\r\n\r\n    // Submit the assertion value and advance the flow\r\n    document.getElementById('assertionButton').click();\r\n\r\n    return JSON.stringify(publicKeyCredential);\r\n  } catch (error) {\r\n    // No acceptable authenticator or user refused consent. Cancel authentication\r\n    throw new Error(\r\n      'Failed to generate an assertion through FIDO authentication.',\r\n      {\r\n        cause: error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * It takes the public key credential request options from the flow instance\r\n * variable and uses them to request an assertion from the FIDO authenticator\r\n *\r\n * @param event - The event object that is passed to the function.\r\n * @returns The FIDO assertion object or false if FIDO\r\n * authentication failed\r\n */\r\nconst fidoAuthn = async (event) => {\r\n  event?.preventDefault();\r\n\r\n  const publicKeyCredentialRequestOptions =\r\n    '{{global.variables.publicKeyCredentialRequestOptions}}';\r\n  let assertion;\r\n\r\n  resetErrorMessageText();\r\n\r\n  if (publicKeyCredentialRequestOptions) {\r\n    try {\r\n      assertion = await getFIDOAssertion(publicKeyCredentialRequestOptions);\r\n      return assertion;\r\n    } catch (error) {\r\n      updateErrorMessageText(error, {cause: error});\r\n      return false;\r\n    }\r\n  } else {\r\n    // Missing Public Key Credential request Options\r\n    updateErrorMessageText('Missing credential request options');\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n/**\r\n * Wait for page to load to start the FIDO authentication process\r\n */\r\nif (document.readyState === 'loading') {\r\n  // Loading hasn't finished yet\r\n  document.addEventListener('DOMContentLoaded', fidoAuthn);\r\n} else {\r\n  // `DOMContentLoaded` has already fired\r\n  const fidoBtn = document.getElementById('fidoButton');\r\n  if (fidoBtn) {\r\n    fidoBtn.addEventListener('click', fidoAuthn);\r\n  }\r\n\r\n  return fidoAuthn();\r\n}\r\n"
              },
              "customHTML": {
                "value": "<div class=\"end-user-nano\">\r\n  <div\r\n    class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0\">\r\n    <div style=\"max-width: 400px; width: 100%\">\r\n      <div class=\"card shadow mb-5\">\r\n        <main aria-labelledby=\"title\">\r\n          <div class=\"card-body p-5 d-flex flex-column\">\r\n            <img class=\"companyLogo align-self-center mb-5\" src=\"{{global.variables.companyLogo}}\" alt=\"{{global.variables.companyName}}\" />\r\n            \r\n            {{#if title}}\r\n            <h1 id=\"title\" class=\"text-center mb-4\">\r\n              <i class=\"mdi mdi-account-key-outline text-dark fs-1\" aria-hidden=\"true\"></i>\r\n              {{title}}\r\n            </h1>\r\n            {{/if}}\r\n\r\n            {{#if text}}\r\n            <p class=\"text-muted text-center\">{{text}}</p>\r\n            {{/if}}\r\n\r\n            <!-- Generic Error Message -->\r\n            <p id=\"errorMsg\" class=\"text-danger\" data-id=\"feedback2\" aria-live=\"assertive\"></p>\r\n            <p id=\"errorReturned\" class=\"text-danger mdi mdi-alert-circle\" data-id=\"feedback\"\r\n              data-skcomponent=\"skerror\" aria-live=\"assertive\"></p>\r\n\r\n            <form id=\"securityKeyForm\" method=\"post\">\r\n              <div class=\"float-label placeholder-shown\">\r\n                <input type=\"hidden\" name=\"assertionValue\" id=\"assertionValue\" />\r\n                <button data-skcomponent=\"skbutton\" data-skbuttontype=\"form-submit\" class=\"d-none\"\r\n              data-skbuttonvalue=\"submit\" data-skform=\"securityKeyForm\" id=\"assertionButton\" ></button>\r\n              </div>\r\n            </form>\r\n            <form id=\"authenticateForm\">\r\n              <div class=\"d-flex flex-column\">\r\n                {{#if continueButtonLabel}}\r\n                <button id=\"fidoButton\" data-id=\"button\" type=\"submit\" class=\"btn btn-primary mb-3\" >\r\n                {{continueButtonLabel}}\r\n                </button>\r\n                {{/if}}\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"
              },
              "formFieldsList": {
                "value": [
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  },
                  {
                    "propertyName": "assertionValue",
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "value": "",
                    "hashedVisibility": false
                  }
                ]
              },
              "nodeTitle": {
                "value": "Perform FIDO authentication"
              },
              "nodeDescription": {
                "value": "Starts the FIDO authentication process by calling the WebAuthn API"
              },
              "customCSS": {},
              "inputSchema": {
                "value": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\t\"title\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"displayName\": \"Title\",\n\t\t\t\t\t\"preferredControlType\": \"textField\",\n\t\t\t\t\t\"enableParameters\": true,\n\t\t\t\t\t\"propertyName\": \"title\"\n\t\t\t},\n\t\t\t\"text\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"displayName\": \"Text\",\n\t\t\t\t\"preferredControlType\": \"textField\",\n\t\t\t\t\"enableParameters\": true\n\t\t\t},\n\t\t\t\"continueButtonLabel\": {\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"displayName\": \"Continue Button Label\",\n\t\t\t\t\"preferredControlType\": \"textField\",\n\t\t\t\t\"enableParameters\": true\n\t\t\t}\n\t}\n}"
              },
              "title": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Passkey Authentication\"\n      }\n    ]\n  }\n]"
              },
              "text": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Authenticate using the Passkey associated with your account.\"\n      }\n    ]\n  }\n]"
              },
              "continueButtonLabel": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Continue\"\n      }\n    ]\n  }\n]"
              }
            }
          },
          "position": {
            "x": 964,
            "y": 1564
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "0dw3vsq367",
            "nodeType": "EVAL",
            "label": "Evaluator",
            "properties": {
              "afu89ypqhb": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 1684,
            "y": 1024
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "zwt0or4z6o",
            "nodeType": "CONNECTION",
            "connectionId": "e7eae662d2ca276e4c6f097fc36a3bb1",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Teleport",
            "status": "configured",
            "capabilityName": "returnBackToCallingNode",
            "type": "trigger",
            "properties": {
              "nodeInstanceId": {
                "value": "01vp2p46tx"
              },
              "nodeTitle": {
                "value": "Return to Caller"
              }
            },
            "isDisabled": false
          },
          "position": {
            "x": 2164,
            "y": 1024
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "yf1t67pc8j",
            "nodeType": "EVAL",
            "label": "Evaluator",
            "properties": {
              "shyxs11svr": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 1084,
            "y": 1564
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "ntnncti7p6",
            "nodeType": "EVAL",
            "label": "Evaluator",
            "properties": {
              "5ipq6u4p2u": {
                "value": "anyTriggersFalse"
              },
              "uwyqecwjrw": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 1384,
            "y": 1564
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "ta3dbpb82p",
            "nodeType": "CONNECTION",
            "connectionId": "e7eae662d2ca276e4c6f097fc36a3bb1",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Teleport",
            "status": "configured",
            "capabilityName": "returnBackToCallingNode",
            "type": "trigger",
            "properties": {
              "nodeInstanceId": {
                "value": "2em34dfoyh"
              },
              "nodeTitle": {
                "value": "Return to Caller"
              }
            }
          },
          "position": {
            "x": 1564,
            "y": 1564
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "kyhmz9ywru",
            "nodeType": "CONNECTION",
            "connectionId": "53ab83a4a4ab919d9f2cb02d9e111ac8",
            "connectorId": "errorConnector",
            "name": "Error Message",
            "label": "Error Customize",
            "status": "configured",
            "capabilityName": "customErrorMessage",
            "type": "action",
            "properties": {
              "errorMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"code\",\n        \"data\": \"{{local.x9320opr65.payload.error.code}}\",\n        \"tooltip\": \"{{local.x9320opr65.payload.error.code}}\",\n        \"children\": [\n          {\n            \"text\": \"code\"\n          }\n        ]\n      },\n      {\n        \"text\": \" \"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"message\",\n        \"data\": \"{{local.x9320opr65.payload.error.message}}\",\n        \"tooltip\": \"{{local.x9320opr65.payload.error.message}}\",\n        \"children\": [\n          {\n            \"text\": \"message\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "errorDescription": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"WebAuthn check didn't pass\"\n      }\n    ]\n  }\n]"
              },
              "errorCode": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"httpResponseCode\",\n        \"data\": \"{{local.x9320opr65.payload.error.httpResponseCode}}\",\n        \"tooltip\": \"{{local.x9320opr65.payload.error.httpResponseCode}}\",\n        \"children\": [\n          {\n            \"text\": \"httpResponseCode\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "errorReason": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"details\",\n        \"data\": \"{{local.x9320opr65.payload.error.details}}\",\n        \"tooltip\": \"{{local.x9320opr65.payload.error.details}}\",\n        \"children\": [\n          {\n            \"text\": \"details\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "WebAuthn API is not available currently on this browser"
              },
              "nodeDescription": {
                "value": "WebAuthn API request failed"
              }
            }
          },
          "position": {
            "x": 964,
            "y": 1804
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "shyxs11svr",
            "nodeType": "CONNECTION",
            "connectionId": "53ab83a4a4ab919d9f2cb02d9e111ac8",
            "connectorId": "errorConnector",
            "name": "Error Message",
            "label": "Error Customize",
            "status": "configured",
            "capabilityName": "customErrorMessage",
            "type": "action",
            "properties": {
              "errorMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"code\",\n        \"data\": \"{{local.mgdx3bmoyu.payload.error.code}}\",\n        \"tooltip\": \"{{local.mgdx3bmoyu.payload.error.code}}\",\n        \"children\": [\n          {\n            \"text\": \"code\"\n          }\n        ]\n      },\n      {\n        \"text\": \" \"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"message\",\n        \"data\": \"{{local.mgdx3bmoyu.payload.error.message}}\",\n        \"tooltip\": \"{{local.mgdx3bmoyu.payload.error.message}}\",\n        \"children\": [\n          {\n            \"text\": \"message\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "errorDescription": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"FIDO authn failed\"\n      }\n    ]\n  }\n]"
              },
              "errorCode": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"httpResponseCode\",\n        \"data\": \"{{local.mgdx3bmoyu.payload.error.httpResponseCode}}\",\n        \"tooltip\": \"{{local.mgdx3bmoyu.payload.error.httpResponseCode}}\",\n        \"children\": [\n          {\n            \"text\": \"httpResponseCode\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "errorReason": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"details\",\n        \"data\": \"{{local.mgdx3bmoyu.payload.error.details}}\",\n        \"tooltip\": \"{{local.mgdx3bmoyu.payload.error.details}}\",\n        \"children\": [\n          {\n            \"text\": \"details\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Error during FIDO authentication"
              },
              "nodeDescription": {}
            }
          },
          "position": {
            "x": 1264,
            "y": 1804
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "vn9wo2fja9",
            "nodeType": "CONNECTION",
            "connectionId": "e7eae662d2ca276e4c6f097fc36a3bb1",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Teleport",
            "status": "configured",
            "capabilityName": "goToNode",
            "type": "action",
            "properties": {
              "nodeInstanceId": {
                "value": "ap8n8vd9o5"
              },
              "p1UserId": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"id\",\n        \"data\": \"{{local.u03m4f9kgg.payload.output.matchedUser.id}}\",\n        \"tooltip\": \"{{local.u03m4f9kgg.payload.output.matchedUser.id}}\",\n        \"children\": [\n          {\n            \"text\": \"id\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Go to Create Device AuthN"
              }
            }
          },
          "position": {
            "x": 1860,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "ap8n8vd9o5",
            "nodeType": "CONNECTION",
            "connectionId": "e7eae662d2ca276e4c6f097fc36a3bb1",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Teleport",
            "status": "configured",
            "capabilityName": "startNode",
            "type": "trigger",
            "properties": {
              "inputSchema": {
                "value": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"p1UserId\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"displayName\": \"PingOne User Id\",\n\t\t\t\"preferredControlType\": \"textField\",\n\t\t\t\"enableParameters\": true,\n\t\t\t\"propertyName\": \"p1UserId\"\n\t\t}\n\t}\n}"
              },
              "nodeTitle": {
                "value": "Create Device AuthN"
              }
            }
          },
          "position": {
            "x": 364,
            "y": 1024
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "nq94ghth36",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 484,
            "y": 1024
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "ppfxva6xjh",
            "nodeType": "CONNECTION",
            "connectionId": "06922a684039827499bdbdd97f49827b",
            "connectorId": "variablesConnector",
            "name": "Variables",
            "label": "Variables",
            "status": "configured",
            "capabilityName": "saveValue",
            "type": "trigger",
            "properties": {
              "saveVariables": {
                "value": [
                  {
                    "name": "deviceID",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"id\",\n        \"data\": \"{{local.gsge8cw00c.payload.output.rawResponse.selectedDevice.id}}\",\n        \"tooltip\": \"{{local.gsge8cw00c.payload.output.rawResponse.selectedDevice.id}}\",\n        \"children\": [\n          {\n            \"text\": \"id\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                    "key": 0.11636573789108229,
                    "label": "deviceID (string - flowInstance)",
                    "type": "string",
                    "nameDefault": "id"
                  },
                  {
                    "name": "publicKeyCredentialRequestOptions",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"publicKeyCredentialRequestOptions\",\n        \"data\": \"{{local.gsge8cw00c.payload.output.rawResponse.publicKeyCredentialRequestOptions}}\",\n        \"tooltip\": \"{{local.gsge8cw00c.payload.output.rawResponse.publicKeyCredentialRequestOptions}}\",\n        \"children\": [\n          {\n            \"text\": \"publicKeyCredentialRequestOptions\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                    "key": 0.7715691879957605,
                    "label": "publicKeyCredentialRequestOptions (string - flowInstance)",
                    "type": "string",
                    "nameDefault": "publicKeyCredentialRequestOptions"
                  },
                  {
                    "name": "deviceAuthnID",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"id\",\n        \"data\": \"{{local.gsge8cw00c.payload.output.rawResponse.id}}\",\n        \"tooltip\": \"{{local.gsge8cw00c.payload.output.rawResponse.id}}\",\n        \"children\": [\n          {\n            \"text\": \"id\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                    "key": 0.8343674015719504,
                    "label": "deviceAuthnID (string - flowInstance)",
                    "type": "string",
                    "nameDefault": "id"
                  }
                ]
              },
              "nodeTitle": {
                "value": "deviceID, publicKeyCredentialRequestOptions, deviceAuthenticationID"
              },
              "nodeDescription": {
                "value": "Saves a few of the variables returned from PingOne MFA that'll be needed for FIDO authentication"
              }
            }
          },
          "position": {
            "x": 1864,
            "y": 1024
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "64ag2q81bi",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 1984,
            "y": 1024
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "uwyqecwjrw",
            "nodeType": "CONNECTION",
            "connectionId": "53ab83a4a4ab919d9f2cb02d9e111ac8",
            "connectorId": "errorConnector",
            "name": "Error Message",
            "label": "Error Customize",
            "status": "configured",
            "capabilityName": "customErrorMessage",
            "type": "action",
            "properties": {
              "errorMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"code\",\n        \"data\": \"{{local.b03jgmn0nl.payload.error.code}}\",\n        \"tooltip\": \"{{local.b03jgmn0nl.payload.error.code}}\",\n        \"children\": [\n          {\n            \"text\": \"code\"\n          }\n        ]\n      },\n      {\n        \"text\": \" \"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"message\",\n        \"data\": \"{{local.b03jgmn0nl.payload.error.message}}\",\n        \"tooltip\": \"{{local.b03jgmn0nl.payload.error.message}}\",\n        \"children\": [\n          {\n            \"text\": \"message\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "errorCode": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"httpResponseCode\",\n        \"data\": \"{{local.b03jgmn0nl.payload.error.httpResponseCode}}\",\n        \"tooltip\": \"{{local.b03jgmn0nl.payload.error.httpResponseCode}}\",\n        \"children\": [\n          {\n            \"text\": \"httpResponseCode\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "errorReason": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"details\",\n        \"data\": \"{{local.b03jgmn0nl.payload.error.details}}\",\n        \"tooltip\": \"{{local.b03jgmn0nl.payload.error.details}}\",\n        \"children\": [\n          {\n            \"text\": \"details\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "errorDescription": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Failed to validate the assertion.\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Fido Assertion Error"
              },
              "nodeDescription": {
                "value": "Fido assertion failed"
              }
            }
          },
          "position": {
            "x": 1564,
            "y": 1804
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "m0d7up1jjt",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#4462edff"
              },
              "annotationTextColor": {
                "value": "#ffffffff"
              },
              "annotation": {
                "value": "Passwordless Authentication using Passkey"
              },
              "strokeEnabled": {
                "value": false
              },
              "strokeWidth": {
                "value": 0
              },
              "strokeColor": {
                "value": "#b1b7bdff"
              },
              "height": {
                "value": 0
              },
              "width": {
                "value": 2350
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "cornerRadius": {
                "value": 8
              },
              "fontStyle": {
                "value": "bold"
              },
              "fontSize": {
                "value": 16
              }
            },
            "status": "configured",
            "idUnique": "r5q8zay1vq"
          },
          "position": {
            "x": 210,
            "y": 270
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "bwh00pp7di",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#5d00d6ff"
              },
              "annotationTextColor": {
                "value": "#ffffffff"
              },
              "annotation": {
                "value": "Create Device Authentication"
              },
              "strokeEnabled": {
                "value": false
              },
              "strokeWidth": {
                "value": 0
              },
              "strokeColor": {
                "value": "#b1b7bdff"
              },
              "height": {
                "value": 0
              },
              "width": {
                "value": 2100
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "cornerRadius": {
                "value": 8
              },
              "fontStyle": {
                "value": "bold"
              },
              "fontSize": {
                "value": 14
              }
            },
            "status": "configured",
            "idUnique": "gjgpsh3fr2"
          },
          "position": {
            "x": 210,
            "y": 810
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "qmpopjqt2g",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#5d00d6ff"
              },
              "annotationTextColor": {
                "value": "#ffffffff"
              },
              "annotation": {
                "value": "Fido Assertion"
              },
              "strokeEnabled": {
                "value": false
              },
              "strokeWidth": {
                "value": 0
              },
              "strokeColor": {
                "value": "#b1b7bdff"
              },
              "height": {
                "value": 0
              },
              "width": {
                "value": 1500
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "cornerRadius": {
                "value": 8
              },
              "fontStyle": {
                "value": "bold"
              },
              "fontSize": {
                "value": 14
              }
            },
            "status": "configured",
            "idUnique": "f1xgp5tmad"
          },
          "position": {
            "x": 214,
            "y": 1384
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "afu89ypqhb",
            "nodeType": "CONNECTION",
            "connectionId": "53ab83a4a4ab919d9f2cb02d9e111ac8",
            "connectorId": "errorConnector",
            "name": "Error Message",
            "label": "Error Customize",
            "status": "configured",
            "capabilityName": "customErrorMessage",
            "type": "action",
            "properties": {
              "errorMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"code\",\n        \"data\": \"{{local.gsge8cw00c.payload.error.code}}\",\n        \"tooltip\": \"{{local.gsge8cw00c.payload.error.code}}\",\n        \"children\": [\n          {\n            \"text\": \"code\"\n          }\n        ]\n      },\n      {\n        \"text\": \" \"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"message\",\n        \"data\": \"{{local.gsge8cw00c.payload.error.message}}\",\n        \"tooltip\": \"{{local.gsge8cw00c.payload.error.message}}\",\n        \"children\": [\n          {\n            \"text\": \"message\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "errorDescription": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Error when trying to create a device authentication process with PingOne MFA\"\n      }\n    ]\n  }\n]"
              },
              "errorCode": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"httpResponseCode\",\n        \"data\": \"{{local.gsge8cw00c.payload.error.httpResponseCode}}\",\n        \"tooltip\": \"{{local.gsge8cw00c.payload.error.httpResponseCode}}\",\n        \"children\": [\n          {\n            \"text\": \"httpResponseCode\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "errorReason": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"details\",\n        \"data\": \"{{local.gsge8cw00c.payload.error.details}}\",\n        \"tooltip\": \"{{local.gsge8cw00c.payload.error.details}}\",\n        \"children\": [\n          {\n            \"text\": \"details\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Failed creating device authentication"
              },
              "nodeDescription": {
                "value": "Something went wrong when trying to start device authentication"
              }
            }
          },
          "position": {
            "x": 1864,
            "y": 1204
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "xlxyvg637p",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#50e3c2ff"
              },
              "annotationTextColor": {
                "value": "#000000"
              },
              "annotation": {
                "value": "Set rpId, origin, company, logo"
              },
              "width": {
                "value": 240
              },
              "fontSize": {
                "value": 14
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "fontStyle": {
                "value": "normal"
              },
              "cornerRadius": {
                "value": 8
              },
              "strokeEnabled": {
                "value": true
              },
              "strokeWidth": {
                "value": 1
              },
              "strokeColor": {
                "value": "#181818ff"
              }
            },
            "status": "configured",
            "idUnique": "lb31g4gkg6"
          },
          "position": {
            "x": 240,
            "y": 330
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "c5dj7tw0ns",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#f7f7adff"
              },
              "annotationTextColor": {
                "value": "#000000"
              },
              "annotation": {
                "value": "Input Schema: p1UserId"
              },
              "width": {
                "value": 350
              },
              "fontSize": {
                "value": 14
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "cornerRadius": {
                "value": 8
              },
              "strokeEnabled": {
                "value": false
              },
              "strokeWidth": {
                "value": 1
              },
              "strokeColor": {
                "value": "#181818ff"
              }
            },
            "status": "configured",
            "idUnique": "d2mbrib33f"
          },
          "position": {
            "x": 214,
            "y": 874
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "d68twlnn4l",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 480,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "dptoazbn84",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "Http",
            "status": "configured",
            "capabilityName": "customHTMLTemplate",
            "type": "trigger",
            "properties": {
              "textOne": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"In this PingOne DaVinci demo, we'll guide you through a password-free user authentication journey using Passkeys.\"\n      }\n    ]\n  }\n]"
              },
              "customHTML": {
                "value": "<div class=\"end-user-nano\">\n  <div\n    class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n    <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n      <div class=\"card shadow mb-5\">\n        <main aria-labelledby=\"title\">\n          <div class=\"card-body p-5 d-flex flex-column\">\n            <img class=\"companyLogo align-self-center mb-5\" src=\"{{global.variables.companyLogo}}\" alt=\"{{global.variables.companyName}}\">\n\n            {{#if title}}\n            <h1 id=\"title\" class=\"text-center mb-4\">{{title}}</h1>\n            {{/if}}\n\n            {{#if textOne}}\n            <p class=\"text-muted text-center\">{{textOne}}</p>\n            {{/if}}\n\n            {{#if textTwo}}\n            <p class=\"text-muted text-center\">{{textTwo}}</p>\n            {{/if}}\n\n            <!-- Generic Error Message -->\n            <p class=\"text-danger mdi mdi-alert-circle text-center\" id=\"feedbackError\" data-id=\"feedback\"\n              data-skcomponent=\"skerror\" aria-live=\"assertive\"></p>\n\n            <!-- Field Validation Error Messages -->\n            <p class=\"text-danger mdi mdi-alert-circle text-center\" id=\"emailError\" data-skerrorid=\"email\"\n              data-skcomponent=\"skerrormessage\" aria-live=\"assertive\"></p>\n            <p class=\"text-danger mdi mdi-alert-circle text-center\" id=\"passwordError\" data-skerrorid=\"password\"\n              data-skcomponent=\"skerrormessage\" aria-live=\"assertive\"></p>\n\n            {{#if userMessage}}\n            <p class=\"text-info text-center fade\" aria-live=\"assertive\">{{userMessage}}</p>\n            {{/if}}\n\n            <form id=\"emailForm\" aria-labelledby=\"title\" data-id=\"emailForm\">\n              <div class=\"mb-4 form-floating\">\n                <input class=\"form-control\" type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email Address\"\n                  autocomplete=\"email\" value=\"\" data-id=\"email-input\" aria-required=\"true\"\n                  aria-describedby=\"emailLabel\" />\n                <label id=\"emailLabel\" for=\"email\">Email Address</label>\n              </div>\n              <div class=\"d-flex flex-column\">\n                {{#if continueButtonLabel}}\n                <button data-id=\"button\" type=\"submit\" class=\"btn btn-primary mb-3\" data-skcomponent=\"skbutton\"\n                  data-skbuttontype=\"form-submit\" id=\"btnContinue\" data-skform=\"emailForm\"\n                  data-skbuttonvalue=\"CONTINUE\">\n                  {{continueButtonLabel}}\n                </button>\n                {{/if}}\n              </div>\n            </form>\n          </div>\n        </main>\n      </div>\n    </div>\n  </div>\n</div>\n"
              },
              "formFieldsList": {
                "value": [
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "email",
                    "displayName": "Email Address",
                    "hashedVisibility": false,
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  }
                ]
              },
              "nodeTitle": {
                "value": "User Identifier Form"
              },
              "customCSS": {
                "value": "@keyframes fadeOut {\n    0% {\n        opacity: 1;\n        visibility: visible;\n    }\n    80% {\n        opacity: .8;\n        visibility: visible;\n    }\n\n    100% {\n        opacity: 0;\n        visibility: hidden;\n        max-height: 0;\n    }\n}\n\n.fade {\n    overflow: hidden;\n    animation: fadeOut 20s forwards;\n}"
              },
              "validationRules": {
                "value": [
                  {
                    "propertyName": "email",
                    "rules": [
                      {
                        "ruleName": "presence",
                        "message": "Enter your email address"
                      },
                      {
                        "ruleName": "email",
                        "message": "Enter a valid email address"
                      }
                    ]
                  }
                ]
              },
              "backgroundColor": {
                "value": "#afd5ffff"
              },
              "customScript": {
                "value": "const setFieldFocus = (id) => {\n    const element = document.getElementById(id);\n    if (element) {\n        element.focus();\n    }\n}\n\nconst start = () => {\n    setFieldFocus(\"email\")\n}\n\nif (document.readyState === \"loading\") {\n    // Loading hasn't finished yet\n    document.addEventListener(\"DOMContentLoaded\", start);\n} else {\n    // `DOMContentLoaded` has already fired\n    start();\n}"
              },
              "inputSchema": {
                "value": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"displayName\": \"Title\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true\n    },\n    \"textOne\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text One\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true\n    },\n    \"textTwo\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text Two\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true\n    },\n    \"userMessage\": {\n      \"type\": \"string\",\n      \"displayName\": \"User Message\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true\n    },\n    \"continueButtonLabel\": {\n      \"type\": \"string\",\n      \"displayName\": \"Continue Button Label\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true\n    }\n  }\n}"
              },
              "outputSchema": {
                "value": {}
              },
              "title": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Passwordless Authentication\"\n      }\n    ]\n  }\n]"
              },
              "nodeDescription": {
                "value": "Prompt for email address"
              },
              "continueButtonLabel": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Continue\"\n      }\n    ]\n  }\n]"
              },
              "textTwo": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"To get started, please enter your email address.\"\n      }\n    ]\n  }\n]"
              }
            },
            "idUnique": "57lqxqhco2"
          },
          "position": {
            "x": 660,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "99fns6k8sr",
            "nodeType": "CONNECTION",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "name": "Functions",
            "label": "Functions",
            "status": "configured",
            "capabilityName": "AEqualsB",
            "type": "trigger",
            "properties": {
              "leftValueA": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"enabled\",\n        \"data\": \"{{local.u03m4f9kgg.payload.output.matchedUser.enabled}}\",\n        \"tooltip\": \"{{local.u03m4f9kgg.payload.output.matchedUser.enabled}}\",\n        \"children\": [\n          {\n            \"text\": \"enabled\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Is Account Enabled?"
              },
              "rightValueB": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"true\"\n      }\n    ]\n  }\n]"
              },
              "type": {
                "value": "boolean"
              }
            },
            "idUnique": "6196jt64tw"
          },
          "position": {
            "x": 1260,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "3qcdrfs6pp",
            "nodeType": "CONNECTION",
            "connectionId": "53ab83a4a4ab919d9f2cb02d9e111ac8",
            "connectorId": "errorConnector",
            "name": "Error Message",
            "label": "Error Message",
            "status": "configured",
            "capabilityName": "customErrorMessage",
            "type": "action",
            "properties": {
              "errorMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Unable to process sign on at this time.\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Account Disabled"
              },
              "nodeDescription": {}
            },
            "idUnique": "t5z5v4f7wp"
          },
          "position": {
            "x": 1560,
            "y": 660
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "bco2yzbcmm",
            "nodeType": "EVAL",
            "properties": {
              "3qcdrfs6pp": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 1380,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "ia42xbbbkn",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "Http",
            "status": "configured",
            "capabilityName": "customHTMLTemplate",
            "type": "trigger",
            "properties": {
              "customHTML": {
                "value": "<div class=\"end-user-nano\">\n    <div\n        class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n        <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n            <div class=\"card shadow mb-5\">\n                <main aria-labelledby=\"title\">\n                    <div class=\"card-body p-5 d-flex flex-column\">\n                        <img class=\"companyLogo align-self-center mb-5\" src=\"{{global.variables.companyLogo}}\" alt=\"{{global.variables.companyName}}\" />\n\n                        {{#if title}}\n                        <h1 id=\"title\" class=\"text-center mb-4\">{{title}}</h1>\n                        {{/if}}\n\n                        <div class=\"mx-auto mt-3 mb-4\">\n                            <svg class=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 52 52\">\n                                <circle class=\"checkmarkCircle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" />\n                                <path class=\"checkmarkCheck\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\n                            </svg>\n                        </div>\n\n                        {{#if textOne}}\n                        <p class=\"text-muted text-center\">{{textOne}}</p>\n                        {{/if}}\n\n                        {{#if textTwo}}\n                        <p class=\"text-muted text-center\">{{textTwo}}</p>\n                        {{/if}}\n\n                        <p class=\"text-danger mdi mdi-alert-circle\" data-id=\"feedback\" data-skcomponent=\"skerror\" aria-live=\"assertive\"></p>\n\n                        {{#if buttonLabel}}\n                        <div class=\"d-flex flex-column\">\n                            <button id=\"submitBtn\" data-id=\"submitBtn\" class=\"btn btn-primary mb-3\" type=\"submit\" data-skcomponent=\"skbutton\"\n                            data-skbuttontype=\"next-event\" data-skbuttonvalue=\"NEXT\" >\n                            {{buttonLabel}}\n                            </button>\n                        </div>\n                        {{/if}}\n                    </div>\n                </main>\n            </div>\n        </div>\n    </div>\n</div>"
              },
              "formFieldsList": {
                "value": [
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "username",
                    "displayName": "Username",
                    "hashedVisibility": false,
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  },
                  {
                    "propertyName": "password",
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "value": "",
                    "hashedVisibility": true,
                    "displayName": "Password"
                  }
                ]
              },
              "nodeTitle": {
                "value": "Sign On Success"
              },
              "customCSS": {
                "value": ":root {\n  --animation-dimension: 120px;\n  --animation-start-color: #71e171;\n  --animation-midway-color: #67d067;\n  --animation-finish-color: #59b259;\n}\n\n.checkmark {\n  width: var(--animation-dimension);\n  height: var(--animation-dimension);\n  border-radius: 50%;\n  display: block;\n  stroke-width: 5;\n  stroke: #ffffff;\n  stroke-miterlimit: 10;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n  animation: fill 0.4s ease-in-out 0.4s forwards,\n    scale 0.3s ease-in-out 0.9s both;\n}\n\n.checkmarkCircle {\n  stroke-dasharray: 166;\n  stroke-dashoffset: 166;\n  stroke-width: 5;\n  stroke-miterlimit: 10;\n  stroke: var(--animation-finish-color);\n  fill: none;\n  animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards,\n    colorChange 1.2s ease-in-out forwards;\n}\n\n.checkmarkCheck {\n  transform-origin: 50% 50%;\n  stroke-dasharray: 48;\n  stroke-dashoffset: 48;\n  animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards,\n    colorChange 0.6s ease-in-out 0.8s forwards;\n}\n\n@keyframes colorChange {\n  0% {\n    stroke: var(--animation-start-color);\n  }\n  50% {\n    stroke: var(--animation-midway-color);\n  } \n  100% {\n    stroke: var(--animation-finish-color);\n  }\n}\n\n@keyframes stroke {\n  100% {\n    stroke-dashoffset: 0;\n  }\n}\n@keyframes scale {\n  0%,\n  100% {\n    transform: none;\n  }\n  50% {\n    transform: scale3d(1.1, 1.1, 1);\n  }\n  70% {\n    transform: scale3d(0.98, 0.98, 1);\n  }\n  85% {\n    transform: scale3d(1.02, 1.02, 1);\n  }\n}\n@keyframes fill {\n  100% {\n    box-shadow: inset 0px 0px 0px 0px var(--animation-finish-color);\n  }\n}"
              },
              "validationRules": {
                "value": []
              },
              "backgroundColor": {
                "value": "#9dc967ff"
              },
              "customScript": {},
              "inputSchema": {
                "value": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"title\": {\n            \"type\": \"string\",\n            \"displayName\": \"Title\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true,\n            \"propertyName\": \"title\"\n        },\n\t\"textOne\": {\n            \"type\": \"string\",\n            \"displayName\": \"Text One\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true,\n            \"propertyName\": \"textOne\"\n        },\n\t\"textTwo\": {\n            \"type\": \"string\",\n            \"displayName\": \"Text Two\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true,\n            \"propertyName\": \"textTwo\"\n        },\n        \"buttonLabel\": {\n            \"type\": \"string\",\n            \"displayName\": \"Button Label\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true,\n            \"propertyName\": \"buttonLabel\"\n        }\n    }\n}"
              },
              "title": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Sign On Success!\"\n      }\n    ]\n  }\n]"
              },
              "nodeDescription": {},
              "textOne": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"You have successfully authenticated with Passkeys.\"\n      }\n    ]\n  }\n]"
              },
              "textTwo": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "oeInteractionCacheExpire": {
                "value": true
              }
            },
            "idUnique": "m5txw8t054"
          },
          "position": {
            "x": 2460,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "82309xl9lv",
            "nodeType": "CONNECTION",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "name": "Functions",
            "label": "Functions",
            "status": "configured",
            "capabilityName": "AEqualsB",
            "type": "trigger",
            "properties": {
              "leftValueA": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"mfaEnabled\",\n        \"data\": \"{{local.u03m4f9kgg.payload.output.matchedUser.mfaEnabled}}\",\n        \"tooltip\": \"{{local.u03m4f9kgg.payload.output.matchedUser.mfaEnabled}}\",\n        \"children\": [\n          {\n            \"text\": \"mfaEnabled\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Is MFA Enabled?"
              },
              "rightValueB": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"true\"\n      }\n    ]\n  }\n]"
              },
              "type": {
                "value": "boolean"
              }
            },
            "idUnique": "4uyyopw2gn"
          },
          "position": {
            "x": 1560,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "6bmr0cwshd",
            "nodeType": "CONNECTION",
            "connectionId": "53ab83a4a4ab919d9f2cb02d9e111ac8",
            "connectorId": "errorConnector",
            "name": "Error Message",
            "label": "Error Message",
            "status": "configured",
            "capabilityName": "customErrorMessage",
            "type": "action",
            "properties": {
              "errorMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"MFA is not enabled on your account.\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "MFA Disabled"
              },
              "nodeDescription": {}
            },
            "idUnique": "4g052myskj"
          },
          "position": {
            "x": 1860,
            "y": 660
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "0ehqqvjo3c",
            "nodeType": "EVAL",
            "properties": {
              "6bmr0cwshd": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 1680,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "rxv22ed1pu",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#f7f7adff"
              },
              "annotationTextColor": {
                "value": "#000000"
              },
              "annotation": {
                "value": "Input Schema: __none__"
              },
              "width": {
                "value": 350
              },
              "fontSize": {
                "value": 14
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "cornerRadius": {
                "value": 8
              },
              "strokeEnabled": {
                "value": false
              },
              "strokeWidth": {
                "value": 1
              },
              "strokeColor": {
                "value": "#181818ff"
              }
            },
            "status": "configured",
            "idUnique": "qqjzulpdsn"
          },
          "position": {
            "x": 214,
            "y": 1444
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "612rl6gyv9",
            "nodeType": "EVAL",
            "label": "Evaluator"
          },
          "position": {
            "x": 1980,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "1b2botkplr",
            "nodeType": "CONNECTION",
            "connectionId": "e7eae662d2ca276e4c6f097fc36a3bb1",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Node",
            "status": "configured",
            "capabilityName": "goToNode",
            "type": "action",
            "properties": {
              "nodeInstanceId": {
                "value": "01vp2p46tx"
              },
              "nodeTitle": {
                "value": "Go to Fido Assertion"
              }
            }
          },
          "position": {
            "x": 2160,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "bu0153njvd",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 2280,
            "y": 450
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "nmkwo2zy63",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#ffffffff"
              },
              "annotationTextColor": {
                "value": "#000000"
              },
              "annotation": {
                "value": "Last Updated: June 25th, 2024"
              },
              "width": {
                "value": 240
              },
              "fontSize": {
                "value": 14
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "cornerRadius": {
                "value": 8
              },
              "strokeEnabled": {
                "value": false
              },
              "strokeWidth": {
                "value": 1
              },
              "strokeColor": {
                "value": "#181818ff"
              }
            },
            "status": "configured",
            "idUnique": "o2v5xhdcbc"
          },
          "position": {
            "x": 210,
            "y": 210
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "oo3rflns2i",
            "nodeType": "CONNECTION",
            "connectionId": "b72bd44e6be8180bd5988ac74cd9c949",
            "connectorId": "pingOneMfaConnector",
            "name": "PingOne MFA",
            "label": "PingOne MFA",
            "status": "configured",
            "capabilityName": "readAllDevices",
            "type": "action",
            "properties": {
              "userId": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"teleport.svg\",\n        \"url\": \"p1UserId\",\n        \"data\": \"{{local.ap8n8vd9o5.payload.output.p1UserId}}\",\n        \"tooltip\": \"{{local.ap8n8vd9o5.payload.output.p1UserId}}\",\n        \"children\": [\n          {\n            \"text\": \"p1UserId\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "setFilterFlag": {
                "value": true
              },
              "statusFilter": {
                "value": "ACTIVE"
              },
              "workforceDeviceTypes": {
                "value": [
                  "SMS",
                  "VOICE",
                  "TOTP",
                  "PLATFORM",
                  "SECURITY_KEY",
                  "EMAIL",
                  "MOBILE"
                ]
              },
              "nodeTitle": {
                "value": "Get User's Existing Devices"
              },
              "deviceTypes": {
                "value": [
                  "FIDO2"
                ]
              }
            },
            "idUnique": "9epvlc8kvv"
          },
          "position": {
            "x": 664,
            "y": 1024
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "gt2ut9cv9r",
            "nodeType": "EVAL",
            "label": "Evaluator",
            "properties": {
              "fuhnnykrld": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 784,
            "y": 1024
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "3v7cc6qztn",
            "nodeType": "CONNECTION",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "name": "Functions",
            "label": "Functions",
            "status": "configured",
            "capabilityName": "AGreaterThanB",
            "type": "trigger",
            "properties": {
              "leftValueA": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"size\",\n        \"data\": \"{{local.oo3rflns2i.payload.output.rawResponse.size}}\",\n        \"tooltip\": \"{{local.oo3rflns2i.payload.output.rawResponse.size}}\",\n        \"children\": [\n          {\n            \"text\": \"size\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "rightValueB": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"0\"\n      }\n    ]\n  }\n]"
              },
              "type": {
                "value": "number"
              },
              "nodeTitle": {
                "value": "Ensure Fido Devices Found"
              }
            }
          },
          "position": {
            "x": 964,
            "y": 1024
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "uo033p1kyk",
            "nodeType": "EVAL",
            "label": "Evaluator",
            "properties": {
              "fuhnnykrld": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 1084,
            "y": 1024
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "q28oycoxob",
            "nodeType": "CONNECTION",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "name": "Functions",
            "label": "Functions",
            "status": "configured",
            "capabilityName": "customFunction",
            "type": "trigger",
            "properties": {
              "nodeTitle": {
                "value": "Retrieve Id for First Device"
              },
              "variableInputList": {
                "value": [
                  {
                    "name": "devices",
                    "preferredDataType": "object",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"devices\",\n        \"data\": \"{{local.oo3rflns2i.payload.output.rawResponse._embedded.devices}}\",\n        \"tooltip\": \"{{local.oo3rflns2i.payload.output.rawResponse._embedded.devices}}\",\n        \"children\": [\n          {\n            \"text\": \"devices\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  }
                ]
              },
              "code": {
                "value": "\nmodule.exports = a = async ({params}) => {\n\tconst devices = params.devices;\n\treturn {'deviceId': devices[0].id}\n}"
              },
              "outputSchema": {
                "value": "{\n\t\"output\": {\n\t\t\"type\": \"object\",\n\t\t\"properties\": {\n\t\t\t\"deviceId\": {\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t}\n\t}\n}"
              }
            }
          },
          "position": {
            "x": 1264,
            "y": 1024
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "l8op3h6jdq",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 1384,
            "y": 1024
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "fuhnnykrld",
            "nodeType": "CONNECTION",
            "connectionId": "53ab83a4a4ab919d9f2cb02d9e111ac8",
            "connectorId": "errorConnector",
            "name": "Error Message",
            "label": "Error Message",
            "status": "configured",
            "capabilityName": "customErrorMessage",
            "type": "action",
            "properties": {
              "errorMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Unable to retrieve Passkey devices\"\n      }\n    ]\n  }\n]"
              }
            }
          },
          "position": {
            "x": 1264,
            "y": 1204
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        }
      ],
      "edges": [
        {
          "data": {
            "id": "qcfhpmdtp4",
            "source": "gt2ut9cv9r",
            "target": "fuhnnykrld"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "5yzjl7gmhl",
            "source": "uo033p1kyk",
            "target": "fuhnnykrld"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "rau29ml30z",
            "source": "q28oycoxob",
            "target": "l8op3h6jdq"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "c002wxv8rt",
            "source": "oo3rflns2i",
            "target": "gt2ut9cv9r"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "15uswayubb",
            "source": "mvwa2wqxjw",
            "target": "ccvjbfpnmc"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "rkhh4i4um0",
            "source": "vn9wo2fja9",
            "target": "612rl6gyv9"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "p28mqqjhzq",
            "source": "gt2ut9cv9r",
            "target": "3v7cc6qztn"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "ufvf6rx3sv",
            "source": "nq94ghth36",
            "target": "oo3rflns2i"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "o6hv9j16v2",
            "source": "1b2botkplr",
            "target": "bu0153njvd"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "wome1jzt8m",
            "source": "0ehqqvjo3c",
            "target": "vn9wo2fja9"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "252dmjetea",
            "source": "612rl6gyv9",
            "target": "1b2botkplr"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "lzetz01ktw",
            "source": "d68twlnn4l",
            "target": "dptoazbn84"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "zraioa0qel",
            "source": "gsge8cw00c",
            "target": "0dw3vsq367"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "3avrwjc868",
            "source": "yf1t67pc8j",
            "target": "shyxs11svr"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "8vilf875v1",
            "source": "ntnncti7p6",
            "target": "uwyqecwjrw"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "ozfehx3pmj",
            "source": "l8op3h6jdq",
            "target": "gsge8cw00c"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "c1nmuo01tx",
            "source": "99fns6k8sr",
            "target": "bco2yzbcmm"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "psng3c9mnq",
            "source": "bu0153njvd",
            "target": "ia42xbbbkn"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "uszp3a5rf8",
            "source": "0ehqqvjo3c",
            "target": "6bmr0cwshd"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "vsgzz26mje",
            "source": "82309xl9lv",
            "target": "0ehqqvjo3c"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "hd6aqui0x3",
            "source": "bco2yzbcmm",
            "target": "82309xl9lv"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "zsv2kbb6qk",
            "source": "bco2yzbcmm",
            "target": "3qcdrfs6pp"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "pxljhdiutc",
            "source": "mgdx3bmoyu",
            "target": "yf1t67pc8j"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "8jthd88682",
            "source": "0dw3vsq367",
            "target": "afu89ypqhb"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "nio5g8dowo",
            "source": "sx956cwe7n",
            "target": "u03m4f9kgg"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "ui1kmd8u73",
            "source": "0dw3vsq367",
            "target": "ppfxva6xjh"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "z5xrxgol0k",
            "source": "ap8n8vd9o5",
            "target": "nq94ghth36"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "4ut2gfozqm",
            "source": "mvwa2wqxjw",
            "target": "99fns6k8sr"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "k3em9i4vee",
            "source": "z10saabygi",
            "target": "mgdx3bmoyu"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "v8zzzhrpaa",
            "source": "z10saabygi",
            "target": "kyhmz9ywru"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "8tyyy35gkz",
            "source": "u03m4f9kgg",
            "target": "mvwa2wqxjw"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "2o5jj3siz2",
            "source": "at0xlzm63c",
            "target": "x9320opr65"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "tqzpsrizv1",
            "source": "b03jgmn0nl",
            "target": "ntnncti7p6"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "mo5uukbez2",
            "source": "yf1t67pc8j",
            "target": "b03jgmn0nl"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "pwaw6xb8ue",
            "source": "01vp2p46tx",
            "target": "at0xlzm63c"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "uld3f6e70w",
            "source": "dptoazbn84",
            "target": "sx956cwe7n"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "xsrpkr18pe",
            "source": "ntnncti7p6",
            "target": "ta3dbpb82p"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "pi1zwy5tjg",
            "source": "r8zi8o8r4f",
            "target": "d68twlnn4l"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "ohvfa0mr89",
            "source": "x9320opr65",
            "target": "z10saabygi"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "mn3rp6dmk4",
            "source": "ppfxva6xjh",
            "target": "64ag2q81bi"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "4npkvq94rw",
            "source": "64ag2q81bi",
            "target": "zwt0or4z6o"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "vhidmqwv09",
            "source": "3v7cc6qztn",
            "target": "uo033p1kyk"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "aygg1mfj8q",
            "source": "uo033p1kyk",
            "target": "q28oycoxob"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        }
      ]
    },
    "data": {},
    "zoomingEnabled": true,
    "userZoomingEnabled": true,
    "zoom": 1,
    "minZoom": 1e-50,
    "maxZoom": 1e+50,
    "panningEnabled": true,
    "userPanningEnabled": true,
    "pan": {
      "x": 0,
      "y": 0
    },
    "boxSelectionEnabled": true,
    "renderer": {
      "name": "null"
    }
  },
  "flowColor": "#E3F0FF",
  "savedDate": 1719344166988,
  "variables": [
    {
      "context": "flowInstance",
      "createdDate": 1718715614928,
      "fields": {
        "type": "string",
        "displayName": "Url for company's logo image",
        "mutable": true,
        "min": 0,
        "max": 2000
      },
      "id": "454da928-c543-4aac-b6b3-c233400c1d32",
      "type": "property",
      "visibility": "private",
      "name": "companyLogo##SK##flowInstance",
      "companyId": ""
    },
    {
      "context": "flowInstance",
      "createdDate": 1718715505632,
      "fields": {
        "type": "string",
        "displayName": "",
        "mutable": true,
        "min": 0,
        "max": 2000
      },
      "id": "3245a456-c70f-4cb8-bc33-7c7b14c1f479",
      "type": "property",
      "visibility": "private",
      "name": "companyName##SK##flowInstance",
      "companyId": ""
    },
    {
      "context": "flowInstance",
      "createdDate": 1719340932315,
      "fields": {
        "type": "string",
        "displayName": "ID returned from creating a device authentication with P1MFA",
        "mutable": true,
        "min": 0,
        "max": 2000
      },
      "id": "dccde676-87a6-4fba-88e1-d7cb79b35082",
      "type": "property",
      "visibility": "private",
      "name": "deviceAuthnID##SK##flowInstance",
      "companyId": ""
    },
    {
      "context": "flowInstance",
      "createdDate": 1719340932318,
      "fields": {
        "type": "string",
        "displayName": "The device ID we get when creating a device with PingOne MFA",
        "mutable": true,
        "min": 0,
        "max": 2000
      },
      "id": "14963e05-6cb1-4682-926b-a69e6c48be7e",
      "type": "property",
      "visibility": "private",
      "name": "deviceID##SK##flowInstance",
      "companyId": ""
    },
    {
      "context": "flowInstance",
      "createdDate": 1719333012618,
      "fields": {
        "type": "string",
        "displayName": "FIDO2 origin",
        "mutable": true,
        "min": 0,
        "max": 2000
      },
      "id": "26ab4d5a-42e0-44d3-9ceb-65a140da7468",
      "type": "property",
      "visibility": "private",
      "name": "origin##SK##flowInstance",
      "companyId": ""
    },
    {
      "context": "flowInstance",
      "createdDate": 1719333012619,
      "fields": {
        "type": "string",
        "displayName": "",
        "mutable": true,
        "min": 0,
        "max": 2000
      },
      "id": "f2158e7b-7183-483d-bf67-160f9b6ea071",
      "type": "property",
      "visibility": "private",
      "name": "publicKeyCredentialRequestOptions##SK##flowInstance",
      "companyId": ""
    },
    {
      "context": "flowInstance",
      "createdDate": 1719339240308,
      "fields": {
        "type": "string",
        "displayName": "",
        "mutable": true,
        "min": 0,
        "max": 2000
      },
      "id": "267214b2-469e-4d71-b667-dd5c892c709d",
      "type": "property",
      "visibility": "private",
      "name": "relyingParty##SK##flowInstance",
      "companyId": ""
    },
    {
      "context": "flowInstance",
      "createdDate": 1719340932317,
      "fields": {
        "type": "string",
        "displayName": "Relying Party ID",
        "mutable": true,
        "min": 0,
        "max": 2000
      },
      "id": "4c440d58-64ee-429c-adc5-555586d4f1ad",
      "type": "property",
      "visibility": "private",
      "name": "rpId##SK##flowInstance",
      "companyId": ""
    }
  ],
  "connections": []
}