{
  "meta": {
    "origin": "https://openam-chico-dev.forgeblocks.com/platform/?realm=alpha#/journeys",
    "exportedBy": "library@pingidentity.com",
    "exportDate": "2024-02-12T16:29:28.452Z",
    "exportTool": "platform-admin ui tree export",
    "exportToolVersion": "1.0",
    "treesSelectedForExport": [
      "PasswordMigration"
    ],
    "innerTreesIncluded": []
  },
  "trees": {
    "PasswordMigration": {
      "tree": {
        "_id": "PasswordMigration",
        "_rev": "-1003954796",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"Authentication\"]"
        },
        "entryNodeId": "356bf290-1bea-4c6f-98a8-4a65b5d900e2",
        "innerTreeOnly": false,
        "nodes": {
          "356bf290-1bea-4c6f-98a8-4a65b5d900e2": {
            "connections": {
              "outcome": "5834cefb-475b-49fa-a05b-08d0b2b090e8"
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 210,
            "y": 109
          },
          "5834cefb-475b-49fa-a05b-08d0b2b090e8": {
            "connections": {
              "CANCELLED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "EXPIRED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "FALSE": "9277b6b6-efb8-4535-b608-bd937505a4fe",
              "LOCKED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "TRUE": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Identity Store Decision",
            "nodeType": "IdentityStoreDecisionNode",
            "x": 436,
            "y": 89.015625
          },
          "5c17064e-f53e-4f03-be46-0721ae40c797": {
            "connections": {
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "debug",
            "nodeType": "ScriptedDecisionNode",
            "x": 1562,
            "y": 317.015625
          },
          "78f3545f-f07c-4a24-b80d-526f530416ed": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "5c17064e-f53e-4f03-be46-0721ae40c797"
            },
            "displayName": "Patch Object",
            "nodeType": "PatchObjectNode",
            "x": 1282,
            "y": 364.015625
          },
          "7bdd8c43-6a60-4d67-b274-cd5ffdce79f3": {
            "connections": {
              "false": "5c17064e-f53e-4f03-be46-0721ae40c797",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "ValidateOldPwd",
            "nodeType": "ScriptedDecisionNode",
            "x": 1237,
            "y": 152.5
          },
          "9277b6b6-efb8-4535-b608-bd937505a4fe": {
            "connections": {
              "false": "982a81f6-6741-4837-859f-7ec30014b969",
              "true": "ac4422b3-ce44-407b-9635-9ccf5a7113a8"
            },
            "displayName": "Old Password Hash?",
            "nodeType": "QueryFilterDecisionNode",
            "x": 718,
            "y": 169.5
          },
          "982a81f6-6741-4837-859f-7ec30014b969": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "356bf290-1bea-4c6f-98a8-4a65b5d900e2"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 483,
            "y": 442.015625
          },
          "ac4422b3-ce44-407b-9635-9ccf5a7113a8": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "7bdd8c43-6a60-4d67-b274-cd5ffdce79f3"
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 945.8671875,
            "y": 102.015625
          }
        },
        "description": "Password Migration Login",
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1395,
            "y": 0
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1018,
            "y": 509
          },
          "startNode": {
            "x": 70,
            "y": 155
          }
        },
        "enabled": true
      },
      "nodes": {
        "356bf290-1bea-4c6f-98a8-4a65b5d900e2": {
          "_id": "356bf290-1bea-4c6f-98a8-4a65b5d900e2",
          "_rev": "-261450355",
          "nodes": [
            {
              "_id": "5abff068-eb8d-4ee3-9baf-1a048bf7c880",
              "nodeType": "ValidatedUsernameNode",
              "displayName": "Platform Username"
            },
            {
              "_id": "fbdf4a4c-f3c7-4b1b-9fc5-0954e10545ee",
              "nodeType": "ValidatedPasswordNode",
              "displayName": "Platform Password"
            }
          ],
          "pageDescription": {
            "en": "New here? <a href=\"#/service/Registration\">Create an account</a><br><a href=\"#/service/ForgottenUsername\">Forgot username?</a><a href=\"#/service/ResetPassword\"> Forgot password?</a>"
          },
          "pageHeader": {
            "en": "Sign In"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "5834cefb-475b-49fa-a05b-08d0b2b090e8": {
          "_id": "5834cefb-475b-49fa-a05b-08d0b2b090e8",
          "_rev": "-1843895133",
          "useUniversalIdForUsername": false,
          "minimumPasswordLength": 8,
          "mixedCaseForPasswordChangeMessages": false,
          "_type": {
            "_id": "IdentityStoreDecisionNode",
            "name": "Identity Store Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "TRUE",
              "displayName": "True"
            },
            {
              "id": "FALSE",
              "displayName": "False"
            },
            {
              "id": "LOCKED",
              "displayName": "Locked"
            },
            {
              "id": "CANCELLED",
              "displayName": "Cancelled"
            },
            {
              "id": "EXPIRED",
              "displayName": "Expired"
            }
          ]
        },
        "5c17064e-f53e-4f03-be46-0721ae40c797": {
          "_id": "5c17064e-f53e-4f03-be46-0721ae40c797",
          "_rev": "1617041458",
          "script": "f83ee921-3c3d-4a03-853b-65bbe3c2a2ce",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "*"
          ],
          "inputs": [
            "*"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "78f3545f-f07c-4a24-b80d-526f530416ed": {
          "_id": "78f3545f-f07c-4a24-b80d-526f530416ed",
          "_rev": "-1117578918",
          "identityResource": "managed/alpha_user",
          "patchAsObject": false,
          "ignoredFields": [],
          "identityAttribute": "userName",
          "_type": {
            "_id": "PatchObjectNode",
            "name": "Patch Object",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "PATCHED",
              "displayName": "Patched"
            },
            {
              "id": "FAILURE",
              "displayName": "Failed"
            }
          ]
        },
        "7bdd8c43-6a60-4d67-b274-cd5ffdce79f3": {
          "_id": "7bdd8c43-6a60-4d67-b274-cd5ffdce79f3",
          "_rev": "738486680",
          "script": "c412705c-3d69-4b5d-87f4-63198d4c2266",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "*"
          ],
          "inputs": [
            "*"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "9277b6b6-efb8-4535-b608-bd937505a4fe": {
          "_id": "9277b6b6-efb8-4535-b608-bd937505a4fe",
          "_rev": "-1403224838",
          "identityAttribute": "userName",
          "queryFilter": "/frUnindexedString1 pr",
          "_type": {
            "_id": "QueryFilterDecisionNode",
            "name": "Query Filter Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "982a81f6-6741-4837-859f-7ec30014b969": {
          "_id": "982a81f6-6741-4837-859f-7ec30014b969",
          "_rev": "685667992",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 300,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "ac4422b3-ce44-407b-9635-9ccf5a7113a8": {
          "_id": "ac4422b3-ce44-407b-9635-9ccf5a7113a8",
          "_rev": "301831791",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        }
      },
      "innerNodes": {
        "5abff068-eb8d-4ee3-9baf-1a048bf7c880": {
          "_id": "5abff068-eb8d-4ee3-9baf-1a048bf7c880",
          "_rev": "-1978729666",
          "usernameAttribute": "userName",
          "validateInput": false,
          "_type": {
            "_id": "ValidatedUsernameNode",
            "name": "Platform Username",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "fbdf4a4c-f3c7-4b1b-9fc5-0954e10545ee": {
          "_id": "fbdf4a4c-f3c7-4b1b-9fc5-0954e10545ee",
          "_rev": "-899902183",
          "passwordAttribute": "password",
          "validateInput": false,
          "_type": {
            "_id": "ValidatedPasswordNode",
            "name": "Platform Password",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        }
      },
      "scripts": {
        "f83ee921-3c3d-4a03-853b-65bbe3c2a2ce": {
          "_id": "f83ee921-3c3d-4a03-853b-65bbe3c2a2ce",
          "name": "AMJourneyTemplate",
          "description": "null",
          "script": "\"/* AM Journey Template\\n *\\n * Authors: se@forgerock.com\\n * \\n * Description of the script goes here\\n * \\n * This script needs to be parametrized. It will not work properly as is. \\n * It requires some nodes that set at least sharedState before it can operate.\\n * For example, set a page node with Platform Username and Platform Password nodes\\n * \\n * The Scripted Decision Node needs the following outcomes defined:\\n * - true\\n */\\n\\n// Do everything in a self-invoking function and do not write code outside of a function or you will pay dearly. \\n// This is because of top-level scoping/whitelisting/etc issues that give you 'undefined' errors.\\n(function () {\\n  logger.message(\\\"Script: start\\\"); // beging of script main\\n  outcome = \\\"true\\\"; // <- fill in default outcome here and it should match a \\\"Script Outcomes\\\" setting on this node itself\\n\\n  // build output html table that will be sent back to browser\\n  var output = createHtml();\\n\\n  // issue callback to browser after output html is built from createHtml() function\\n  displayMessage(output);\\n  \\n  logger.message(\\\"Script: end\\\"); // end of script main\\n\\n  /*\\n  * Put functions below here\\n  */\\n  function createHtml() {\\n      var html = \\\"<table class=\\\\\\\"table table-striped\\\\\\\">\\\";\\n      html += \\\"<thead class=\\\\\\\"thead-dark\\\\\\\"><tr><th class=\\\\\\\"px-1 py-1\\\\\\\" colspan=\\\\\\\"2\\\\\\\">Shared State Variables (sharedState.get)</th></tr></thead>\\\";\\n      // get all the keys in nodeState\\n      var iterator = nodeState.keys().iterator();\\n      var stateKeys = [];\\n      while (iterator.hasNext()) {\\n          stateKeys.push(iterator.next().toString());\\n      }\\n      stateKeys.forEach(function (stateKey) {\\n        if (sharedState.get(stateKey) \\n            && sharedState.get(stateKey).toString() !== \\\"null\\\"\\n            && sharedState.get(stateKey).toString() !== \\\"\\\"\\n            && \\\"\\\"+stateKey !== \\\"objectAttributes\\\"  // going to pull out objectAttributes later\\n            && \\\"\\\"+stateKey !== \\\"pageNodeCallbacks\\\") //pageNodeCallbacks are internal to the Page Node and not needed/used  \\n        {\\n          html += \\\"<tr><td class=\\\\\\\"px-1 py-1\\\\\\\">\\\" + stateKey + \\\"</td><td class=\\\\\\\"px-1 py-1\\\\\\\">\\\" + sharedState.get(stateKey) + \\\"</td></tr>\\\";\\n        }\\n      });\\n      html += \\\"</table>\\\";\\n\\n      html += \\\"<table class=\\\\\\\"table table-striped\\\\\\\">\\\";\\n      \\n      html += \\\"<thead class=\\\\\\\"thead-dark\\\\\\\"><tr><th class=\\\\\\\"px-1 py-1\\\\\\\" colspan=\\\\\\\"2\\\\\\\">Transient State Variables (transientState.get)</th></tr></thead>\\\";\\n      // get all the keys in nodeState\\n      var iterator = nodeState.keys().iterator();\\n      var stateKeys = [];\\n      while (iterator.hasNext()) {\\n          stateKeys.push(iterator.next().toString());\\n      }\\n      stateKeys.forEach(function (stateKey) {\\n        if (transientState.get(stateKey) \\n            && transientState.get(stateKey).toString() !== \\\"null\\\" \\n            && transientState.get(stateKey).toString() !== \\\"\\\"\\n            && \\\"\\\"+stateKey !== \\\"objectAttributes\\\") \\n        {\\n          html += \\\"<tr><td class=\\\\\\\"px-1 py-1\\\\\\\">\\\" + stateKey + \\\"</td><td class=\\\\\\\"px-1 py-1\\\\\\\">\\\" + transientState.get(stateKey) + \\\"</td></tr>\\\";\\n        }\\n      });\\n      html += \\\"</table>\\\";\\n\\n      html += \\\"<table class=\\\\\\\"table table-striped\\\\\\\">\\\";\\n      // Build the table of objectAttributes in sharedState\\n      if (sharedState.get(\\\"objectAttributes\\\"))\\n      {   \\n        html += \\\"<thead class=\\\\\\\"thead-dark\\\\\\\"><tr><th class=\\\\\\\"px-1 py-1\\\\\\\" colspan=\\\\\\\"2\\\\\\\">Shared Object Attributes (sharedState.get)</th></tr></thead>\\\";\\n        var entries = sharedState.get('objectAttributes').entrySet().toArray();\\n        entries.forEach(function (entry) { // showing how to use entrySet(). Can use keySet().\\n            html += \\\"<tr><td class=\\\\\\\"px-1 py-1\\\\\\\">\\\" + entry.getKey() + \\\"</td><td class=\\\\\\\"px-1 py-1\\\\\\\">\\\" + entry.getValue() + \\\"</td></tr>\\\";\\n        });\\n      }\\n      else {\\n        html += \\\"<tr><td colspan=\\\\\\\"2\\\\\\\">EMPTY</td></tr>\\\";\\n      }\\n      html += \\\"</table>\\\";\\n\\n      html += \\\"<table class=\\\\\\\"table table-striped\\\\\\\">\\\";\\n      // Build the table of objectAttributes in transientState\\n      if (transientState.get(\\\"objectAttributes\\\"))\\n      {\\n        html += \\\"<thead class=\\\\\\\"thead-dark\\\\\\\"><tr><th class=\\\\\\\"px-1 py-1\\\\\\\" colspan=\\\\\\\"2\\\\\\\">Transient Object Attributes (transientState.get)</th></tr></thead>\\\";\\n        var keys = transientState.get('objectAttributes').keySet().toArray();\\n        keys.forEach(function (key) { // showing how to use keySet(). Can use entrySet().\\n            html += \\\"<tr><td class=\\\\\\\"px-1 py-1\\\\\\\">\\\" + key + \\\"</td><td class=\\\\\\\"px-1 py-1\\\\\\\">\\\" + transientState.get('objectAttributes').get(key) + \\\"</td></tr>\\\";\\n        });\\n      }\\n      else {\\n        html += \\\"<tr><td colspan=\\\\\\\"2\\\\\\\">EMPTY</td></tr>\\\";\\n      }\\n      html += \\\"</table>\\\";\\n\\n      html += \\\"<table class=\\\\\\\"table table-striped\\\\\\\">\\\";\\n      html += \\\"<thead class=\\\\\\\"thead-dark\\\\\\\"><tr><th class=\\\\\\\"px-1 py-1\\\\\\\" colspan=\\\\\\\"2\\\\\\\">nodeState.get (transientState, secureState, sharedState)</th></tr></thead>\\\";\\n      // get all the keys in nodeState\\n      var iterator = nodeState.keys().iterator();\\n      var stateKeys = [];\\n      while (iterator.hasNext()) {\\n          stateKeys.push(iterator.next().toString());\\n      }\\n      stateKeys.forEach(function (stateKey) {\\n        if (nodeState.get(stateKey) \\n            && nodeState.get(stateKey).toString() !== \\\"null\\\"\\n            && nodeState.get(stateKey).toString() !== \\\"\\\"\\n            && \\\"\\\"+stateKey !== \\\"pageNodeCallbacks\\\") //pageNodeCallbacks are internal to the Page Node and not needed/used  \\n\\n        {\\n          html += \\\"<tr><td class=\\\\\\\"px-1 py-1\\\\\\\">\\\" + stateKey + \\\"</td><td class=\\\\\\\"px-1 py-1\\\\\\\">\\\" + nodeState.get(stateKey) + \\\"</td></tr>\\\";\\n        }\\n      });\\n      html += \\\"</table>\\\";\\n\\n\\n      html += \\\"<table class=\\\\\\\"table table-striped\\\\\\\">\\\";\\n      // looking for a way to build this AM User Profile list dynamically\\n      var objAMAttrs = [\\n        \\\"uid\\\",\\n        \\\"cn\\\",\\n        \\\"inetUserStatus\\\",\\n        \\\"givenName\\\",\\n        \\\"sn\\\",\\n        \\\"mail\\\",\\n        \\\"description\\\",\\n        \\\"telephoneNumber\\\",\\n        \\\"street\\\",\\n        \\\"l\\\",\\n        \\\"postalCode\\\",\\n        \\\"co\\\",\\n        \\\"st\\\",\\n        \\\"displayName\\\",\\n        \\\"fr-attr-istr1\\\",\\n        \\\"fr-attr-istr2\\\",\\n        \\\"fr-attr-istr3\\\",\\n        \\\"fr-attr-istr4\\\",\\n        \\\"fr-attr-istr5\\\",\\n        \\\"fr-attr-str1\\\",\\n        \\\"fr-attr-str2\\\",\\n        \\\"fr-attr-str3\\\",\\n        \\\"fr-attr-str4\\\",\\n        \\\"fr-attr-str5\\\",\\n        \\\"fr-attr-imulti1\\\",\\n        \\\"fr-attr-imulti2\\\",\\n        \\\"fr-attr-imulti3\\\",\\n        \\\"fr-attr-imulti4\\\",\\n        \\\"fr-attr-imulti5\\\",\\n        \\\"fr-attr-multi1\\\",\\n        \\\"fr-attr-multi2\\\",\\n        \\\"fr-attr-multi3\\\",\\n        \\\"fr-attr-multi4\\\",\\n        \\\"fr-attr-multi5\\\",\\n        \\\"fr-attr-idate1\\\",\\n        \\\"fr-attr-idate2\\\",\\n        \\\"fr-attr-idate3\\\",\\n        \\\"fr-attr-idate4\\\",\\n        \\\"fr-attr-idate5\\\",\\n        \\\"fr-attr-date1\\\",\\n        \\\"fr-attr-date2\\\",\\n        \\\"fr-attr-date3\\\",\\n        \\\"fr-attr-date4\\\",\\n        \\\"fr-attr-date5\\\",\\n        \\\"fr-attr-iint1\\\",\\n        \\\"fr-attr-iint2\\\",\\n        \\\"fr-attr-iint3\\\",\\n        \\\"fr-attr-iint4\\\",\\n        \\\"fr-attr-iint5\\\",\\n        \\\"fr-attr-int1\\\",\\n        \\\"fr-attr-int2\\\",\\n        \\\"fr-attr-int3\\\",\\n        \\\"fr-attr-int4\\\",\\n        \\\"fr-attr-int5\\\"\\n      ];  \\n\\n      // Build the table of idRepository binding\\n      var attrs2;\\n      if (sharedState.get(\\\"_id\\\") && idRepository.getAttribute(sharedState.get(\\\"_id\\\"), \\\"uid\\\"))\\n      {\\n        html += \\\"<thead class=\\\\\\\"thead-dark\\\\\\\"><tr><th class=\\\\\\\"px-1 py-1\\\\\\\" colspan=\\\\\\\"2\\\\\\\">idRepository AM User Profile</th></tr></thead>\\\";        \\n        var id = sharedState.get(\\\"_id\\\");\\n        objAMAttrs.forEach(function (attr) {\\n          attrs = idRepository.getAttribute(id, attr);  \\n          if (attrs && \\\"\\\"+attrs !== \\\"null\\\" && \\\"\\\"+attrs !== \\\"\\\" && \\\"\\\"+attrs.size()>0){\\n            if (attrs.size()===1){\\n            \\tattrs = singleValue(attrs);\\n          \\t}\\n            html += \\\"<tr><td class=\\\\\\\"px-1 py-1\\\\\\\">\\\" + attr + \\\"</td><td class=\\\\\\\"px-1 py-1\\\\\\\">\\\" + attrs + \\\"</td></tr>\\\";\\n          }\\n        });      \\n      }\\n      html += \\\"</table>\\\";\\n      \\n      html += \\\"<table class=\\\\\\\"table table-striped\\\\\\\">\\\";\\n      html += \\\"<thead class=\\\\\\\"thead-dark\\\\\\\"><tr><th class=\\\\\\\"px-1 py-1\\\\\\\" colspan=\\\\\\\"2\\\\\\\">Request Headers</th></tr></thead>\\\";\\n      //html += \\\"<tr><td colspan=\\\\\\\"2\\\\\\\">\\\" + requestHeaders.toString() + \\\"</td></tr>\\\";\\n\\t  var rHeaders = String(requestHeaders).split('], ').map(function (header){\\n        return header.split('=')[0].replace('{','').replace('}',''); \\n      });                                                    \\n      rHeaders.forEach(function (headerName) {\\n        var header = requestHeaders.get(headerName);\\n        html += \\\"<tr><td class=\\\\\\\"px-1 py-1\\\\\\\">\\\" + headerName + \\\"</td><td class=\\\\\\\"px-1 py-1\\\\\\\">\\\" + header.get(0) + \\\"</td></tr>\\\";\\n      });    \\n    \\n    html += \\\"</table>\\\";\\n      \\n    return html;\\n  }\\n  \\n  //builds the html to display the message in the browser on the callback\\n  //use view source in browser and look for class=\\\"callback-component\\\" to see html response\\n  function displayMessage(message) {\\n      var anchor = \\\"anchor-\\\".concat(generateNumericToken('xxx'));\\n      var halign = \\\"left\\\";\\n      var script = \\\"Array.prototype.slice.call(\\\\n\\\".concat(\\n          \\\"document.getElementsByClassName('callback-component')).forEach(\\\\n\\\").concat(\\n              \\\"function (e) {\\\\n\\\").concat(\\n                  \\\"  var message = e.firstElementChild;\\\\n\\\").concat(\\n                      \\\"  if (message.firstChild && message.firstChild.nodeName == '#text' && message.firstChild.nodeValue.trim() == '\\\").concat(anchor).concat(\\\"') {\\\\n\\\").concat(\\n                          \\\"    message.className = \\\\\\\"\\\\\\\";\\\\n\\\").concat(\\n                              \\\"    message.style = \\\\\\\"\\\\\\\";\\\\n\\\").concat(\\n                                  \\\"    message.align = \\\\\\\"\\\").concat(halign).concat(\\\"\\\\\\\";\\\\n\\\").concat(\\n                                      \\\"    message.innerHTML = '\\\").concat(message).concat(\\\"';\\\\n\\\").concat(\\n                                          \\\"  }\\\\n\\\").concat(\\n                                              \\\"})\\\")\\n      var fr = JavaImporter(\\n          org.forgerock.openam.auth.node.api.Action,\\n          javax.security.auth.callback.TextOutputCallback,\\n          com.sun.identity.authentication.callbacks.ScriptTextOutputCallback\\n      )\\n      if (message.length && callbacks.isEmpty()) {\\n          action = fr.Action.send(\\n              new fr.TextOutputCallback(\\n                  fr.TextOutputCallback.INFORMATION,\\n                  anchor\\n              ),\\n              new fr.ScriptTextOutputCallback(script)\\n          ).build()\\n      }\\n      else {\\n          action = fr.Action.goTo(outcome).build();\\n      }\\n  }\\n\\n  /*\\n   * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.\\n   * This is needed to have a unique div(anchor-x) on the html callback that we can populate data\\n   * Example:\\n   * 'xxxxx' produces '28535'\\n   * 'xxx-xxx' produces '432-521'\\n   */\\n  function generateNumericToken(format) {\\n      return format.replace(/[x]/g, function (c) {\\n          var r = Math.random() * 10 | 0;\\n          var v = r;\\n          return v.toString(10);\\n      });\\n  }\\n\\n  // get a singleValue from a HashSet\\n  function singleValue(x)\\n  {\\n    if(x.size()>0)\\n      {\\n        return x.iterator().next();\\n      }\\n      \\n    return \\\"\\\";\\n    \\n  }\\n\\n}()); // self-invoking function\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "1.0"
        },
        "c412705c-3d69-4b5d-87f4-63198d4c2266": {
          "_id": "c412705c-3d69-4b5d-87f4-63198d4c2266",
          "name": "oldPasswordHashMigration",
          "description": "null",
          "script": "\"var hash = require('md5');\\n\\noutcome = \\\"false\\\";\\n\\nvar userID =  nodeState.get(\\\"_id\\\");\\nvar password = nodeState.get(\\\"password\\\");\\nvar identity = idRepository.getIdentity(userID);          \\nvar frUnindexedString1 = identity.getAttributeValues(\\\"fr-attr-str1\\\")[0]; \\nnodeState.putShared(\\\"frUnindexedString1\\\",frUnindexedString1);\\n\\nvar hashPwdValue = hash.md5(password);\\nnodeState.putShared(\\\"hashPwdValue\\\",hashPwdValue);\\n\\nif (frUnindexedString1.toString() === hashPwdValue.toString()) {\\n\\tnodeState.putTransient(\\\"password\\\", password);\\n\\tnodeState.putTransient(\\\"objectAttributes\\\", {password: password});\\n    outcome = \\\"true\\\";\\n} else {\\n  outcome = \\\"false\\\";\\n}\\n\\n\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {},
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    }
  }
}