{
  "meta": {
    "origin": "",
    "exportedBy": "",
    "exportDate": "",
    "exportTool": "platform-admin ui tree export",
    "exportToolVersion": "1.0",
    "treesSelectedForExport": [
      "CIAM Deep Fake - Registration with Threat Detection and ID Verification Main Journey"
    ],
    "innerTreesIncluded": [
      "CIAM Deep Fake - Push MFA Method Registration Inner Journey",
      "CIAM Deep Fake - OATH MFA Method Registration Inner Journey",
      "CIAM Deep Fake - Combined OATH And PUSH MFA Methods Registration Inner Journey",
      "CIAM Deep Fake - WebAuthn MFA Method Registration Inner Journey",
      "CIAM Deep Fake - MFA Device Registration Inner Journey",
      "CIAM Deep Fake - MFA Authentication Inner Journey",
      "CIAM Deep Fake - Selfie Verification Inner Journey",
      "CIAM Deep Fake - Threat Detection Inner Journey",
      "CIAM Deep Fake - ID Verification And Issuance To Wallet Inner Journey",
      "CIAM Deep Fake - Authentication Main Journey",
      "CIAM Deep Fake - Account Reset Main Journey"
    ]
  },
  "trees": {
    "CIAM Deep Fake - WebAuthn MFA Method Registration Inner Journey": {
      "tree": {
        "_id": "CIAM Deep Fake - WebAuthn MFA Method Registration Inner Journey",
        "_rev": "-1670988045",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Deep Fake\"]"
        },
        "entryNodeId": "923aff81-c7ff-46e4-adea-412484edca1a",
        "innerTreeOnly": false,
        "nodes": {
          "1c232a98-017d-4230-8c27-ddb935c9078d": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Recovery Code Display Node",
            "nodeType": "RecoveryCodeDisplayNode",
            "x": 251,
            "y": 79.015625
          },
          "923aff81-c7ff-46e4-adea-412484edca1a": {
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "failure": "e301438c-0bd0-429c-ab0c-66126501069a",
              "success": "1c232a98-017d-4230-8c27-ddb935c9078d",
              "unsupported": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "displayName": "WebAuthn Registration Node",
            "nodeType": "WebAuthnRegistrationNode",
            "x": 249,
            "y": 210.015625
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 817,
            "y": 82
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 814,
            "y": 291
          },
          "startNode": {
            "x": 50,
            "y": 250
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "1c232a98-017d-4230-8c27-ddb935c9078d": {
          "_id": "1c232a98-017d-4230-8c27-ddb935c9078d",
          "_rev": "783686509",
          "_type": {
            "_id": "RecoveryCodeDisplayNode",
            "name": "Recovery Code Display Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "923aff81-c7ff-46e4-adea-412484edca1a": {
          "_id": "923aff81-c7ff-46e4-adea-412484edca1a",
          "_rev": "719483067",
          "fidoCertificationLevel": "OFF",
          "trustStoreAlias": "trustalias",
          "relyingPartyName": "ForgeRock",
          "maxSavedDevices": 0,
          "generateRecoveryCodes": true,
          "storeAttestationDataInTransientState": false,
          "origins": [],
          "userVerificationRequirement": "PREFERRED",
          "postponeDeviceProfileStorage": false,
          "excludeCredentials": false,
          "requiresResidentKey": false,
          "authenticatorAttachment": "UNSPECIFIED",
          "asScript": true,
          "validateFidoU2fAaguid": false,
          "acceptedSigningAlgorithms": [
            "ES256",
            "RS256"
          ],
          "attestationPreference": "NONE",
          "enforceRevocationCheck": false,
          "timeout": 60,
          "_type": {
            "_id": "WebAuthnRegistrationNode",
            "name": "WebAuthn Registration Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "unsupported",
              "displayName": "Unsupported"
            },
            {
              "id": "success",
              "displayName": "Success"
            },
            {
              "id": "failure",
              "displayName": "Failure"
            },
            {
              "id": "error",
              "displayName": "Client Error"
            }
          ]
        }
      },
      "innerNodes": {},
      "scripts": {},
      "emailTemplates": {},
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "CIAM Deep Fake - Combined OATH And PUSH MFA Methods Registration Inner Journey": {
      "tree": {
        "_id": "CIAM Deep Fake - Combined OATH And PUSH MFA Methods Registration Inner Journey",
        "_rev": "972289745",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Deep Fake\"]"
        },
        "entryNodeId": "905e8dd9-9d51-4ae8-9767-6e7c6bbe6630",
        "innerTreeOnly": false,
        "nodes": {
          "000c6824-0130-4777-a0b7-4a58fa833d46": {
            "connections": {
              "true": "f625e769-5f10-4d51-a17f-f8b679be6024"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 940,
            "y": 104.015625
          },
          "0986fc7b-b729-44bb-b3fe-228950cab470": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "80f77fdf-12da-4469-af04-4e659406607a"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 1018,
            "y": 1434.03125
          },
          "18064fd6-2ee2-4300-80c8-41582ca6c361": {
            "connections": {
              "outcome": "1d04467e-65a2-43fc-88cd-fc50419d28fa"
            },
            "displayName": "Recovery Code Display Node",
            "nodeType": "RecoveryCodeDisplayNode",
            "x": 573.8888888888889,
            "y": 1437.5729166666667
          },
          "1d04467e-65a2-43fc-88cd-fc50419d28fa": {
            "connections": {
              "NOT_REGISTERED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "SENT": "e5406f61-31f4-470f-9d4a-9f79e4636425"
            },
            "displayName": "Push Sender",
            "nodeType": "PushAuthenticationSenderNode",
            "x": 601,
            "y": 1163.5729166666667
          },
          "39d75cea-252d-48ee-bd10-5df47c557b59": {
            "connections": {
              "false": "ca93d5fa-5658-444a-93b8-5806ce1b7de7",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Recovery Code Page Node",
            "nodeType": "PageNode",
            "x": 609.1666666666667,
            "y": 638.6927083333334
          },
          "492793bf-5e8a-41bb-ba64-affd54e72041": {
            "connections": {
              "EXPIRED": "f625e769-5f10-4d51-a17f-f8b679be6024",
              "FALSE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "TRUE": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "WAITING": "ef6ee886-7eb5-4e15-9cc7-64868ff67a79"
            },
            "displayName": "Push Result Verifier Node",
            "nodeType": "PushResultVerifierNode",
            "x": 200,
            "y": 87
          },
          "498da641-1095-4c05-9d3e-7c210bc1f2fa": {
            "connections": {
              "EXPIRED": "ae08ddfb-8d45-41f7-8233-f8b658841391",
              "FALSE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "TRUE": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "WAITING": "e5406f61-31f4-470f-9d4a-9f79e4636425"
            },
            "displayName": "Push Result Verifier Node",
            "nodeType": "PushResultVerifierNode",
            "x": 976.5,
            "y": 934.1927083333334
          },
          "4e42b5b3-526c-46c0-8b10-acb1a08cd308": {
            "connections": {
              "failureOutcome": "e301438c-0bd0-429c-ab0c-66126501069a",
              "successOutcome": "18064fd6-2ee2-4300-80c8-41582ca6c361",
              "timeoutOutcome": "e2aa08d4-08a2-4ba1-8a80-d0aa27021384"
            },
            "displayName": "Combined MFA Registration",
            "nodeType": "CombinedMultiFactorRegistrationNode",
            "x": 211,
            "y": 1163
          },
          "6708405a-9775-49ec-9baf-21838700a4e3": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "000c6824-0130-4777-a0b7-4a58fa833d46"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 609,
            "y": 73.015625
          },
          "712c0d92-ad61-4de9-835a-e0b65aa0ef8b": {
            "connections": {
              "outcome": "4e42b5b3-526c-46c0-8b10-acb1a08cd308"
            },
            "displayName": "Get Authenticator App",
            "nodeType": "GetAuthenticatorAppNode",
            "x": 224,
            "y": 964.421875
          },
          "80f77fdf-12da-4469-af04-4e659406607a": {
            "connections": {
              "true": "ae08ddfb-8d45-41f7-8233-f8b658841391"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 1375,
            "y": 1458.015625
          },
          "905e8dd9-9d51-4ae8-9767-6e7c6bbe6630": {
            "connections": {
              "NOT_REGISTERED": "712c0d92-ad61-4de9-835a-e0b65aa0ef8b",
              "SENT": "ef6ee886-7eb5-4e15-9cc7-64868ff67a79"
            },
            "displayName": "Push Sender",
            "nodeType": "PushAuthenticationSenderNode",
            "x": 239,
            "y": 674
          },
          "ae08ddfb-8d45-41f7-8233-f8b658841391": {
            "connections": {
              "failureOutcome": "0986fc7b-b729-44bb-b3fe-228950cab470",
              "successOutcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Enter Verification Code",
            "nodeType": "PageNode",
            "x": 996,
            "y": 1128.015625
          },
          "b86fcb50-3df3-46a8-a086-2539c1ba6613": {
            "connections": {
              "true": "39d75cea-252d-48ee-bd10-5df47c557b59"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 947,
            "y": 647.015625
          },
          "ca93d5fa-5658-444a-93b8-5806ce1b7de7": {
            "connections": {
              "Retry": "b86fcb50-3df3-46a8-a086-2539c1ba6613"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 990,
            "y": 780.015625
          },
          "e2aa08d4-08a2-4ba1-8a80-d0aa27021384": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "4e42b5b3-526c-46c0-8b10-acb1a08cd308"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 259,
            "y": 1450
          },
          "e5406f61-31f4-470f-9d4a-9f79e4636425": {
            "connections": {
              "DONE": "498da641-1095-4c05-9d3e-7c210bc1f2fa",
              "EXITED": "ae08ddfb-8d45-41f7-8233-f8b658841391"
            },
            "displayName": "Push Wait Node",
            "nodeType": "PushWaitNode",
            "x": 596.5,
            "y": 954.1927083333334
          },
          "ef6ee886-7eb5-4e15-9cc7-64868ff67a79": {
            "connections": {
              "DONE": "492793bf-5e8a-41bb-ba64-affd54e72041",
              "EXITED": "f625e769-5f10-4d51-a17f-f8b679be6024"
            },
            "displayName": "Push Wait Node",
            "nodeType": "PushWaitNode",
            "x": 236,
            "y": 405
          },
          "f625e769-5f10-4d51-a17f-f8b679be6024": {
            "connections": {
              "failureOutcome": "6708405a-9775-49ec-9baf-21838700a4e3",
              "notRegisteredOutcome": "e301438c-0bd0-429c-ab0c-66126501069a",
              "recoveryCodeOutcome": "39d75cea-252d-48ee-bd10-5df47c557b59",
              "successOutcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Enter Verification Code",
            "nodeType": "PageNode",
            "x": 609,
            "y": 307.015625
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 2334,
            "y": 817.3333333333333
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 2363,
            "y": 1506.6666666666667
          },
          "startNode": {
            "x": 70,
            "y": 347.5
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "000c6824-0130-4777-a0b7-4a58fa833d46": {
          "_id": "000c6824-0130-4777-a0b7-4a58fa833d46",
          "_rev": "-112559744",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "0986fc7b-b729-44bb-b3fe-228950cab470": {
          "_id": "0986fc7b-b729-44bb-b3fe-228950cab470",
          "_rev": "1100095443",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "18064fd6-2ee2-4300-80c8-41582ca6c361": {
          "_id": "18064fd6-2ee2-4300-80c8-41582ca6c361",
          "_rev": "1988110241",
          "_type": {
            "_id": "RecoveryCodeDisplayNode",
            "name": "Recovery Code Display Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "1d04467e-65a2-43fc-88cd-fc50419d28fa": {
          "_id": "1d04467e-65a2-43fc-88cd-fc50419d28fa",
          "_rev": "1373123313",
          "captureFailure": false,
          "contextInfo": false,
          "userMessage": {},
          "pushType": "DEFAULT",
          "customPayload": [],
          "mandatory": true,
          "messageTimeout": 120000,
          "_type": {
            "_id": "PushAuthenticationSenderNode",
            "name": "Push Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "SENT",
              "displayName": "Sent"
            },
            {
              "id": "NOT_REGISTERED",
              "displayName": "Not Registered"
            }
          ]
        },
        "39d75cea-252d-48ee-bd10-5df47c557b59": {
          "_id": "39d75cea-252d-48ee-bd10-5df47c557b59",
          "_rev": "-2135474439",
          "nodes": [
            {
              "_id": "adc8ee0b-211b-4f1d-bd98-043b07effb37",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Recovery Code"
            },
            {
              "_id": "457adfaa-dcb7-4c02-98bb-04f38aa38339",
              "nodeType": "RecoveryCodeCollectorDecisionNode",
              "displayName": "Recovery Code Collector Decision"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Recovery Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "492793bf-5e8a-41bb-ba64-affd54e72041": {
          "_id": "492793bf-5e8a-41bb-ba64-affd54e72041",
          "_rev": "1316050107",
          "_type": {
            "_id": "PushResultVerifierNode",
            "name": "Push Result Verifier Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "TRUE",
              "displayName": "Success"
            },
            {
              "id": "FALSE",
              "displayName": "Failure"
            },
            {
              "id": "EXPIRED",
              "displayName": "Expired"
            },
            {
              "id": "WAITING",
              "displayName": "Waiting"
            }
          ]
        },
        "498da641-1095-4c05-9d3e-7c210bc1f2fa": {
          "_id": "498da641-1095-4c05-9d3e-7c210bc1f2fa",
          "_rev": "-417464670",
          "_type": {
            "_id": "PushResultVerifierNode",
            "name": "Push Result Verifier Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "TRUE",
              "displayName": "Success"
            },
            {
              "id": "FALSE",
              "displayName": "Failure"
            },
            {
              "id": "EXPIRED",
              "displayName": "Expired"
            },
            {
              "id": "WAITING",
              "displayName": "Waiting"
            }
          ]
        },
        "4e42b5b3-526c-46c0-8b10-acb1a08cd308": {
          "_id": "4e42b5b3-526c-46c0-8b10-acb1a08cd308",
          "_rev": "517967891",
          "addChecksum": false,
          "bgColor": "032b75",
          "generateRecoveryCodes": true,
          "truncationOffset": -1,
          "algorithm": "TOTP",
          "passwordLength": "SIX_DIGITS",
          "totpTimeInterval": 30,
          "policiesJson": "",
          "scanQRCodeMessage": {},
          "accountName": "USERNAME",
          "issuer": "ForgeRock",
          "minSharedSecretLength": 32,
          "totpHashAlgorithm": "HMAC_SHA1",
          "imgUrl": "",
          "timeout": 60,
          "_type": {
            "_id": "CombinedMultiFactorRegistrationNode",
            "name": "Combined MFA Registration",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "timeoutOutcome",
              "displayName": "Time Out"
            }
          ]
        },
        "6708405a-9775-49ec-9baf-21838700a4e3": {
          "_id": "6708405a-9775-49ec-9baf-21838700a4e3",
          "_rev": "1827774143",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "712c0d92-ad61-4de9-835a-e0b65aa0ef8b": {
          "_id": "712c0d92-ad61-4de9-835a-e0b65aa0ef8b",
          "_rev": "-1420298430",
          "continueLabel": {},
          "message": {},
          "googleLink": "https://play.google.com/store/apps/details?id=com.forgerock.authenticator",
          "appleLink": "https://itunes.apple.com/app/forgerock-authenticator/id1038442926",
          "_type": {
            "_id": "GetAuthenticatorAppNode",
            "name": "Get Authenticator App",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "80f77fdf-12da-4469-af04-4e659406607a": {
          "_id": "80f77fdf-12da-4469-af04-4e659406607a",
          "_rev": "-5161210",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "905e8dd9-9d51-4ae8-9767-6e7c6bbe6630": {
          "_id": "905e8dd9-9d51-4ae8-9767-6e7c6bbe6630",
          "_rev": "-1379886469",
          "captureFailure": false,
          "contextInfo": false,
          "userMessage": {},
          "pushType": "DEFAULT",
          "customPayload": [],
          "mandatory": true,
          "messageTimeout": 120000,
          "_type": {
            "_id": "PushAuthenticationSenderNode",
            "name": "Push Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "SENT",
              "displayName": "Sent"
            },
            {
              "id": "NOT_REGISTERED",
              "displayName": "Not Registered"
            }
          ]
        },
        "ae08ddfb-8d45-41f7-8233-f8b658841391": {
          "_id": "ae08ddfb-8d45-41f7-8233-f8b658841391",
          "_rev": "1926552083",
          "nodes": [
            {
              "_id": "06f5679e-ee6e-49d6-abc3-784f0173a9ae",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Verification Code"
            },
            {
              "_id": "2ba68e52-c3ac-4364-b1cd-b29efd7756aa",
              "nodeType": "OathTokenVerifierNode",
              "displayName": "OATH Token Verifier"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Verification Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            }
          ]
        },
        "b86fcb50-3df3-46a8-a086-2539c1ba6613": {
          "_id": "b86fcb50-3df3-46a8-a086-2539c1ba6613",
          "_rev": "707438801",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "ca93d5fa-5658-444a-93b8-5806ce1b7de7": {
          "_id": "ca93d5fa-5658-444a-93b8-5806ce1b7de7",
          "_rev": "-368435517",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "e2aa08d4-08a2-4ba1-8a80-d0aa27021384": {
          "_id": "e2aa08d4-08a2-4ba1-8a80-d0aa27021384",
          "_rev": "-97610591",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "e5406f61-31f4-470f-9d4a-9f79e4636425": {
          "_id": "e5406f61-31f4-470f-9d4a-9f79e4636425",
          "_rev": "903137511",
          "challengeMessage": {},
          "exitMessage": {},
          "waitingMessage": {},
          "secondsToWait": 5,
          "_type": {
            "_id": "PushWaitNode",
            "name": "Push Wait Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "DONE",
              "displayName": "Done"
            },
            {
              "id": "EXITED",
              "displayName": "Exit"
            }
          ]
        },
        "ef6ee886-7eb5-4e15-9cc7-64868ff67a79": {
          "_id": "ef6ee886-7eb5-4e15-9cc7-64868ff67a79",
          "_rev": "2044511932",
          "challengeMessage": {},
          "exitMessage": {},
          "waitingMessage": {},
          "secondsToWait": 5,
          "_type": {
            "_id": "PushWaitNode",
            "name": "Push Wait Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "DONE",
              "displayName": "Done"
            },
            {
              "id": "EXITED",
              "displayName": "Exit"
            }
          ]
        },
        "f625e769-5f10-4d51-a17f-f8b679be6024": {
          "_id": "f625e769-5f10-4d51-a17f-f8b679be6024",
          "_rev": "-1776028557",
          "nodes": [
            {
              "_id": "ce1059e1-d910-4978-ae3d-03b7d0a492bc",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Verification Code"
            },
            {
              "_id": "60ad28eb-35d0-4ab0-8761-3279f36ff011",
              "nodeType": "OathTokenVerifierNode",
              "displayName": "OATH Token Verifier"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Verification Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            },
            {
              "id": "recoveryCodeOutcome",
              "displayName": "Recovery Code"
            }
          ]
        }
      },
      "innerNodes": {
        "adc8ee0b-211b-4f1d-bd98-043b07effb37": {
          "_id": "adc8ee0b-211b-4f1d-bd98-043b07effb37",
          "_rev": "1944303283",
          "script": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "457adfaa-dcb7-4c02-98bb-04f38aa38339": {
          "_id": "457adfaa-dcb7-4c02-98bb-04f38aa38339",
          "_rev": "-1556270623",
          "recoveryCodeType": "OATH",
          "_type": {
            "_id": "RecoveryCodeCollectorDecisionNode",
            "name": "Recovery Code Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "06f5679e-ee6e-49d6-abc3-784f0173a9ae": {
          "_id": "06f5679e-ee6e-49d6-abc3-784f0173a9ae",
          "_rev": "994787872",
          "script": "07e3c04a-1cf0-42e9-ab80-c9c06634c530",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "2ba68e52-c3ac-4364-b1cd-b29efd7756aa": {
          "_id": "2ba68e52-c3ac-4364-b1cd-b29efd7756aa",
          "_rev": "-2050241144",
          "totpTimeInterval": 30,
          "maximumAllowedClockDrift": 5,
          "totpTimeSteps": 2,
          "totpHashAlgorithm": "HMAC_SHA1",
          "isRecoveryCodeAllowed": false,
          "algorithm": "TOTP",
          "hotpWindowSize": 100,
          "_type": {
            "_id": "OathTokenVerifierNode",
            "name": "OATH Token Verifier",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            }
          ]
        },
        "ce1059e1-d910-4978-ae3d-03b7d0a492bc": {
          "_id": "ce1059e1-d910-4978-ae3d-03b7d0a492bc",
          "_rev": "-574774298",
          "script": "07e3c04a-1cf0-42e9-ab80-c9c06634c530",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "60ad28eb-35d0-4ab0-8761-3279f36ff011": {
          "_id": "60ad28eb-35d0-4ab0-8761-3279f36ff011",
          "_rev": "2055944438",
          "totpTimeInterval": 30,
          "maximumAllowedClockDrift": 5,
          "totpTimeSteps": 2,
          "totpHashAlgorithm": "HMAC_SHA1",
          "isRecoveryCodeAllowed": true,
          "algorithm": "TOTP",
          "hotpWindowSize": 100,
          "_type": {
            "_id": "OathTokenVerifierNode",
            "name": "OATH Token Verifier",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            },
            {
              "id": "recoveryCodeOutcome",
              "displayName": "Recovery Code"
            }
          ]
        }
      },
      "scripts": {
        "86e5bf13-4882-4032-8fb7-f75dd7fa7b82": {
          "_id": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "name": "OOTB - Set Invalid Code Error Message Script",
          "description": "Script to set invalid code error message",
          "script": "\"/*\\n * Invalid Code Error Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * Sets an \\\"Invalid Code\\\" error message in shared state, which can be displayed on the last UI Node.\\n *\\n * Script Inputs  : null  \\n *\\n * Script Outputs :  \\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Error message for invalid code  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message  \\n *    - \\\"errorDetails\\\" (String) - Debugging details  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Error message set)  \\n *    - \\\"Error\\\" (Execution failure)  \\n */\\n\\ntry {\\n    // Set the below error message in shared state, to display on the last UI Node\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"Invalid Code\\\");\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507163,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090711974,
          "evaluatorVersion": "2.0"
        },
        "be50351b-c077-4827-b9aa-3a61a08b30f9": {
          "_id": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "name": "OOTB - Validate Recovery Code Input Script",
          "description": "Script to validate Recovery code input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"/*\\n * Recovery Code Input Validation Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * This script ensures that the recovery code input follows a strict 10-character requirement.\\n * It prevents form submission until a valid code is entered and dynamically enables/disables the submit button.\\n *\\n * Script Inputs  :  \\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Error message displayed when an incorrect recovery code is entered.  \\n *\\n * Script Outputs :  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure.  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging.  \\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Cleared out to reset error states.  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Validation script injected successfully).  \\n *    - \\\"Error\\\" (Unexpected execution failure).  \\n */\\n\\ntry {\\n    /**\\n     * Returns a JavaScript string that:\\n     * - Ensures the recovery code is exactly 10 characters long.\\n     * - Disables the submit button until a valid input is entered.\\n     * - Observes DOM changes and initializes validation dynamically.\\n     */\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                    if(submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        const recoveryCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Recovery Code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (recoveryCode && submitBtn) { \\\\n\\\\\\n                            // Set the maxlength attribute to 10 \\\\n\\\\\\n                            recoveryCode.setAttribute('maxlength', 10); \\\\n\\\\\\n                            const enableSubmitBtn = () => { \\\\n\\\\\\n                                // Check input validity before enabling submit button \\\\n\\\\\\n                                const isValidInput = recoveryCode.value.length === 10; \\\\n\\\\\\n                                if (isValidInput) { \\\\n\\\\\\n                                    submitBtn.disabled = false; \\\\n\\\\\\n                                } else { \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }; \\\\n\\\\\\n                            // Revalidate before form submission \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                const isValidInput = recoveryCode.value.length === 10; \\\\n\\\\\\n                                if (!isValidInput) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            recoveryCode.addEventListener('input', enableSubmitBtn); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    // If the recovery code field exists, initialize validation. Otherwise, observe DOM changes. \\\\n\\\\\\n                    if (document.querySelectorAll('input[data-vv-as=\\\\\\\"Recovery Code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                    else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                    } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    // Retrieve any previous invalid code error message\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n\\n    // Clear the invalidCodeErrorMessage to reset the error state\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n    \\n    if (callbacks.isEmpty()) {                \\n        // Display an error message if the previous recovery code attempt was invalid\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) {\\n            callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        }\\n\\n        // Inject validation script into the UI\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n\\n    // Proceed to the success path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507315,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090711981,
          "evaluatorVersion": "2.0"
        },
        "07e3c04a-1cf0-42e9-ab80-c9c06634c530": {
          "_id": "07e3c04a-1cf0-42e9-ab80-c9c06634c530",
          "name": "OOTB - Validate Verification Code Input Script",
          "description": "Script to validate verification code input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"/*\\n * Verification Code Validation Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * This script ensures that the user enters a valid 6-digit verification code before enabling the submit button.\\n * It prevents premature form submission and enforces numeric input constraints.\\n *\\n * Script Inputs:\\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Error message displayed when an incorrect verification code is entered.\\n *\\n * Script Outputs:\\n *    - \\\"errorMessage\\\" (String) - User-friendly error message if an error occurs.\\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging.\\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Cleared out after validation to reset error states.\\n *\\n * Outcomes:\\n *    - \\\"true\\\"  (Script executed successfully).\\n *    - \\\"Error\\\" (Unexpected failure).\\n */\\n\\ntry {\\n    /**\\n     * Returns a JavaScript string that:\\n     * - Ensures the verification code is exactly 6 digits long.\\n     * - Disables the submit button until a valid input is entered.\\n     * - Prevents form submission if the input is invalid.\\n     * - Observes DOM changes and initializes validation dynamically.\\n     */\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    // Validate the verification code \\\\n\\\\\\n                    function validateCode() { \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        const verificationCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (verificationCode) { \\\\n\\\\\\n                            // Restrict input to 6-digit numeric values \\\\n\\\\\\n                            verificationCode.setAttribute('maxlength', '6'); \\\\n\\\\\\n                            verificationCode.setAttribute('pattern', '[0-9]{6}'); \\\\n\\\\\\n                            verificationCode.setAttribute('inputmode', 'numeric'); \\\\n\\\\\\n                            \\\\n\\\\\\n                            // Validate the input format \\\\n\\\\\\n                            const isValidCode = /^[0-9]{6}$/.test(verificationCode.value); \\\\n\\\\\\n                            submitBtn.disabled = !isValidCode; \\\\n\\\\\\n                            return isValidCode; \\\\n\\\\\\n                        } \\\\n\\\\\\n                        return false; \\\\n\\\\\\n                    }; \\\\n\\\\\\n                    \\\\n\\\\\\n                    // Prevent form submission via Enter key if input is invalid \\\\n\\\\\\n                    function preventEnterKeyDefault(event) { \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (event.key === 'Enter' && !validateCode()) { \\\\n\\\\\\n                            event.preventDefault(); \\\\n\\\\\\n                            if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        // Auto-submit and navigate to 'Not Registered' if the method is not registered for the user \\\\n\\\\\\n                        const nextBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (nextBtn) { \\\\n\\\\\\n                            nextBtn.style.visibility='hidden'; \\\\n\\\\\\n                            nextBtn.click(); \\\\n\\\\\\n                        } \\\\n\\\\\\n                        \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                        \\\\n\\\\\\n                        const verificationCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (verificationCode && submitBtn) { \\\\n\\\\\\n                            // Attach event listeners to handle validation dynamically \\\\n\\\\\\n                            verificationCode.addEventListener('input', validateCode); \\\\n\\\\\\n                            verificationCode.addEventListener('keypress', preventEnterKeyDefault); \\\\n\\\\\\n                            \\\\n\\\\\\n                            // Prevent form submission if input is invalid \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                if (!validateCode()) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    // If both elements are present, initialize validation \\\\n\\\\\\n                    if (document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0] && document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                    else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                    } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    // Retrieve any previous invalid code error message\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n\\n    // Clear the invalidCodeErrorMessage to reset the error state\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n    \\n    if (callbacks.isEmpty()) {\\n        // Display an error message if the previous verification code attempt was invalid\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) {\\n            callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        }\\n\\n        // Inject validation script into the UI\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n\\n    // Proceed to the success path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507663,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090711994,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {},
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "CIAM Deep Fake - OATH MFA Method Registration Inner Journey": {
      "tree": {
        "_id": "CIAM Deep Fake - OATH MFA Method Registration Inner Journey",
        "_rev": "751393103",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Deep Fake\"]"
        },
        "entryNodeId": "864098a0-fadf-49df-a715-481e298e120f",
        "innerTreeOnly": false,
        "nodes": {
          "0f390437-9261-49fd-b105-3cbac366100a": {
            "connections": {
              "true": "dec7dc75-5b56-4c36-9a9e-79b1416df31a"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 907,
            "y": 494.015625
          },
          "180e6a10-cbe3-4722-b395-86d2efcea91e": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "0f390437-9261-49fd-b105-3cbac366100a"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 936,
            "y": 612.015625
          },
          "264b128c-317f-4096-8fdc-62f0dcff98f4": {
            "connections": {
              "outcome": "c76589d9-6f86-4ae9-98ae-d534df4ce026"
            },
            "displayName": "Recovery Code Display Node",
            "nodeType": "RecoveryCodeDisplayNode",
            "x": 545,
            "y": 129.015625
          },
          "6c7fe15c-42cc-4e48-9880-3854d6c139ec": {
            "connections": {
              "true": "c76589d9-6f86-4ae9-98ae-d534df4ce026"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 902,
            "y": 358.015625
          },
          "730fb844-a024-4ae2-830f-98769760490b": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "6c7fe15c-42cc-4e48-9880-3854d6c139ec"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 1283,
            "y": 74.015625
          },
          "73e5caf9-1db6-4afe-8b84-73da17ff57ac": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "864098a0-fadf-49df-a715-481e298e120f"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 571,
            "y": 815.015625
          },
          "864098a0-fadf-49df-a715-481e298e120f": {
            "connections": {
              "failureOutcome": "73e5caf9-1db6-4afe-8b84-73da17ff57ac",
              "notRegisteredOutcome": "e198e8bb-07ef-474a-9f79-9bc160e14e75",
              "recoveryCodeOutcome": "dec7dc75-5b56-4c36-9a9e-79b1416df31a",
              "successOutcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "OATH Token Verifier",
            "nodeType": "OathTokenVerifierNode",
            "x": 562,
            "y": 558.015625
          },
          "c76589d9-6f86-4ae9-98ae-d534df4ce026": {
            "connections": {
              "failureOutcome": "730fb844-a024-4ae2-830f-98769760490b",
              "notRegisteredOutcome": "e301438c-0bd0-429c-ab0c-66126501069a",
              "successOutcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Collect Verification Code",
            "nodeType": "PageNode",
            "x": 909,
            "y": 0
          },
          "dec7dc75-5b56-4c36-9a9e-79b1416df31a": {
            "connections": {
              "false": "180e6a10-cbe3-4722-b395-86d2efcea91e",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Collect Recovery Code",
            "nodeType": "PageNode",
            "x": 919,
            "y": 780.015625
          },
          "def0200c-28d6-4a90-883e-d920a99e3f80": {
            "connections": {
              "failureOutcome": "e301438c-0bd0-429c-ab0c-66126501069a",
              "successOutcome": "264b128c-317f-4096-8fdc-62f0dcff98f4"
            },
            "displayName": "OATH Registration",
            "nodeType": "OathRegistrationNode",
            "x": 563,
            "y": 298.015625
          },
          "e198e8bb-07ef-474a-9f79-9bc160e14e75": {
            "connections": {
              "outcome": "def0200c-28d6-4a90-883e-d920a99e3f80"
            },
            "displayName": "Get Authenticator App",
            "nodeType": "GetAuthenticatorAppNode",
            "x": 554.5714285714286,
            "y": 450.59375
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1908,
            "y": 504
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1910,
            "y": 801
          },
          "startNode": {
            "x": 50,
            "y": 250
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "0f390437-9261-49fd-b105-3cbac366100a": {
          "_id": "0f390437-9261-49fd-b105-3cbac366100a",
          "_rev": "21920425",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "180e6a10-cbe3-4722-b395-86d2efcea91e": {
          "_id": "180e6a10-cbe3-4722-b395-86d2efcea91e",
          "_rev": "-1001224047",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "264b128c-317f-4096-8fdc-62f0dcff98f4": {
          "_id": "264b128c-317f-4096-8fdc-62f0dcff98f4",
          "_rev": "302243048",
          "_type": {
            "_id": "RecoveryCodeDisplayNode",
            "name": "Recovery Code Display Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "6c7fe15c-42cc-4e48-9880-3854d6c139ec": {
          "_id": "6c7fe15c-42cc-4e48-9880-3854d6c139ec",
          "_rev": "-2035674503",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "730fb844-a024-4ae2-830f-98769760490b": {
          "_id": "730fb844-a024-4ae2-830f-98769760490b",
          "_rev": "1159110776",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "73e5caf9-1db6-4afe-8b84-73da17ff57ac": {
          "_id": "73e5caf9-1db6-4afe-8b84-73da17ff57ac",
          "_rev": "-60025562",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "864098a0-fadf-49df-a715-481e298e120f": {
          "_id": "864098a0-fadf-49df-a715-481e298e120f",
          "_rev": "1615205558",
          "totpTimeInterval": 30,
          "maximumAllowedClockDrift": 5,
          "totpTimeSteps": 2,
          "totpHashAlgorithm": "HMAC_SHA1",
          "isRecoveryCodeAllowed": true,
          "algorithm": "TOTP",
          "hotpWindowSize": 100,
          "_type": {
            "_id": "OathTokenVerifierNode",
            "name": "OATH Token Verifier",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            },
            {
              "id": "recoveryCodeOutcome",
              "displayName": "Recovery Code"
            }
          ]
        },
        "c76589d9-6f86-4ae9-98ae-d534df4ce026": {
          "_id": "c76589d9-6f86-4ae9-98ae-d534df4ce026",
          "_rev": "1010612701",
          "nodes": [
            {
              "_id": "a4f72117-a3cd-47cf-82be-c12b4f4352a2",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Verification Code"
            },
            {
              "_id": "d7d09788-5784-4c7c-ac25-36d0a601d159",
              "nodeType": "OathTokenVerifierNode",
              "displayName": "OATH Token Verifier"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Verification Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            }
          ]
        },
        "dec7dc75-5b56-4c36-9a9e-79b1416df31a": {
          "_id": "dec7dc75-5b56-4c36-9a9e-79b1416df31a",
          "_rev": "1054152348",
          "nodes": [
            {
              "_id": "082d98d4-fc77-4b75-8e2c-a99d87da41a7",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Recovery Code"
            },
            {
              "_id": "2ed235dd-4de9-4860-b5ec-4340fbda37f8",
              "nodeType": "RecoveryCodeCollectorDecisionNode",
              "displayName": "Recovery Code Collector Decision"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Recovery Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "def0200c-28d6-4a90-883e-d920a99e3f80": {
          "_id": "def0200c-28d6-4a90-883e-d920a99e3f80",
          "_rev": "-667506838",
          "addChecksum": false,
          "bgColor": "032b75",
          "generateRecoveryCodes": true,
          "truncationOffset": -1,
          "algorithm": "TOTP",
          "postponeDeviceProfileStorage": false,
          "passwordLength": "SIX_DIGITS",
          "totpTimeInterval": 30,
          "scanQRCodeMessage": {},
          "accountName": "USERNAME",
          "issuer": "ForgeRock",
          "minSharedSecretLength": 32,
          "totpHashAlgorithm": "HMAC_SHA1",
          "imgUrl": "",
          "_type": {
            "_id": "OathRegistrationNode",
            "name": "OATH Registration",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            }
          ]
        },
        "e198e8bb-07ef-474a-9f79-9bc160e14e75": {
          "_id": "e198e8bb-07ef-474a-9f79-9bc160e14e75",
          "_rev": "279432405",
          "continueLabel": {},
          "message": {},
          "googleLink": "https://play.google.com/store/apps/details?id=com.forgerock.authenticator",
          "appleLink": "https://itunes.apple.com/app/forgerock-authenticator/id1038442926",
          "_type": {
            "_id": "GetAuthenticatorAppNode",
            "name": "Get Authenticator App",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        }
      },
      "innerNodes": {
        "a4f72117-a3cd-47cf-82be-c12b4f4352a2": {
          "_id": "a4f72117-a3cd-47cf-82be-c12b4f4352a2",
          "_rev": "1222082983",
          "script": "07e3c04a-1cf0-42e9-ab80-c9c06634c530",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "d7d09788-5784-4c7c-ac25-36d0a601d159": {
          "_id": "d7d09788-5784-4c7c-ac25-36d0a601d159",
          "_rev": "-2013527814",
          "totpTimeInterval": 30,
          "maximumAllowedClockDrift": 5,
          "totpTimeSteps": 2,
          "totpHashAlgorithm": "HMAC_SHA1",
          "isRecoveryCodeAllowed": false,
          "algorithm": "TOTP",
          "hotpWindowSize": 100,
          "_type": {
            "_id": "OathTokenVerifierNode",
            "name": "OATH Token Verifier",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            }
          ]
        },
        "082d98d4-fc77-4b75-8e2c-a99d87da41a7": {
          "_id": "082d98d4-fc77-4b75-8e2c-a99d87da41a7",
          "_rev": "-157767898",
          "script": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "2ed235dd-4de9-4860-b5ec-4340fbda37f8": {
          "_id": "2ed235dd-4de9-4860-b5ec-4340fbda37f8",
          "_rev": "-1020067605",
          "recoveryCodeType": "OATH",
          "_type": {
            "_id": "RecoveryCodeCollectorDecisionNode",
            "name": "Recovery Code Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        }
      },
      "scripts": {
        "86e5bf13-4882-4032-8fb7-f75dd7fa7b82": {
          "_id": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "name": "OOTB - Set Invalid Code Error Message Script",
          "description": "Script to set invalid code error message",
          "script": "\"/*\\n * Invalid Code Error Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * Sets an \\\"Invalid Code\\\" error message in shared state, which can be displayed on the last UI Node.\\n *\\n * Script Inputs  : null  \\n *\\n * Script Outputs :  \\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Error message for invalid code  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message  \\n *    - \\\"errorDetails\\\" (String) - Debugging details  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Error message set)  \\n *    - \\\"Error\\\" (Execution failure)  \\n */\\n\\ntry {\\n    // Set the below error message in shared state, to display on the last UI Node\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"Invalid Code\\\");\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507163,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090711974,
          "evaluatorVersion": "2.0"
        },
        "07e3c04a-1cf0-42e9-ab80-c9c06634c530": {
          "_id": "07e3c04a-1cf0-42e9-ab80-c9c06634c530",
          "name": "OOTB - Validate Verification Code Input Script",
          "description": "Script to validate verification code input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"/*\\n * Verification Code Validation Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * This script ensures that the user enters a valid 6-digit verification code before enabling the submit button.\\n * It prevents premature form submission and enforces numeric input constraints.\\n *\\n * Script Inputs:\\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Error message displayed when an incorrect verification code is entered.\\n *\\n * Script Outputs:\\n *    - \\\"errorMessage\\\" (String) - User-friendly error message if an error occurs.\\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging.\\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Cleared out after validation to reset error states.\\n *\\n * Outcomes:\\n *    - \\\"true\\\"  (Script executed successfully).\\n *    - \\\"Error\\\" (Unexpected failure).\\n */\\n\\ntry {\\n    /**\\n     * Returns a JavaScript string that:\\n     * - Ensures the verification code is exactly 6 digits long.\\n     * - Disables the submit button until a valid input is entered.\\n     * - Prevents form submission if the input is invalid.\\n     * - Observes DOM changes and initializes validation dynamically.\\n     */\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    // Validate the verification code \\\\n\\\\\\n                    function validateCode() { \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        const verificationCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (verificationCode) { \\\\n\\\\\\n                            // Restrict input to 6-digit numeric values \\\\n\\\\\\n                            verificationCode.setAttribute('maxlength', '6'); \\\\n\\\\\\n                            verificationCode.setAttribute('pattern', '[0-9]{6}'); \\\\n\\\\\\n                            verificationCode.setAttribute('inputmode', 'numeric'); \\\\n\\\\\\n                            \\\\n\\\\\\n                            // Validate the input format \\\\n\\\\\\n                            const isValidCode = /^[0-9]{6}$/.test(verificationCode.value); \\\\n\\\\\\n                            submitBtn.disabled = !isValidCode; \\\\n\\\\\\n                            return isValidCode; \\\\n\\\\\\n                        } \\\\n\\\\\\n                        return false; \\\\n\\\\\\n                    }; \\\\n\\\\\\n                    \\\\n\\\\\\n                    // Prevent form submission via Enter key if input is invalid \\\\n\\\\\\n                    function preventEnterKeyDefault(event) { \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (event.key === 'Enter' && !validateCode()) { \\\\n\\\\\\n                            event.preventDefault(); \\\\n\\\\\\n                            if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        // Auto-submit and navigate to 'Not Registered' if the method is not registered for the user \\\\n\\\\\\n                        const nextBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (nextBtn) { \\\\n\\\\\\n                            nextBtn.style.visibility='hidden'; \\\\n\\\\\\n                            nextBtn.click(); \\\\n\\\\\\n                        } \\\\n\\\\\\n                        \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                        \\\\n\\\\\\n                        const verificationCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (verificationCode && submitBtn) { \\\\n\\\\\\n                            // Attach event listeners to handle validation dynamically \\\\n\\\\\\n                            verificationCode.addEventListener('input', validateCode); \\\\n\\\\\\n                            verificationCode.addEventListener('keypress', preventEnterKeyDefault); \\\\n\\\\\\n                            \\\\n\\\\\\n                            // Prevent form submission if input is invalid \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                if (!validateCode()) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    // If both elements are present, initialize validation \\\\n\\\\\\n                    if (document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0] && document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                    else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                    } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    // Retrieve any previous invalid code error message\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n\\n    // Clear the invalidCodeErrorMessage to reset the error state\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n    \\n    if (callbacks.isEmpty()) {\\n        // Display an error message if the previous verification code attempt was invalid\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) {\\n            callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        }\\n\\n        // Inject validation script into the UI\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n\\n    // Proceed to the success path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507663,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090711994,
          "evaluatorVersion": "2.0"
        },
        "be50351b-c077-4827-b9aa-3a61a08b30f9": {
          "_id": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "name": "OOTB - Validate Recovery Code Input Script",
          "description": "Script to validate Recovery code input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"/*\\n * Recovery Code Input Validation Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * This script ensures that the recovery code input follows a strict 10-character requirement.\\n * It prevents form submission until a valid code is entered and dynamically enables/disables the submit button.\\n *\\n * Script Inputs  :  \\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Error message displayed when an incorrect recovery code is entered.  \\n *\\n * Script Outputs :  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure.  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging.  \\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Cleared out to reset error states.  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Validation script injected successfully).  \\n *    - \\\"Error\\\" (Unexpected execution failure).  \\n */\\n\\ntry {\\n    /**\\n     * Returns a JavaScript string that:\\n     * - Ensures the recovery code is exactly 10 characters long.\\n     * - Disables the submit button until a valid input is entered.\\n     * - Observes DOM changes and initializes validation dynamically.\\n     */\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                    if(submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        const recoveryCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Recovery Code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (recoveryCode && submitBtn) { \\\\n\\\\\\n                            // Set the maxlength attribute to 10 \\\\n\\\\\\n                            recoveryCode.setAttribute('maxlength', 10); \\\\n\\\\\\n                            const enableSubmitBtn = () => { \\\\n\\\\\\n                                // Check input validity before enabling submit button \\\\n\\\\\\n                                const isValidInput = recoveryCode.value.length === 10; \\\\n\\\\\\n                                if (isValidInput) { \\\\n\\\\\\n                                    submitBtn.disabled = false; \\\\n\\\\\\n                                } else { \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }; \\\\n\\\\\\n                            // Revalidate before form submission \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                const isValidInput = recoveryCode.value.length === 10; \\\\n\\\\\\n                                if (!isValidInput) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            recoveryCode.addEventListener('input', enableSubmitBtn); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    // If the recovery code field exists, initialize validation. Otherwise, observe DOM changes. \\\\n\\\\\\n                    if (document.querySelectorAll('input[data-vv-as=\\\\\\\"Recovery Code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                    else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                    } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    // Retrieve any previous invalid code error message\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n\\n    // Clear the invalidCodeErrorMessage to reset the error state\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n    \\n    if (callbacks.isEmpty()) {                \\n        // Display an error message if the previous recovery code attempt was invalid\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) {\\n            callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        }\\n\\n        // Inject validation script into the UI\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n\\n    // Proceed to the success path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507315,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090711981,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {},
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "CIAM Deep Fake - Push MFA Method Registration Inner Journey": {
      "tree": {
        "_id": "CIAM Deep Fake - Push MFA Method Registration Inner Journey",
        "_rev": "-1765161252",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Deep Fake\"]"
        },
        "entryNodeId": "a86952b8-e5e9-48e9-b17d-a555d8d41886",
        "innerTreeOnly": false,
        "nodes": {
          "065d73ad-0124-4141-b355-f6f3c897dc0e": {
            "connections": {
              "true": "ed5d5c70-c8bc-4abc-ae32-bf2a4a268431"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 778,
            "y": 1033.015625
          },
          "12e3c42e-e1e7-48b2-9ed7-f95e94049def": {
            "connections": {
              "outcome": "7c1bc12f-3755-47f8-b4bd-e1ab9ece64d8"
            },
            "displayName": "Recovery Code Display Node",
            "nodeType": "RecoveryCodeDisplayNode",
            "x": 352,
            "y": 1032.015625
          },
          "2e9ca26b-1ed0-4afd-aae1-b56d90f08c9f": {
            "connections": {
              "EXPIRED": "3248493b-5d9e-4b2e-aa95-dabb9f362687",
              "FALSE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "TRUE": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "WAITING": "741463a3-6689-4297-ad35-e77ab0198ff6"
            },
            "displayName": "Push Result Verifier Node",
            "nodeType": "PushResultVerifierNode",
            "x": 803.3333333333335,
            "y": 1382.359375
          },
          "3248493b-5d9e-4b2e-aa95-dabb9f362687": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "7c1bc12f-3755-47f8-b4bd-e1ab9ece64d8"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 827,
            "y": 1203.515625
          },
          "741463a3-6689-4297-ad35-e77ab0198ff6": {
            "connections": {
              "DONE": "2e9ca26b-1ed0-4afd-aae1-b56d90f08c9f",
              "EXITED": "3248493b-5d9e-4b2e-aa95-dabb9f362687"
            },
            "displayName": "Push Wait Node",
            "nodeType": "PushWaitNode",
            "x": 387,
            "y": 1422.015625
          },
          "7c1bc12f-3755-47f8-b4bd-e1ab9ece64d8": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "NOT_REGISTERED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "SENT": "741463a3-6689-4297-ad35-e77ab0198ff6"
            },
            "displayName": "Push Sender",
            "nodeType": "PushAuthenticationSenderNode",
            "x": 380,
            "y": 1209.015625
          },
          "7c72f519-4d59-486d-ade5-31852c68e5fe": {
            "connections": {
              "EXPIRED": "87be086b-a54a-47b9-b519-7785e75ea4a6",
              "FALSE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "TRUE": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "WAITING": "fe9db53a-4869-4578-b95e-b57c5a8b517d"
            },
            "displayName": "Push Result Verifier Node",
            "nodeType": "PushResultVerifierNode",
            "x": 788,
            "y": 93.015625
          },
          "84e309c2-5f4b-44eb-a330-6c61fe576e85": {
            "connections": {
              "failureOutcome": "e301438c-0bd0-429c-ab0c-66126501069a",
              "successOutcome": "12e3c42e-e1e7-48b2-9ed7-f95e94049def",
              "timeoutOutcome": "a89b1cbb-add4-4bb3-9643-dff0b952d4fd"
            },
            "displayName": "Push Registration",
            "nodeType": "PushRegistrationNode",
            "x": 378,
            "y": 816.015625
          },
          "87be086b-a54a-47b9-b519-7785e75ea4a6": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "a86952b8-e5e9-48e9-b17d-a555d8d41886"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 805,
            "y": 322
          },
          "a86952b8-e5e9-48e9-b17d-a555d8d41886": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "NOT_REGISTERED": "a89b1cbb-add4-4bb3-9643-dff0b952d4fd",
              "SENT": "fe9db53a-4869-4578-b95e-b57c5a8b517d"
            },
            "displayName": "Push Sender",
            "nodeType": "PushAuthenticationSenderNode",
            "x": 374,
            "y": 316.015625
          },
          "a89b1cbb-add4-4bb3-9643-dff0b952d4fd": {
            "connections": {
              "outcome": "84e309c2-5f4b-44eb-a330-6c61fe576e85"
            },
            "displayName": "Get Authenticator App",
            "nodeType": "GetAuthenticatorAppNode",
            "x": 360,
            "y": 628.015625
          },
          "ed5d5c70-c8bc-4abc-ae32-bf2a4a268431": {
            "connections": {
              "false": "f5a816bf-9453-4eac-9026-a537b69b675d",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Collect Recovery Code",
            "nodeType": "PageNode",
            "x": 815,
            "y": 509.015625
          },
          "f5a816bf-9453-4eac-9026-a537b69b675d": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "065d73ad-0124-4141-b355-f6f3c897dc0e"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 815,
            "y": 805.015625
          },
          "fe9db53a-4869-4578-b95e-b57c5a8b517d": {
            "connections": {
              "DONE": "7c72f519-4d59-486d-ade5-31852c68e5fe",
              "EXITED": "ed5d5c70-c8bc-4abc-ae32-bf2a4a268431"
            },
            "displayName": "Push Wait Node",
            "nodeType": "PushWaitNode",
            "x": 377,
            "y": 107.015625
          }
        },
        "description": "A login journey with MFA using push notifications. This is for the implementation guide.",
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1275,
            "y": 117
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1197,
            "y": 906
          },
          "startNode": {
            "x": 50,
            "y": 250
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "065d73ad-0124-4141-b355-f6f3c897dc0e": {
          "_id": "065d73ad-0124-4141-b355-f6f3c897dc0e",
          "_rev": "-1172708391",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "12e3c42e-e1e7-48b2-9ed7-f95e94049def": {
          "_id": "12e3c42e-e1e7-48b2-9ed7-f95e94049def",
          "_rev": "714495541",
          "_type": {
            "_id": "RecoveryCodeDisplayNode",
            "name": "Recovery Code Display Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "2e9ca26b-1ed0-4afd-aae1-b56d90f08c9f": {
          "_id": "2e9ca26b-1ed0-4afd-aae1-b56d90f08c9f",
          "_rev": "227622816",
          "_type": {
            "_id": "PushResultVerifierNode",
            "name": "Push Result Verifier Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "TRUE",
              "displayName": "Success"
            },
            {
              "id": "FALSE",
              "displayName": "Failure"
            },
            {
              "id": "EXPIRED",
              "displayName": "Expired"
            },
            {
              "id": "WAITING",
              "displayName": "Waiting"
            }
          ]
        },
        "3248493b-5d9e-4b2e-aa95-dabb9f362687": {
          "_id": "3248493b-5d9e-4b2e-aa95-dabb9f362687",
          "_rev": "1723934348",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "741463a3-6689-4297-ad35-e77ab0198ff6": {
          "_id": "741463a3-6689-4297-ad35-e77ab0198ff6",
          "_rev": "-147418556",
          "challengeMessage": {},
          "exitMessage": {},
          "waitingMessage": {},
          "secondsToWait": 5,
          "_type": {
            "_id": "PushWaitNode",
            "name": "Push Wait Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "DONE",
              "displayName": "Done"
            },
            {
              "id": "EXITED",
              "displayName": "Exit"
            }
          ]
        },
        "7c1bc12f-3755-47f8-b4bd-e1ab9ece64d8": {
          "_id": "7c1bc12f-3755-47f8-b4bd-e1ab9ece64d8",
          "_rev": "1756925805",
          "captureFailure": true,
          "contextInfo": false,
          "userMessage": {},
          "pushType": "DEFAULT",
          "customPayload": [],
          "mandatory": true,
          "messageTimeout": 120000,
          "_type": {
            "_id": "PushAuthenticationSenderNode",
            "name": "Push Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "SENT",
              "displayName": "Sent"
            },
            {
              "id": "NOT_REGISTERED",
              "displayName": "Not Registered"
            },
            {
              "id": "FAILURE",
              "displayName": "Failure"
            }
          ]
        },
        "7c72f519-4d59-486d-ade5-31852c68e5fe": {
          "_id": "7c72f519-4d59-486d-ade5-31852c68e5fe",
          "_rev": "-1982548781",
          "_type": {
            "_id": "PushResultVerifierNode",
            "name": "Push Result Verifier Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "TRUE",
              "displayName": "Success"
            },
            {
              "id": "FALSE",
              "displayName": "Failure"
            },
            {
              "id": "EXPIRED",
              "displayName": "Expired"
            },
            {
              "id": "WAITING",
              "displayName": "Waiting"
            }
          ]
        },
        "84e309c2-5f4b-44eb-a330-6c61fe576e85": {
          "_id": "84e309c2-5f4b-44eb-a330-6c61fe576e85",
          "_rev": "-130844353",
          "bgColor": "032b75",
          "generateRecoveryCodes": true,
          "scanQRCodeMessage": {},
          "accountName": "USERNAME",
          "issuer": "ForgeRock",
          "imgUrl": "",
          "timeout": 60,
          "_type": {
            "_id": "PushRegistrationNode",
            "name": "Push Registration",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "timeoutOutcome",
              "displayName": "Time Out"
            }
          ]
        },
        "87be086b-a54a-47b9-b519-7785e75ea4a6": {
          "_id": "87be086b-a54a-47b9-b519-7785e75ea4a6",
          "_rev": "226973794",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "a86952b8-e5e9-48e9-b17d-a555d8d41886": {
          "_id": "a86952b8-e5e9-48e9-b17d-a555d8d41886",
          "_rev": "-104237774",
          "captureFailure": true,
          "contextInfo": false,
          "userMessage": {},
          "pushType": "DEFAULT",
          "customPayload": [],
          "mandatory": true,
          "messageTimeout": 120000,
          "_type": {
            "_id": "PushAuthenticationSenderNode",
            "name": "Push Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "SENT",
              "displayName": "Sent"
            },
            {
              "id": "NOT_REGISTERED",
              "displayName": "Not Registered"
            },
            {
              "id": "FAILURE",
              "displayName": "Failure"
            }
          ]
        },
        "a89b1cbb-add4-4bb3-9643-dff0b952d4fd": {
          "_id": "a89b1cbb-add4-4bb3-9643-dff0b952d4fd",
          "_rev": "-1919761594",
          "continueLabel": {},
          "message": {},
          "googleLink": "https://play.google.com/store/apps/details?id=com.forgerock.authenticator",
          "appleLink": "https://itunes.apple.com/app/forgerock-authenticator/id1038442926",
          "_type": {
            "_id": "GetAuthenticatorAppNode",
            "name": "Get Authenticator App",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "ed5d5c70-c8bc-4abc-ae32-bf2a4a268431": {
          "_id": "ed5d5c70-c8bc-4abc-ae32-bf2a4a268431",
          "_rev": "-1405242798",
          "nodes": [
            {
              "_id": "cb905a27-5742-46c7-b45d-d951ca8272ad",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Recovery Code"
            },
            {
              "_id": "61c43805-dc91-4396-9a95-f4587c6e6836",
              "nodeType": "RecoveryCodeCollectorDecisionNode",
              "displayName": "Recovery Code Collector Decision"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Recovery Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "f5a816bf-9453-4eac-9026-a537b69b675d": {
          "_id": "f5a816bf-9453-4eac-9026-a537b69b675d",
          "_rev": "-1084461270",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "fe9db53a-4869-4578-b95e-b57c5a8b517d": {
          "_id": "fe9db53a-4869-4578-b95e-b57c5a8b517d",
          "_rev": "1508057244",
          "challengeMessage": {},
          "exitMessage": {},
          "waitingMessage": {},
          "secondsToWait": 5,
          "_type": {
            "_id": "PushWaitNode",
            "name": "Push Wait Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "DONE",
              "displayName": "Done"
            },
            {
              "id": "EXITED",
              "displayName": "Exit"
            }
          ]
        }
      },
      "innerNodes": {
        "cb905a27-5742-46c7-b45d-d951ca8272ad": {
          "_id": "cb905a27-5742-46c7-b45d-d951ca8272ad",
          "_rev": "-1182122487",
          "script": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "61c43805-dc91-4396-9a95-f4587c6e6836": {
          "_id": "61c43805-dc91-4396-9a95-f4587c6e6836",
          "_rev": "-1237830723",
          "recoveryCodeType": "PUSH",
          "_type": {
            "_id": "RecoveryCodeCollectorDecisionNode",
            "name": "Recovery Code Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        }
      },
      "scripts": {
        "86e5bf13-4882-4032-8fb7-f75dd7fa7b82": {
          "_id": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "name": "OOTB - Set Invalid Code Error Message Script",
          "description": "Script to set invalid code error message",
          "script": "\"/*\\n * Invalid Code Error Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * Sets an \\\"Invalid Code\\\" error message in shared state, which can be displayed on the last UI Node.\\n *\\n * Script Inputs  : null  \\n *\\n * Script Outputs :  \\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Error message for invalid code  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message  \\n *    - \\\"errorDetails\\\" (String) - Debugging details  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Error message set)  \\n *    - \\\"Error\\\" (Execution failure)  \\n */\\n\\ntry {\\n    // Set the below error message in shared state, to display on the last UI Node\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"Invalid Code\\\");\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507163,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090711974,
          "evaluatorVersion": "2.0"
        },
        "be50351b-c077-4827-b9aa-3a61a08b30f9": {
          "_id": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "name": "OOTB - Validate Recovery Code Input Script",
          "description": "Script to validate Recovery code input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"/*\\n * Recovery Code Input Validation Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * This script ensures that the recovery code input follows a strict 10-character requirement.\\n * It prevents form submission until a valid code is entered and dynamically enables/disables the submit button.\\n *\\n * Script Inputs  :  \\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Error message displayed when an incorrect recovery code is entered.  \\n *\\n * Script Outputs :  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure.  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging.  \\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Cleared out to reset error states.  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Validation script injected successfully).  \\n *    - \\\"Error\\\" (Unexpected execution failure).  \\n */\\n\\ntry {\\n    /**\\n     * Returns a JavaScript string that:\\n     * - Ensures the recovery code is exactly 10 characters long.\\n     * - Disables the submit button until a valid input is entered.\\n     * - Observes DOM changes and initializes validation dynamically.\\n     */\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                    if(submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        const recoveryCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Recovery Code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (recoveryCode && submitBtn) { \\\\n\\\\\\n                            // Set the maxlength attribute to 10 \\\\n\\\\\\n                            recoveryCode.setAttribute('maxlength', 10); \\\\n\\\\\\n                            const enableSubmitBtn = () => { \\\\n\\\\\\n                                // Check input validity before enabling submit button \\\\n\\\\\\n                                const isValidInput = recoveryCode.value.length === 10; \\\\n\\\\\\n                                if (isValidInput) { \\\\n\\\\\\n                                    submitBtn.disabled = false; \\\\n\\\\\\n                                } else { \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }; \\\\n\\\\\\n                            // Revalidate before form submission \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                const isValidInput = recoveryCode.value.length === 10; \\\\n\\\\\\n                                if (!isValidInput) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            recoveryCode.addEventListener('input', enableSubmitBtn); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    // If the recovery code field exists, initialize validation. Otherwise, observe DOM changes. \\\\n\\\\\\n                    if (document.querySelectorAll('input[data-vv-as=\\\\\\\"Recovery Code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                    else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                    } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    // Retrieve any previous invalid code error message\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n\\n    // Clear the invalidCodeErrorMessage to reset the error state\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n    \\n    if (callbacks.isEmpty()) {                \\n        // Display an error message if the previous recovery code attempt was invalid\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) {\\n            callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        }\\n\\n        // Inject validation script into the UI\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n\\n    // Proceed to the success path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507315,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090711981,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {},
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "CIAM Deep Fake - MFA Device Registration Inner Journey": {
      "tree": {
        "_id": "CIAM Deep Fake - MFA Device Registration Inner Journey",
        "_rev": "-433118441",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Deep Fake\"]"
        },
        "entryNodeId": "67338a63-c9f0-4cdd-a88c-79f16a61fde0",
        "innerTreeOnly": false,
        "nodes": {
          "07897f6a-53a2-4b81-a82c-599b63375241": {
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "false": "18d9213e-300b-47b4-8c59-9fd6bfad42f9",
              "true": "e1fac123-edd8-469c-9ca6-b1c12fdd9711"
            },
            "displayName": "Collect OTP",
            "nodeType": "PageNode",
            "x": 1686,
            "y": 879.015625
          },
          "0894076e-c65a-422b-93c8-dc57a9e688a8": {
            "connections": {
              "true": "aff8737e-22e4-47e2-90c0-38b33bff708c"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 1343,
            "y": 1799.015625
          },
          "0de710bc-e690-4dcc-bbd3-26631730269d": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e1fac123-edd8-469c-9ca6-b1c12fdd9711"
            },
            "displayName": "Register Push MFA",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1002,
            "y": 384.015625
          },
          "18d9213e-300b-47b4-8c59-9fd6bfad42f9": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "a6417d64-7a0b-4cb7-9ade-37d6315321ab"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 1697,
            "y": 1259.015625
          },
          "27a9add8-a0df-4e55-a754-f3fe5e72bff6": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "fd51b535-fac9-47ad-a74f-552af8479dcf"
            },
            "displayName": "Update User",
            "nodeType": "PatchObjectNode",
            "x": 1004.46875,
            "y": 1767.03125
          },
          "2a2a7dc6-aeee-4bf8-993c-7100e3245487": {
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "07897f6a-53a2-4b81-a82c-599b63375241"
            },
            "displayName": "Twilio Verify Sender",
            "nodeType": "VerifyAuthSenderNode",
            "x": 1345.078125,
            "y": 903.015625
          },
          "4080b791-8875-4868-9b8b-042790050494": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e1fac123-edd8-469c-9ca6-b1c12fdd9711"
            },
            "displayName": "Register OATH MFA",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 999,
            "y": 209.015625
          },
          "4b0d7019-3c94-4de6-886c-02ace9eedd39": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "0894076e-c65a-422b-93c8-dc57a9e688a8"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 1699,
            "y": 1777.015625
          },
          "4eda8e45-ac99-4767-b0a2-b9fc029bdfb5": {
            "connections": {
              "EMAIL_NOT_SENT": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "EMAIL_SENT": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Notify User On Email",
            "nodeType": "EmailTemplateNode",
            "x": 2469,
            "y": 630.015625
          },
          "5a4e5f99-b8f0-4fd4-ba30-a458d5486276": {
            "connections": {
              "true": "b4beab46-1310-4e86-9a3c-4a0ecf8e4309"
            },
            "displayName": "Collect Phone Number",
            "nodeType": "PageNode",
            "x": 614,
            "y": 1186.015625
          },
          "5bcb713e-ba9a-43a4-b5f7-e5c4ac057bb2": {
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "False": "e301438c-0bd0-429c-ab0c-66126501069a",
              "True": "7eab37ed-c5e4-4c4b-8ff7-23cc9b566952"
            },
            "displayName": "Twilio Verify Lookup",
            "nodeType": "VerifyAuthLookupNode",
            "x": 985,
            "y": 1463.03125
          },
          "66ad8ba3-888d-41cf-a1fe-7bd642743abf": {
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "FIDO2": "afb5c466-6087-4a23-bc3a-c1f3108e65ba",
              "OATH": "4080b791-8875-4868-9b8b-042790050494",
              "OATH+PUSH": "a4fba46a-cde3-482c-9bae-76e00bbc71f9",
              "PUSH": "0de710bc-e690-4dcc-bbd3-26631730269d",
              "SMS": "f3319c2b-f8d0-48cb-965a-6df8495ca14b",
              "VOICE": "fd51b535-fac9-47ad-a74f-552af8479dcf"
            },
            "displayName": "Select Authn Device",
            "nodeType": "PageNode",
            "x": 233,
            "y": 442.421875
          },
          "67338a63-c9f0-4cdd-a88c-79f16a61fde0": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "66ad8ba3-888d-41cf-a1fe-7bd642743abf"
            },
            "displayName": "Get User Id In Shared State",
            "nodeType": "IdentifyExistingUserNode",
            "x": 230.0625,
            "y": 899.421875
          },
          "7eab37ed-c5e4-4c4b-8ff7-23cc9b566952": {
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "aff8737e-22e4-47e2-90c0-38b33bff708c"
            },
            "displayName": "Twilio Verify Sender",
            "nodeType": "VerifyAuthSenderNode",
            "x": 1352,
            "y": 1472.03125
          },
          "a4fba46a-cde3-482c-9bae-76e00bbc71f9": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e1fac123-edd8-469c-9ca6-b1c12fdd9711"
            },
            "displayName": "Register OATH & PUSH",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 996,
            "y": 600.015625
          },
          "a6417d64-7a0b-4cb7-9ade-37d6315321ab": {
            "connections": {
              "true": "07897f6a-53a2-4b81-a82c-599b63375241"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 1681.888888888889,
            "y": 743.6840277777778
          },
          "acf64f99-641d-459a-b458-7365d7252e9e": {
            "connections": {
              "true": "27a9add8-a0df-4e55-a754-f3fe5e72bff6"
            },
            "displayName": "Collect Phone Number",
            "nodeType": "PageNode",
            "x": 612,
            "y": 1719.015625
          },
          "afb5c466-6087-4a23-bc3a-c1f3108e65ba": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e1fac123-edd8-469c-9ca6-b1c12fdd9711"
            },
            "displayName": "Register WebAuthn Method",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 982,
            "y": 21.03125
          },
          "aff8737e-22e4-47e2-90c0-38b33bff708c": {
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "false": "4b0d7019-3c94-4de6-886c-02ace9eedd39",
              "true": "e1fac123-edd8-469c-9ca6-b1c12fdd9711"
            },
            "displayName": "Collect OTP",
            "nodeType": "PageNode",
            "x": 1699,
            "y": 1417.015625
          },
          "b4beab46-1310-4e86-9a3c-4a0ecf8e4309": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "f3319c2b-f8d0-48cb-965a-6df8495ca14b"
            },
            "displayName": "Update User",
            "nodeType": "PatchObjectNode",
            "x": 987,
            "y": 1240.015625
          },
          "e1fac123-edd8-469c-9ca6-b1c12fdd9711": {
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "4eda8e45-ac99-4767-b0a2-b9fc029bdfb5"
            },
            "displayName": "Update MFA Devices Object",
            "nodeType": "ScriptedDecisionNode",
            "x": 2072,
            "y": 622.421875
          },
          "e45e73e7-b3fe-4ddd-968d-fa67de42c780": {
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "False": "e301438c-0bd0-429c-ab0c-66126501069a",
              "True": "2a2a7dc6-aeee-4bf8-993c-7100e3245487"
            },
            "displayName": "Twilio Verify Lookup",
            "nodeType": "VerifyAuthLookupNode",
            "x": 996.078125,
            "y": 879.015625
          },
          "f3319c2b-f8d0-48cb-965a-6df8495ca14b": {
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "False": "5a4e5f99-b8f0-4fd4-ba30-a458d5486276",
              "True": "e45e73e7-b3fe-4ddd-968d-fa67de42c780"
            },
            "displayName": "Twilio Identifier",
            "nodeType": "VerifyAuthIdentifierNode",
            "x": 636.078125,
            "y": 873.015625
          },
          "fd51b535-fac9-47ad-a74f-552af8479dcf": {
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "False": "acf64f99-641d-459a-b458-7365d7252e9e",
              "True": "5bcb713e-ba9a-43a4-b5f7-e5c4ac057bb2"
            },
            "displayName": "Twilio Identifier",
            "nodeType": "VerifyAuthIdentifierNode",
            "x": 628,
            "y": 1470.03125
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 2883,
            "y": 663.3333333333333
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1407,
            "y": 1274.6666666666667
          },
          "startNode": {
            "x": 70,
            "y": 347.5
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "07897f6a-53a2-4b81-a82c-599b63375241": {
          "_id": "07897f6a-53a2-4b81-a82c-599b63375241",
          "_rev": "1343619055",
          "nodes": [
            {
              "_id": "68e6ee11-3ca4-467b-96ff-d13ce30edb3f",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate OTP"
            },
            {
              "_id": "ae64638e-6326-4da5-8e08-25290bfce735",
              "nodeType": "VerifyAuthCollectorDecisionNode",
              "displayName": "Twilio Verify Collector Decision"
            }
          ],
          "pageDescription": {
            "en": "Enter the passcode you received on your telephone number."
          },
          "pageHeader": {
            "en": "Enter Passcode"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        },
        "0894076e-c65a-422b-93c8-dc57a9e688a8": {
          "_id": "0894076e-c65a-422b-93c8-dc57a9e688a8",
          "_rev": "-1369528747",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "0de710bc-e690-4dcc-bbd3-26631730269d": {
          "_id": "0de710bc-e690-4dcc-bbd3-26631730269d",
          "_rev": "-2073078535",
          "tree": "CIAM Deep Fake - Push MFA Method Registration Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "18d9213e-300b-47b4-8c59-9fd6bfad42f9": {
          "_id": "18d9213e-300b-47b4-8c59-9fd6bfad42f9",
          "_rev": "477585474",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "27a9add8-a0df-4e55-a754-f3fe5e72bff6": {
          "_id": "27a9add8-a0df-4e55-a754-f3fe5e72bff6",
          "_rev": "-2136416144",
          "identityResource": "managed/alpha_user",
          "patchAsObject": false,
          "ignoredFields": [],
          "identityAttribute": "userName",
          "_type": {
            "_id": "PatchObjectNode",
            "name": "Patch Object",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "PATCHED",
              "displayName": "Patched"
            },
            {
              "id": "FAILURE",
              "displayName": "Failed"
            }
          ]
        },
        "2a2a7dc6-aeee-4bf8-993c-7100e3245487": {
          "_id": "2a2a7dc6-aeee-4bf8-993c-7100e3245487",
          "_rev": "1009133931",
          "accountSID": "enterYourSIDHere",
          "authToken": null,
          "channel": "SMS",
          "identifierSharedState": "userIdentifier",
          "serviceSID": "enterYourServiceSIDHere",
          "requestIdentifier": false,
          "_type": {
            "_id": "VerifyAuthSenderNode",
            "name": "Twilio Verify Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        },
        "4080b791-8875-4868-9b8b-042790050494": {
          "_id": "4080b791-8875-4868-9b8b-042790050494",
          "_rev": "68979941",
          "tree": "CIAM Deep Fake - OATH MFA Method Registration Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "4b0d7019-3c94-4de6-886c-02ace9eedd39": {
          "_id": "4b0d7019-3c94-4de6-886c-02ace9eedd39",
          "_rev": "-172932143",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "4eda8e45-ac99-4767-b0a2-b9fc029bdfb5": {
          "_id": "4eda8e45-ac99-4767-b0a2-b9fc029bdfb5",
          "_rev": "-1316084774",
          "emailTemplateName": "deviceRegistration",
          "identityAttribute": "userName",
          "emailAttribute": "mail",
          "_type": {
            "_id": "EmailTemplateNode",
            "name": "Email Template Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "EMAIL_SENT",
              "displayName": "Email Sent"
            },
            {
              "id": "EMAIL_NOT_SENT",
              "displayName": "Email Not Sent"
            }
          ]
        },
        "5a4e5f99-b8f0-4fd4-ba30-a458d5486276": {
          "_id": "5a4e5f99-b8f0-4fd4-ba30-a458d5486276",
          "_rev": "280324792",
          "nodes": [
            {
              "_id": "ac60f0e0-7fdc-41ee-bb0a-5715bb351266",
              "nodeType": "AttributeCollectorNode",
              "displayName": "Collect Phone Number"
            },
            {
              "_id": "bfd19d8c-e940-46b9-826e-d827a8880aab",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Telephone Number"
            }
          ],
          "pageDescription": {
            "en": "Enter your mobile phone number, including the country code, to receive authentication passcodes."
          },
          "pageHeader": {
            "en": "Text Message"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "5bcb713e-ba9a-43a4-b5f7-e5c4ac057bb2": {
          "_id": "5bcb713e-ba9a-43a4-b5f7-e5c4ac057bb2",
          "_rev": "1460213248",
          "accountSID": "enterYourSIDHere",
          "authToken": null,
          "identifierSharedState": "userIdentifier",
          "_type": {
            "_id": "VerifyAuthLookupNode",
            "name": "Twilio Verify Lookup",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "True",
              "displayName": "True"
            },
            {
              "id": "False",
              "displayName": "False"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "66ad8ba3-888d-41cf-a1fe-7bd642743abf": {
          "_id": "66ad8ba3-888d-41cf-a1fe-7bd642743abf",
          "_rev": "1975912199",
          "nodes": [
            {
              "_id": "ee142fe2-bcc2-408c-9213-f5bb36498509",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Get Allowed MFA methods"
            }
          ],
          "pageDescription": {
            "en": "Select an MFA method to use to sign on to your account."
          },
          "pageHeader": {
            "en": "Select Method"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "FIDO2",
              "displayName": "FIDO2"
            },
            {
              "id": "OATH",
              "displayName": "OATH"
            },
            {
              "id": "PUSH",
              "displayName": "PUSH"
            },
            {
              "id": "OATH+PUSH",
              "displayName": "OATH+PUSH"
            },
            {
              "id": "SMS",
              "displayName": "SMS"
            },
            {
              "id": "VOICE",
              "displayName": "VOICE"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "67338a63-c9f0-4cdd-a88c-79f16a61fde0": {
          "_id": "67338a63-c9f0-4cdd-a88c-79f16a61fde0",
          "_rev": "998523706",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "7eab37ed-c5e4-4c4b-8ff7-23cc9b566952": {
          "_id": "7eab37ed-c5e4-4c4b-8ff7-23cc9b566952",
          "_rev": "1627241030",
          "accountSID": "enterYourSIDHere",
          "authToken": null,
          "channel": "CALL",
          "identifierSharedState": "userIdentifier",
          "serviceSID": "enterYourServiceSIDHere",
          "requestIdentifier": false,
          "_type": {
            "_id": "VerifyAuthSenderNode",
            "name": "Twilio Verify Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        },
        "a4fba46a-cde3-482c-9bae-76e00bbc71f9": {
          "_id": "a4fba46a-cde3-482c-9bae-76e00bbc71f9",
          "_rev": "587110890",
          "tree": "CIAM Deep Fake - Combined OATH And PUSH MFA Methods Registration Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "a6417d64-7a0b-4cb7-9ade-37d6315321ab": {
          "_id": "a6417d64-7a0b-4cb7-9ade-37d6315321ab",
          "_rev": "1131294761",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "acf64f99-641d-459a-b458-7365d7252e9e": {
          "_id": "acf64f99-641d-459a-b458-7365d7252e9e",
          "_rev": "-1731985894",
          "nodes": [
            {
              "_id": "539e1506-c794-409f-bb24-7c6529b4f1a3",
              "nodeType": "AttributeCollectorNode",
              "displayName": "Collect Phone Number"
            },
            {
              "_id": "b9615a88-a62a-4aa4-b543-ac351d703c18",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Telephone Number"
            }
          ],
          "pageDescription": {
            "en": "Enter your mobile phone number, including the country code, to receive authentication passcodes."
          },
          "pageHeader": {
            "en": "Voice"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "afb5c466-6087-4a23-bc3a-c1f3108e65ba": {
          "_id": "afb5c466-6087-4a23-bc3a-c1f3108e65ba",
          "_rev": "138882279",
          "tree": "CIAM Deep Fake - WebAuthn MFA Method Registration Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "aff8737e-22e4-47e2-90c0-38b33bff708c": {
          "_id": "aff8737e-22e4-47e2-90c0-38b33bff708c",
          "_rev": "2021430451",
          "nodes": [
            {
              "_id": "65d3864c-ac21-41b5-8863-1ef8a0525801",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate OTP"
            },
            {
              "_id": "ce02b167-1733-4698-8a68-1de5d955afd1",
              "nodeType": "VerifyAuthCollectorDecisionNode",
              "displayName": "Twilio Verify Collector Decision"
            }
          ],
          "pageDescription": {
            "en": "Enter the passcode you received on your telephone number."
          },
          "pageHeader": {
            "en": "Enter Passcode"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        },
        "b4beab46-1310-4e86-9a3c-4a0ecf8e4309": {
          "_id": "b4beab46-1310-4e86-9a3c-4a0ecf8e4309",
          "_rev": "1852161490",
          "identityResource": "managed/alpha_user",
          "patchAsObject": false,
          "ignoredFields": [],
          "identityAttribute": "userName",
          "_type": {
            "_id": "PatchObjectNode",
            "name": "Patch Object",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "PATCHED",
              "displayName": "Patched"
            },
            {
              "id": "FAILURE",
              "displayName": "Failed"
            }
          ]
        },
        "e1fac123-edd8-469c-9ca6-b1c12fdd9711": {
          "_id": "e1fac123-edd8-469c-9ca6-b1c12fdd9711",
          "_rev": "480157013",
          "script": "8e014e14-d5db-457a-9205-c8dbc0ed9587",
          "outcomes": [
            "true",
            "Error"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id",
            "ciam_allowedMFATypes",
            "mfaDeviceType"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "e45e73e7-b3fe-4ddd-968d-fa67de42c780": {
          "_id": "e45e73e7-b3fe-4ddd-968d-fa67de42c780",
          "_rev": "612793593",
          "accountSID": "enterYourSIDHere",
          "authToken": null,
          "identifierSharedState": "userIdentifier",
          "_type": {
            "_id": "VerifyAuthLookupNode",
            "name": "Twilio Verify Lookup",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "True",
              "displayName": "True"
            },
            {
              "id": "False",
              "displayName": "False"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "f3319c2b-f8d0-48cb-965a-6df8495ca14b": {
          "_id": "f3319c2b-f8d0-48cb-965a-6df8495ca14b",
          "_rev": "-983868325",
          "identifierAttribute": "telephoneNumber",
          "identifierSharedState": "userIdentifier",
          "_type": {
            "_id": "VerifyAuthIdentifierNode",
            "name": "Twilio Identifier",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "True",
              "displayName": "True"
            },
            {
              "id": "False",
              "displayName": "False"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "fd51b535-fac9-47ad-a74f-552af8479dcf": {
          "_id": "fd51b535-fac9-47ad-a74f-552af8479dcf",
          "_rev": "2090240103",
          "identifierAttribute": "telephoneNumber",
          "identifierSharedState": "userIdentifier",
          "_type": {
            "_id": "VerifyAuthIdentifierNode",
            "name": "Twilio Identifier",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "True",
              "displayName": "True"
            },
            {
              "id": "False",
              "displayName": "False"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        }
      },
      "innerNodes": {
        "68e6ee11-3ca4-467b-96ff-d13ce30edb3f": {
          "_id": "68e6ee11-3ca4-467b-96ff-d13ce30edb3f",
          "_rev": "949281533",
          "script": "6ce5e10e-76a0-4172-b0cd-c2dcaeb7ef92",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "oneTimePassword",
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "ae64638e-6326-4da5-8e08-25290bfce735": {
          "_id": "ae64638e-6326-4da5-8e08-25290bfce735",
          "_rev": "758138074",
          "hideCode": true,
          "resendButtonText": "resend",
          "showCancelButton": false,
          "cancelButtonText": "cancel",
          "identifierSharedState": "userIdentifier",
          "nextButtonText": "next",
          "showResendButton": false,
          "_type": {
            "_id": "VerifyAuthCollectorDecisionNode",
            "name": "Twilio Verify Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        },
        "ac60f0e0-7fdc-41ee-bb0a-5715bb351266": {
          "_id": "ac60f0e0-7fdc-41ee-bb0a-5715bb351266",
          "_rev": "551909553",
          "attributesToCollect": [
            "telephoneNumber"
          ],
          "identityAttribute": "userName",
          "validateInputs": true,
          "required": true,
          "_type": {
            "_id": "AttributeCollectorNode",
            "name": "Attribute Collector",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "bfd19d8c-e940-46b9-826e-d827a8880aab": {
          "_id": "bfd19d8c-e940-46b9-826e-d827a8880aab",
          "_rev": "1205635768",
          "script": "5127eaff-3606-4ee4-b9cd-808d193ce838",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "ee142fe2-bcc2-408c-9213-f5bb36498509": {
          "_id": "ee142fe2-bcc2-408c-9213-f5bb36498509",
          "_rev": "617263007",
          "script": "c3d313f3-a85c-40dc-aac9-1ba98a033cab",
          "outcomes": [
            "FIDO2",
            "OATH",
            "PUSH",
            "OATH+PUSH",
            "SMS",
            "VOICE",
            "Error"
          ],
          "outputs": [
            "mfaDeviceType",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_allowedMFATypes"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "FIDO2",
              "displayName": "FIDO2"
            },
            {
              "id": "OATH",
              "displayName": "OATH"
            },
            {
              "id": "PUSH",
              "displayName": "PUSH"
            },
            {
              "id": "OATH+PUSH",
              "displayName": "OATH+PUSH"
            },
            {
              "id": "SMS",
              "displayName": "SMS"
            },
            {
              "id": "VOICE",
              "displayName": "VOICE"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "539e1506-c794-409f-bb24-7c6529b4f1a3": {
          "_id": "539e1506-c794-409f-bb24-7c6529b4f1a3",
          "_rev": "1912591366",
          "attributesToCollect": [
            "telephoneNumber"
          ],
          "identityAttribute": "userName",
          "validateInputs": true,
          "required": true,
          "_type": {
            "_id": "AttributeCollectorNode",
            "name": "Attribute Collector",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "b9615a88-a62a-4aa4-b543-ac351d703c18": {
          "_id": "b9615a88-a62a-4aa4-b543-ac351d703c18",
          "_rev": "-992663846",
          "script": "5127eaff-3606-4ee4-b9cd-808d193ce838",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "65d3864c-ac21-41b5-8863-1ef8a0525801": {
          "_id": "65d3864c-ac21-41b5-8863-1ef8a0525801",
          "_rev": "-2389737",
          "script": "6ce5e10e-76a0-4172-b0cd-c2dcaeb7ef92",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "ce02b167-1733-4698-8a68-1de5d955afd1": {
          "_id": "ce02b167-1733-4698-8a68-1de5d955afd1",
          "_rev": "1890180785",
          "hideCode": true,
          "resendButtonText": "resend",
          "showCancelButton": false,
          "cancelButtonText": "cancel",
          "identifierSharedState": "userIdentifier",
          "nextButtonText": "next",
          "showResendButton": false,
          "_type": {
            "_id": "VerifyAuthCollectorDecisionNode",
            "name": "Twilio Verify Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        }
      },
      "scripts": {
        "86e5bf13-4882-4032-8fb7-f75dd7fa7b82": {
          "_id": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "name": "OOTB - Set Invalid Code Error Message Script",
          "description": "Script to set invalid code error message",
          "script": "\"/*\\n * Invalid Code Error Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * Sets an \\\"Invalid Code\\\" error message in shared state, which can be displayed on the last UI Node.\\n *\\n * Script Inputs  : null  \\n *\\n * Script Outputs :  \\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Error message for invalid code  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message  \\n *    - \\\"errorDetails\\\" (String) - Debugging details  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Error message set)  \\n *    - \\\"Error\\\" (Execution failure)  \\n */\\n\\ntry {\\n    // Set the below error message in shared state, to display on the last UI Node\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"Invalid Code\\\");\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507163,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090711974,
          "evaluatorVersion": "2.0"
        },
        "8e014e14-d5db-457a-9205-c8dbc0ed9587": {
          "_id": "8e014e14-d5db-457a-9205-c8dbc0ed9587",
          "name": "OOTB - Set MFA Device In User's Profile Script",
          "description": "Script to register MFA device/method in user's profile, script should be executed after verification of a respective MFA device/method",
          "script": "\"/*\\n * MFA Enrollment Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * This script handles MFA device enrollment based on allowed MFA types and user selection.  \\n * It may auto-enroll \\\"EMAIL\\\" as an MFA method if allowed.  \\n *\\n * Script Inputs  :  \\n *    - \\\"_id\\\" (String) - User ID  \\n *    - \\\"ciam_allowedMFATypes\\\" (Array) - List of allowed MFA methods  \\n *    - \\\"mfaDeviceType\\\" (String) - Selected MFA device type for enrollment  \\n *\\n * Script Outputs :  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (MFA enrollment successful)  \\n *    - \\\"Error\\\" (Unexpected execution failure)  \\n *\\n * Caution:  \\n *    - This script may auto-enroll \\\"EMAIL\\\" as an MFA method if allowed.  \\n *    - Admins managing WebAuthn should review FIDO2 registration behavior.  \\n */\\n\\ntry {\\n    // Retrieve userId and allowedMFATypes from shared state\\n    var userId = nodeState.get(\\\"_id\\\");\\n    var allowedMFAMethods = nodeState.get(\\\"ciam_allowedMFATypes\\\");\\n    \\n    // Read the user's MFA devices from the directory\\n    var mfaDevicesObj = openidm.read(\\\"managed/alpha_user/\\\" + userId, null, [\\\"custom_mfaDevices\\\"]);\\n    var mfaDevices = (mfaDevicesObj && mfaDevicesObj.custom_mfaDevices) ? mfaDevicesObj.custom_mfaDevices : [];\\n    \\n    // Parse the MFA devices into a usable array\\n    var usableMFADevices = [];\\n    mfaDevices.forEach(device => {\\n        usableMFADevices.push(device);\\n    });\\n    \\n    var emailMFAAllowed = false;\\n    \\n    // Check if EMAIL MFA is allowed\\n    allowedMFAMethods.forEach(method => {\\n        if (method === \\\"EMAIL\\\") emailMFAAllowed = true;\\n    });\\n    \\n    // Caution: By default, add EMAIL to the MFA devices list if it's allowed and not already present\\n    if (emailMFAAllowed && !usableMFADevices.includes(\\\"EMAIL\\\")) {\\n        usableMFADevices.push(\\\"EMAIL\\\");\\n    }\\n    \\n    // Get the selected device type from shared state\\n    var selectedDevice = nodeState.get(\\\"mfaDeviceType\\\");\\n    \\n    // Handle device registration based on the selected device type\\n    // If Admin wants a single FIDO2 device that a user can register and authenticate with, \\n    // change the node configuration in the WebAuthn Inner Journey and the below condition\\n    if (!usableMFADevices.includes(selectedDevice) || selectedDevice === \\\"FIDO2\\\") {\\n        // Handle combined MFA registration for OATH+PUSH if both are unregistered\\n        if (selectedDevice === \\\"OATH+PUSH\\\") {\\n            if(!usableMFADevices.includes(\\\"OATH\\\") && !usableMFADevices.includes(\\\"PUSH\\\")) {\\n                usableMFADevices.push(\\\"OATH\\\");\\n                usableMFADevices.push(\\\"PUSH\\\");\\n            } else {\\n                // OATH or PUSH device already registered for user, this option can't be use to register device again\\n                // If either of OATH or PUSH is registered and user want to register the other method from OATH/PUSH, \\n                // Use separate OATH and PUSH paths for registration\\n                nodeState.putShared(\\\"errorMessage\\\", \\\"An unexpected error occurred, please contact support team.\\\");\\n            }\\n        } else {\\n            usableMFADevices.push(selectedDevice);\\n        }\\n    }\\n    \\n    // Update the user's custom_mfaDevices attribute\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{\\\"operation\\\":\\\"replace\\\", \\\"field\\\":\\\"/custom_mfaDevices\\\", \\\"value\\\":usableMFADevices}]);\\n\\n    // Update the custom_latestMFADevice variable to store the selected device, it will be used in the notification template\\n    var latestMFADevice = selectedDevice === \\\"OATH+PUSH\\\" ? \\\"OATH & Push\\\" : selectedDevice;\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{\\\"operation\\\":\\\"replace\\\", \\\"field\\\":\\\"/custom_latestMFADevice\\\", \\\"value\\\":latestMFADevice}]);\\n    \\n    // Set the outcome to true\\n    action.goTo(\\\"true\\\");   \\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507983,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090712073,
          "evaluatorVersion": "2.0"
        },
        "6ce5e10e-76a0-4172-b0cd-c2dcaeb7ef92": {
          "_id": "6ce5e10e-76a0-4172-b0cd-c2dcaeb7ef92",
          "name": "OOTB - Validate OTP Input Script",
          "description": "Script to validate OTP input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"/*\\n * One-Time Password (OTP) Input Validation Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1 \\n * Date    : 03/28/2025  \\n *\\n * This script enforces input validation rules on OTP fields and ensures that only valid codes can be submitted.\\n * It dynamically applies constraints based on OTP length and handles UI updates.\\n *\\n * Script Inputs  :  \\n *    - \\\"oneTimePassword\\\" (String) - OTP generated by a prior node (HOTP Generator, Twilio, etc.).  \\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Error message displayed when an incorrect OTP is entered.  \\n *\\n * Script Outputs :  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Cleared out to reset error states  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Validation script injected successfully)  \\n *    - \\\"Error\\\" (Unexpected execution failure)  \\n *\\n * Note:  \\n *    - If HOTP Generator node is used prior, \\\"oneTimePassword\\\" will be a transient state property,  \\n *      make sure to make it available in script inputs.  \\n *    - If the OTP is generated by Twilio nodes, the default length is set to 6 and only digits are considered.  \\n *      Modify this if necessary.  \\n */\\n\\ntry {\\n    /**\\n     * Returns a JavaScript string that:\\n     *  - Sets the max length for OTP input fields.\\n     *  - Enforces numeric-only input using pattern matching.\\n     *  - Disables the submit button until a valid OTP is entered.\\n     */\\n    function validateInput(otpLength) {\\n        return String(\\\" \\\\n\\\\\\n                    var otpLength = \\\" + otpLength + \\\" \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                    if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                    // Validate the passcode \\\\n\\\\\\n                    function validateCode() { \\\\n\\\\\\n                        const passcode = document.querySelectorAll('input[data-vv-as=\\\\\\\"One Time Password\\\\\\\"]')[0] || document.querySelectorAll('input[data-vv-as=\\\\\\\"Code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (passcode) { \\\\n\\\\\\n                            // Set input properties to prevent user tampering \\\\n\\\\\\n                            passcode.setAttribute('maxlength', otpLength); \\\\n\\\\\\n                            passcode.setAttribute('pattern', '[0-9]{' + otpLength + '}'); \\\\n\\\\\\n                            passcode.setAttribute('inputmode', 'numeric'); \\\\n\\\\\\n                            // Check if the input is exactly 6 digits long and numeric \\\\n\\\\\\n                            const isValidCode = new RegExp('^[0-9]{' + otpLength + '}$').test(passcode.value); \\\\n\\\\\\n                            submitBtn.disabled = !isValidCode; \\\\n\\\\\\n                            return isValidCode; \\\\n\\\\\\n                        } \\\\n\\\\\\n                        return false; \\\\n\\\\\\n                    }; \\\\n\\\\\\n                    \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        const passcode = document.querySelectorAll('input[data-vv-as=\\\\\\\"One Time Password\\\\\\\"]')[0] || document.querySelectorAll('input[data-vv-as=\\\\\\\"Code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (passcode && submitBtn) { \\\\n\\\\\\n                            passcode.addEventListener('input', validateCode); \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                if (!validateCode()) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    // For HOTP and Twilio OTP collector nodes, if either of the element is present, initialize validation \\\\n\\\\\\n                    if (document.querySelectorAll('input[data-vv-as=\\\\\\\"One Time Password\\\\\\\"]')[0] || document.querySelectorAll('input[data-vv-as=\\\\\\\"Code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                    else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                    } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    // Retrieve error message if the user entered an invalid OTP previously\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n    \\n    // Reset the error message for the next attempt\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n\\n    // Get \\\"oneTimePassword\\\" shared in transient state by the HOTP Generator node or default it to 6\\n    var otpLength = nodeState.get(\\\"oneTimePassword\\\") ? nodeState.get(\\\"oneTimePassword\\\").length : 6;\\n    \\n    if (callbacks.isEmpty()) {\\n        // Display error message if the previous OTP attempt was invalid\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) {\\n            callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        }\\n        \\n        // Inject validation script into the UI\\n        callbacksBuilder.scriptTextOutputCallback(validateInput(otpLength));\\n    }\\n\\n    // Proceed to success path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141508125,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090712072,
          "evaluatorVersion": "2.0"
        },
        "5127eaff-3606-4ee4-b9cd-808d193ce838": {
          "_id": "5127eaff-3606-4ee4-b9cd-808d193ce838",
          "name": "OOTB - Validate Name, Email Address, and Telephone Number Script",
          "description": "Script to validate name and email address, sets constraints",
          "script": "\"/*\\n * Form Input Validation Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * This script injects JavaScript to enforce input validation and length constraints\\n * on First Name, Last Name, and Email Address fields before submission.\\n *\\n * Script Inputs  : null  \\n *\\n * Script Outputs :  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Validation script injected successfully)  \\n *    - \\\"Error\\\" (Unexpected execution failure)  \\n */\\n\\ntry {\\n    /**\\n     * Returns a JavaScript string that:\\n     *  - Sets max length (255) for input fields.\\n     *  - Disables the submit button until all fields are filled.\\n     *  - Ensures max length is enforced, even if modified in the browser.\\n     */\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n            const firstName = document.querySelector('input[data-vv-as=\\\\\\\"First Name\\\\\\\"]'); \\\\n\\\\\\n            const lastName = document.querySelector('input[data-vv-as=\\\\\\\"Last Name\\\\\\\"]'); \\\\n\\\\\\n            const emailAddress = document.querySelector('input[data-vv-as=\\\\\\\"Email Address\\\\\\\"]'); \\\\n\\\\\\n            const telephoneNumber = document.querySelector('input[data-vv-as=\\\\\\\"Telephone Number\\\\\\\"]'); \\\\n\\\\\\n            const submitBtn = document.querySelector('button[type=\\\\\\\"submit\\\\\\\"]'); \\\\n\\\\\\n            \\\\n\\\\\\n            if (firstName) firstName.setAttribute('maxlength', '255'); \\\\n\\\\\\n            if (lastName) lastName.setAttribute('maxlength', '255'); \\\\n\\\\\\n            if (emailAddress) emailAddress.setAttribute('maxlength', '255'); \\\\n\\\\\\n            if (telephoneNumber) telephoneNumber.setAttribute('maxlength', '15'); \\\\n\\\\\\n            \\\\n\\\\\\n            const hasFields = firstName || lastName || emailAddress || telephoneNumber; \\\\n\\\\\\n            if (hasFields && submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n            \\\\n\\\\\\n            function validateFields() { \\\\n\\\\\\n                const phoneRegex = /^\\\\\\\\+?([0-9\\\\\\\\- \\\\\\\\(\\\\\\\\)])*$/; \\\\n\\\\\\n                const isFirstNameValid = firstName ? firstName.value.trim().length > 0 : true; \\\\n\\\\\\n                const isLastNameValid = lastName ? lastName.value.trim().length > 0 : true; \\\\n\\\\\\n                const isEmailValid = emailAddress ? emailAddress.value.trim().length > 0 : true; \\\\n\\\\\\n                const isPhoneValid = telephoneNumber ? (telephoneNumber.value.trim().length > 0 && phoneRegex.test(telephoneNumber.value.trim())) : true; \\\\n\\\\\\n                \\\\n\\\\\\n                if (submitBtn) submitBtn.disabled = !(isFirstNameValid && isLastNameValid && isEmailValid && isPhoneValid); \\\\n\\\\\\n            } \\\\n\\\\\\n            \\\\n\\\\\\n            if (submitBtn) { \\\\n\\\\\\n                submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                    if (firstName && firstName.value.length > 255 || \\\\n\\\\\\n                        lastName && lastName.value.length > 255 || \\\\n\\\\\\n                        emailAddress && emailAddress.value.length > 255 || \\\\n\\\\\\n                        telephoneNumber && (telephoneNumber.value.length > 15 || !/^\\\\\\\\+?([0-9\\\\\\\\- \\\\\\\\(\\\\\\\\)])*$/.test(telephoneNumber.value.trim()))) { \\\\n\\\\\\n                        event.preventDefault(); \\\\n\\\\\\n                        submitBtn.disabled = true; \\\\n\\\\\\n                    } \\\\n\\\\\\n                    validateFields(); \\\\n\\\\\\n                }); \\\\n\\\\\\n            } \\\\n\\\\\\n            \\\\n\\\\\\n            if (firstName) firstName.addEventListener('input', validateFields); \\\\n\\\\\\n            if (lastName) lastName.addEventListener('input', validateFields); \\\\n\\\\\\n            if (emailAddress) emailAddress.addEventListener('input', validateFields); \\\\n\\\\\\n            if (telephoneNumber) telephoneNumber.addEventListener('input', validateFields); \\\\n\\\\\\n        \\\");\\n    }\\n    \\n    if (callbacks.isEmpty()) {                \\n        // Inject the validation script if no callbacks have been executed\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n\\n    // Proceed to success path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141508224,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744092468045,
          "evaluatorVersion": "2.0"
        },
        "c3d313f3-a85c-40dc-aac9-1ba98a033cab": {
          "_id": "c3d313f3-a85c-40dc-aac9-1ba98a033cab",
          "name": "OOTB - Get Available MFA Methods Script",
          "description": "Script to fetch available MFA methods that a user can register with",
          "script": "\"/*\\n * MFA Device Selection Script\\n * \\n * Author  : Ping Identity  \\n * Version : 1.1 \\n * Date    : 03/28/2025  \\n * \\n * Determines the MFA device type to register based on available options and user selection.\\n * \\n * Script Inputs:\\n *    - \\\"ciam_allowedMFATypes\\\" (Array) - Permitted MFA methods.\\n * \\n * Script Outputs:\\n *    - \\\"mfaDeviceType\\\" (String) - Selected MFA device.\\n *    - \\\"errorMessage\\\"  (String) - User-friendly error message if an error occurs.\\n *    - \\\"errorDetails\\\"  (String) - Detailed error message for debugging.\\n * \\n * Outcomes:\\n *    - \\\"true\\\"  (Success)\\n *    - \\\"Error\\\" (Failure)\\n */\\n\\ntry {\\n    // Retrieve the list of allowed MFA methods from shared state\\n    var allowedMFAMethods = nodeState.get(\\\"ciam_allowedMFATypes\\\");\\n\\n    // Initialize an array to store MFA methods that can be used\\n    var usableMFAMethods = [];\\n\\n    // Populate the usable MFA methods array\\n    allowedMFAMethods.forEach(device => {\\n        usableMFAMethods.push(device);\\n    });\\n\\n    // Remove \\\"EMAIL\\\" from the list as it is verified in the parent journey\\n    if (usableMFAMethods.includes(\\\"EMAIL\\\")) {\\n        var index = usableMFAMethods.indexOf(\\\"EMAIL\\\");\\n        if (index > -1) usableMFAMethods.splice(index, 1);\\n    }\\n\\n    // Add \\\"OATH+PUSH\\\" for combined registration if both OATH and Push methods are available\\n    if (usableMFAMethods.includes(\\\"OATH\\\") && usableMFAMethods.includes(\\\"PUSH\\\")) {\\n        usableMFAMethods.push(\\\"OATH+PUSH\\\");\\n    }\\n\\n    if (usableMFAMethods.length === 1) {\\n        // If only one MFA method is available, auto-select it\\n        var selectedDevice = usableMFAMethods[0] || null;\\n\\n        if (!selectedDevice) {\\n            // Handle unexpected errors\\n            nodeState.putShared(\\\"errorMessage\\\", \\\"An unexpected error occurred. Please contact support.\\\");\\n            action.goTo(\\\"Error\\\");\\n        } else {\\n            nodeState.putShared(\\\"mfaDeviceType\\\", selectedDevice);\\n            action.goTo(selectedDevice);\\n        }\\n    } else {\\n        // Handle user selection when multiple MFA options exist\\n        if (callbacks.isEmpty()) {\\n            // Display MFA device selection prompt\\n            callbacksBuilder.choiceCallback(\\\"Select an MFA device\\\", usableMFAMethods, 0, false);\\n        } else {\\n            // Process user's selected MFA device\\n            var index = callbacks.getChoiceCallbacks().get(0)[0];\\n            var selectedDevice = usableMFAMethods[index] || null;\\n\\n            if (!selectedDevice) {\\n                nodeState.putShared(\\\"errorMessage\\\", \\\"An unexpected error occurred. Please contact support.\\\");\\n                action.goTo(\\\"Error\\\");\\n            } else {\\n                nodeState.putShared(\\\"mfaDeviceType\\\", selectedDevice);\\n                action.goTo(selectedDevice);\\n            }\\n        }\\n    }\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141508295,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090712097,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {
        "deviceRegistration": {
          "_id": "emailTemplate/deviceRegistration",
          "advancedEditor": true,
          "defaultLocale": "en",
          "description": "This will be sent to users when a new MFA device is registered.",
          "displayName": "Device Registration",
          "enabled": true,
          "from": "",
          "html": {
            "en": ""
          },
          "message": {
            "en": "<div style=\"display:block;text-align:center;font-family:'Arial',\n  sans-serif;background-color:#f7f7f7;border:1px solid #e3e3e3;border-radius:10px;box-shadow:0 4px 8px rgba(0, 0, 0, 0.1);width:400px;margin:20px 20px;padding:30px 20px\">\n  <img src=\"https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png\" alt=\"Company Logo\" style=\"height:65px;margin-bottom:10px\" />\n  <h2 style=\"color:#333;font-size:24px;margin:20px 0\">Sign On Device Added </h2>\n  <p style=\"margin:20px 0 20px;font-size:16px;color:#555\">The following device was successfully added to your\n    account and can be used to authenticate. </p>\n  <p style=\"margin:20px 0 20px;font-size:20px;color:#222\">{{object.custom_latestMFADevice}}</p>\n  <p style=\"margin:20px 0 20px;font-size:16px;color:#555\">If you added this device, no further action is needed. </p>\n  <p style=\"margin:20px 0 20px;font-size:16px;color:#555\">If this device wasn't added by you, consider resetting\n    your password to secure your account. </p>\n</div>\n"
          },
          "mimeType": "text/html",
          "styles": "body {\n   background-color: #324054;\n   color: #455469;\n   padding: 60px;\n   text-align: center \n}\n a {\n   text-decoration: none;\n   color: #109cf1;\n}\n .content {\n   background-color: #fff;\n   border-radius: 4px;\n   margin: 0 auto;\n   padding: 48px;\n   width: 235px \n}\n",
          "subject": {
            "en": "New authentication device added"
          },
          "templateId": "deviceRegistration"
        }
      },
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "CIAM Deep Fake - Threat Detection Inner Journey": {
      "tree": {
        "_id": "CIAM Deep Fake - Threat Detection Inner Journey",
        "_rev": "892421891",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Deep Fake\"]"
        },
        "entryNodeId": "447f33ff-9d19-46dd-834f-d01139c11449",
        "innerTreeOnly": false,
        "nodes": {
          "1bd432d1-a11e-4874-a746-5112fdaaad61": {
            "connections": {
              "false": "d4a0b08c-d595-4eec-b478-683543e8eb1e",
              "true": "3a4372aa-ec0a-4302-b7c1-f42c95b84acc"
            },
            "displayName": "Account Active Decision",
            "nodeType": "AccountActiveDecisionNode",
            "x": 570,
            "y": 818.015625
          },
          "2e27a449-4850-4457-8632-cefb19bf5ba3": {
            "connections": {
              "false": "d4a0b08c-d595-4eec-b478-683543e8eb1e",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "PingOne Protect Initialize",
            "nodeType": "product-PingOneProtectInitializeNode",
            "x": 562,
            "y": 81.03125
          },
          "3a4372aa-ec0a-4302-b7c1-f42c95b84acc": {
            "connections": {
              "outcome": "7dba19fb-1c05-4126-897a-7b1ba57b1031"
            },
            "displayName": "Disable Account",
            "nodeType": "AccountLockoutNode",
            "x": 582,
            "y": 1015.03125
          },
          "3f3b079a-8fe1-4e66-a4d8-1202e64828d0": {
            "connections": {
              "false": "d4a0b08c-d595-4eec-b478-683543e8eb1e",
              "true": "efe571f2-1781-4fb6-bbb8-60951cd98f1e"
            },
            "displayName": "Account Active Decision",
            "nodeType": "AccountActiveDecisionNode",
            "x": 1060,
            "y": 373.015625
          },
          "447f33ff-9d19-46dd-834f-d01139c11449": {
            "connections": {
              "eval": "e674eee7-c16e-465c-aa6a-f75dd376864d",
              "init": "2e27a449-4850-4457-8632-cefb19bf5ba3"
            },
            "displayName": "P1 Protect Action?",
            "nodeType": "ScriptedDecisionNode",
            "x": 184,
            "y": 456.03125
          },
          "719c65bf-6895-4449-86ae-16fa580bbee8": {
            "connections": {
              "AITM_MITIGATION": "1bd432d1-a11e-4874-a746-5112fdaaad61",
              "BOT_MITIGATION": "1bd432d1-a11e-4874-a746-5112fdaaad61",
              "TEMP_EMAIL_MITIGATION": "1bd432d1-a11e-4874-a746-5112fdaaad61",
              "clientError": "d4a0b08c-d595-4eec-b478-683543e8eb1e",
              "exceed": "d4a0b08c-d595-4eec-b478-683543e8eb1e",
              "failure": "d4a0b08c-d595-4eec-b478-683543e8eb1e",
              "high": "3f3b079a-8fe1-4e66-a4d8-1202e64828d0",
              "low": "3f3b079a-8fe1-4e66-a4d8-1202e64828d0",
              "medium": "3f3b079a-8fe1-4e66-a4d8-1202e64828d0"
            },
            "displayName": "Auth: PingOne Protect Evaluation",
            "nodeType": "product-PingOneProtectEvaluationNode",
            "x": 558,
            "y": 419.03125
          },
          "7dba19fb-1c05-4126-897a-7b1ba57b1031": {
            "connections": {
              "EMAIL_NOT_SENT": "d4a0b08c-d595-4eec-b478-683543e8eb1e",
              "EMAIL_SENT": "d4a0b08c-d595-4eec-b478-683543e8eb1e"
            },
            "displayName": "Send Account Disabled Email",
            "nodeType": "EmailTemplateNode",
            "x": 848,
            "y": 1007.03125
          },
          "90b608c8-283c-4777-8520-dc1f7800202a": {
            "connections": {
              "Authentication": "719c65bf-6895-4449-86ae-16fa580bbee8",
              "Registration": "ccef184a-b317-4b34-90a4-e6139300fe98"
            },
            "displayName": "Determine Flow Type",
            "nodeType": "ScriptedDecisionNode",
            "x": 172.14285714285714,
            "y": 1043.236607142857
          },
          "ae0d7c3c-2977-48d0-89e2-4474c2a3f10a": {
            "connections": {
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Set Protect Params In Shared State",
            "nodeType": "ScriptedDecisionNode",
            "x": 1650,
            "y": 699.921875
          },
          "cc923ca3-f3ad-4535-b36f-ff65aec4363e": {
            "connections": {
              "true": "90b608c8-283c-4777-8520-dc1f7800202a"
            },
            "displayName": "Set UserId and Username For Protect",
            "nodeType": "ScriptedDecisionNode",
            "x": 147,
            "y": 878.015625
          },
          "ccef184a-b317-4b34-90a4-e6139300fe98": {
            "connections": {
              "AITM_MITIGATION": "d4a0b08c-d595-4eec-b478-683543e8eb1e",
              "BOT_MITIGATION": "d4a0b08c-d595-4eec-b478-683543e8eb1e",
              "TEMP_EMAIL_MITIGATION": "d4a0b08c-d595-4eec-b478-683543e8eb1e",
              "clientError": "d4a0b08c-d595-4eec-b478-683543e8eb1e",
              "exceed": "d4a0b08c-d595-4eec-b478-683543e8eb1e",
              "failure": "d4a0b08c-d595-4eec-b478-683543e8eb1e",
              "high": "ae0d7c3c-2977-48d0-89e2-4474c2a3f10a",
              "low": "ae0d7c3c-2977-48d0-89e2-4474c2a3f10a",
              "medium": "ae0d7c3c-2977-48d0-89e2-4474c2a3f10a"
            },
            "displayName": "Reg: PingOne Protect Evaluation",
            "nodeType": "product-PingOneProtectEvaluationNode",
            "x": 573,
            "y": 1228.03125
          },
          "d4a0b08c-d595-4eec-b478-683543e8eb1e": {
            "connections": {
              "outcome": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "displayName": "Update P1 Protect Eval Failure",
            "nodeType": "product-PingOneProtectResultNode",
            "x": 1561,
            "y": 999.03125
          },
          "e674eee7-c16e-465c-aa6a-f75dd376864d": {
            "connections": {
              "false": "cc923ca3-f3ad-4535-b36f-ff65aec4363e",
              "true": "cc923ca3-f3ad-4535-b36f-ff65aec4363e"
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 176.15625,
            "y": 686.015625
          },
          "efe571f2-1781-4fb6-bbb8-60951cd98f1e": {
            "connections": {
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Move RISK valuation From Transient to Shared State",
            "nodeType": "ScriptedDecisionNode",
            "x": 1518,
            "y": 418.015625
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 2133,
            "y": 429
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 2123,
            "y": 1004
          },
          "startNode": {
            "x": 32,
            "y": 210
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "1bd432d1-a11e-4874-a746-5112fdaaad61": {
          "_id": "1bd432d1-a11e-4874-a746-5112fdaaad61",
          "_rev": "-1180068938",
          "_type": {
            "_id": "AccountActiveDecisionNode",
            "name": "Account Active Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "2e27a449-4850-4457-8632-cefb19bf5ba3": {
          "_id": "2e27a449-4850-4457-8632-cefb19bf5ba3",
          "_rev": "342479848",
          "deviceAttributesToIgnore": [],
          "enableTrust": false,
          "disableTags": false,
          "behavioralDataCollection": true,
          "consoleLogEnabled": false,
          "deviceKeyRsyncIntervals": 14,
          "disableHub": false,
          "lazyMetadata": false,
          "_type": {
            "_id": "product-PingOneProtectInitializeNode",
            "name": "PingOne Protect Initialize",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "3a4372aa-ec0a-4302-b7c1-f42c95b84acc": {
          "_id": "3a4372aa-ec0a-4302-b7c1-f42c95b84acc",
          "_rev": "1248065930",
          "lockAction": "LOCK",
          "_type": {
            "_id": "AccountLockoutNode",
            "name": "Account Lockout",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "3f3b079a-8fe1-4e66-a4d8-1202e64828d0": {
          "_id": "3f3b079a-8fe1-4e66-a4d8-1202e64828d0",
          "_rev": "-1562143978",
          "_type": {
            "_id": "AccountActiveDecisionNode",
            "name": "Account Active Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "447f33ff-9d19-46dd-834f-d01139c11449": {
          "_id": "447f33ff-9d19-46dd-834f-d01139c11449",
          "_rev": "528449857",
          "script": "26f094e4-9f4b-4f01-8759-28ee8c7cbb8b",
          "outcomes": [
            "init",
            "eval"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "p1ProtectAction"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "init",
              "displayName": "init"
            },
            {
              "id": "eval",
              "displayName": "eval"
            }
          ]
        },
        "719c65bf-6895-4449-86ae-16fa580bbee8": {
          "_id": "719c65bf-6895-4449-86ae-16fa580bbee8",
          "_rev": "-83916633",
          "flowType": "AUTHENTICATION",
          "pauseBehavioralData": true,
          "storeEvaluateResult": true,
          "deviceSharingType": "SHARED",
          "scoreThreshold": "300",
          "userId": "protectUserId",
          "username": "protectUsername",
          "userType": "EXTERNAL",
          "recommendedActions": [
            "BOT_MITIGATION",
            "AITM_MITIGATION",
            "TEMP_EMAIL_MITIGATION"
          ],
          "_type": {
            "_id": "product-PingOneProtectEvaluationNode",
            "name": "PingOne Protect Evaluation",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "high",
              "displayName": "High"
            },
            {
              "id": "medium",
              "displayName": "Medium"
            },
            {
              "id": "low",
              "displayName": "Low"
            },
            {
              "id": "exceed",
              "displayName": "Exceeds Score Threshold"
            },
            {
              "id": "failure",
              "displayName": "Failure"
            },
            {
              "id": "BOT_MITIGATION",
              "displayName": "BOT_MITIGATION"
            },
            {
              "id": "AITM_MITIGATION",
              "displayName": "AITM_MITIGATION"
            },
            {
              "id": "TEMP_EMAIL_MITIGATION",
              "displayName": "TEMP_EMAIL_MITIGATION"
            },
            {
              "id": "clientError",
              "displayName": "ClientError"
            }
          ]
        },
        "7dba19fb-1c05-4126-897a-7b1ba57b1031": {
          "_id": "7dba19fb-1c05-4126-897a-7b1ba57b1031",
          "_rev": "-431843274",
          "emailTemplateName": "accountdisabledResetPwd",
          "identityAttribute": "userName",
          "emailAttribute": "mail",
          "_type": {
            "_id": "EmailTemplateNode",
            "name": "Email Template Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "EMAIL_SENT",
              "displayName": "Email Sent"
            },
            {
              "id": "EMAIL_NOT_SENT",
              "displayName": "Email Not Sent"
            }
          ]
        },
        "90b608c8-283c-4777-8520-dc1f7800202a": {
          "_id": "90b608c8-283c-4777-8520-dc1f7800202a",
          "_rev": "-621947789",
          "script": "26be214b-1567-4632-a3c9-b64437c8fafd",
          "outcomes": [
            "Authentication",
            "Registration"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "flowType"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Authentication",
              "displayName": "Authentication"
            },
            {
              "id": "Registration",
              "displayName": "Registration"
            }
          ]
        },
        "ae0d7c3c-2977-48d0-89e2-4474c2a3f10a": {
          "_id": "ae0d7c3c-2977-48d0-89e2-4474c2a3f10a",
          "_rev": "773261697",
          "script": "97707ce0-3974-4ee5-8cef-6de83bf0e757",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "objectAttributes",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "PingOneProtectEvaluationNode.RISK",
            "objectAttributes"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "cc923ca3-f3ad-4535-b36f-ff65aec4363e": {
          "_id": "cc923ca3-f3ad-4535-b36f-ff65aec4363e",
          "_rev": "1526542403",
          "script": "277c173b-7473-4609-a31a-f0631ae9df4d",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "protectUserId",
            "protectUsername",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id",
            "username"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "ccef184a-b317-4b34-90a4-e6139300fe98": {
          "_id": "ccef184a-b317-4b34-90a4-e6139300fe98",
          "_rev": "-1195624913",
          "flowType": "REGISTRATION",
          "pauseBehavioralData": true,
          "storeEvaluateResult": true,
          "deviceSharingType": "SHARED",
          "scoreThreshold": "300",
          "userId": "protectUserId",
          "username": "protectUsername",
          "userType": "EXTERNAL",
          "recommendedActions": [
            "BOT_MITIGATION",
            "AITM_MITIGATION",
            "TEMP_EMAIL_MITIGATION"
          ],
          "_type": {
            "_id": "product-PingOneProtectEvaluationNode",
            "name": "PingOne Protect Evaluation",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "high",
              "displayName": "High"
            },
            {
              "id": "medium",
              "displayName": "Medium"
            },
            {
              "id": "low",
              "displayName": "Low"
            },
            {
              "id": "exceed",
              "displayName": "Exceeds Score Threshold"
            },
            {
              "id": "failure",
              "displayName": "Failure"
            },
            {
              "id": "BOT_MITIGATION",
              "displayName": "BOT_MITIGATION"
            },
            {
              "id": "AITM_MITIGATION",
              "displayName": "AITM_MITIGATION"
            },
            {
              "id": "TEMP_EMAIL_MITIGATION",
              "displayName": "TEMP_EMAIL_MITIGATION"
            },
            {
              "id": "clientError",
              "displayName": "ClientError"
            }
          ]
        },
        "d4a0b08c-d595-4eec-b478-683543e8eb1e": {
          "_id": "d4a0b08c-d595-4eec-b478-683543e8eb1e",
          "_rev": "1341794902",
          "status": "FAILED",
          "_type": {
            "_id": "product-PingOneProtectResultNode",
            "name": "PingOne Protect Result",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "e674eee7-c16e-465c-aa6a-f75dd376864d": {
          "_id": "e674eee7-c16e-465c-aa6a-f75dd376864d",
          "_rev": "1278544974",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "efe571f2-1781-4fb6-bbb8-60951cd98f1e": {
          "_id": "efe571f2-1781-4fb6-bbb8-60951cd98f1e",
          "_rev": "1163902230",
          "script": "f8dc30d1-02e2-45b2-aa34-06d75c7801db",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "PingOneProtectEvaluationNode.RISK"
          ],
          "inputs": [
            "PingOneProtectEvaluationNode.RISK"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        }
      },
      "innerNodes": {},
      "scripts": {
        "26f094e4-9f4b-4f01-8759-28ee8c7cbb8b": {
          "_id": "26f094e4-9f4b-4f01-8759-28ee8c7cbb8b",
          "name": "OOTB - P1 Protect Action Script",
          "description": "Script to get action to be taken in Threat Detection Journey",
          "script": "\"/*\\n * P1 Protect Action Handler\\n * \\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n * \\n * This script determines the Protect action state for risk evaluation.\\n * \\n * Script Inputs:\\n *    - \\\"p1ProtectAction\\\" (String) - Action state for Protect.\\n * \\n * Script Outputs:\\n *    - \\\"errorMessage\\\"  (String) - Error message on failure.\\n *    - \\\"errorDetails\\\"  (String) - Detailed error information.\\n * \\n * Outcomes:\\n *    - \\\"init\\\" (Initialize Risk SDK signals)\\n *    - \\\"eval\\\" (Evaluate Risk SDK signals)\\n */\\n\\ntry {\\n    // Only two state variables are expected to be put in shared state in the main journey: \\n    // \\\"init\\\" -> To initialize the P1 Protect to collect Risk SDK signals & \\n    // \\\"eval\\\" -> To send the Risk SDK signals to protect and evalute them\\n    var p1ProtectAction = nodeState.get(\\\"p1ProtectAction\\\");\\n    \\n    // Determine the outcome based on the action state\\n    if (p1ProtectAction === \\\"init\\\") {\\n        action.goTo(\\\"init\\\");\\n    } else {\\n        action.goTo(\\\"eval\\\");\\n    }\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507737,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090712004,
          "evaluatorVersion": "2.0"
        },
        "26be214b-1567-4632-a3c9-b64437c8fafd": {
          "_id": "26be214b-1567-4632-a3c9-b64437c8fafd",
          "name": "OOTB - P1 Protect Extract Flow Type Script",
          "description": "Script to extract flow type for Threat Detection Journey",
          "script": "\"/*\\n * Flow Type Handler For Protect Inner Journey\\n * \\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n * \\n * This script determines the flow type and directs the journey accordingly.\\n * \\n * Script Inputs:\\n *    - \\\"flowType\\\" (String) - Type of flow: Registration or Authentication.\\n * \\n * Script Outputs:\\n *    - \\\"errorMessage\\\"  (String) - Error message on failure.\\n *    - \\\"errorDetails\\\"  (String) - Detailed error information.\\n * \\n * Outcomes:\\n *    - \\\"Registration\\\"    (Flow for user registration)\\n *    - \\\"Authentication\\\"  (Flow for user authentication)\\n */\\n\\ntry {\\n    // Retrieve the flow type from shared state\\n    var flowType = nodeState.get(\\\"flowType\\\");\\n    \\n    // Determine the outcome based on flow type\\n    if (flowType === \\\"Registration\\\") {\\n        action.goTo(\\\"Registration\\\");\\n    } else {\\n        action.goTo(\\\"Authentication\\\");\\n    }\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507806,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090711996,
          "evaluatorVersion": "2.0"
        },
        "97707ce0-3974-4ee5-8cef-6de83bf0e757": {
          "_id": "97707ce0-3974-4ee5-8cef-6de83bf0e757",
          "name": "OOTB - Set Protect Activity Params In Shared State Script",
          "description": "Script to set protect activity params in shared state ",
          "script": "\"/*\\n * Script: Protect Risk Evaluation Processing\\n * \\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025\\n * \\n * This script processes risk evaluation data from PingOne Protect and extracts key details such as \\n * city, state, and device OS and stores in user objectAttributes\\n *\\n * Script Inputs:\\n *    - \\\"objectAttributes\\\" (Object) - Existing user attributes to update.\\n *    - \\\"PingOneProtectEvaluationNode.RISK\\\" (Object) - Risk evaluation response from PingOne Protect.\\n *\\n * Script Outputs:\\n *    - \\\"objectAttributes\\\" (Object) - Updated attributes including protectActivityCity, protectActivityState, and protectDeviceOS.\\n *    - \\\"errorMessage\\\" (String) - User-friendly error message if an error occurs.\\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging.\\n *\\n * Outcomes:\\n *    - \\\"true\\\"  (Script executed successfully).\\n *    - \\\"Error\\\" (Unexpected failure).\\n */\\n\\ntry {\\n    /**\\n     * Capitalizes the first letter of each word in a given string.\\n     * Example: \\\"new york\\\" -> \\\"New York\\\"\\n     * @param {string} string - The input string to transform.\\n     * @returns {string} - The transformed string with capitalized words.\\n     */\\n    function capitalizeFirstLetter(string) {\\n        return string\\n        .split(' ')                   // Split the string into an array of words\\n        .map(word => \\n            word.charAt(0).toUpperCase() + word.slice(1)\\n        )                             // Capitalize the first letter of each word\\n        .join(' ');                   // Join the array back into a single string\\n    }\\n    \\n    // Retrieve existing object attributes from node state\\n    var attributes = nodeState.get(\\\"objectAttributes\\\");\\n    \\n    // Retrieve risk evaluation response from PingOne Protect\\n    var rawResponse = nodeState.get(\\\"PingOneProtectEvaluationNode.RISK\\\");\\n    \\n    // Extract key details from the risk response\\n    var protectActivityCity = rawResponse.details.city;\\n    var protectActivityState = rawResponse.details.state;\\n    var protectDeviceOS = rawResponse.details.device.os.name;\\n    \\n    // Capitalize city and state names for consistency\\n    protectActivityCity = capitalizeFirstLetter(protectActivityCity);\\n    protectActivityState = capitalizeFirstLetter(protectActivityState);\\n    \\n    // Update attributes if they exist\\n    if (attributes) {\\n        attributes.put(\\\"custom_protectActivityCity\\\", protectActivityCity);\\n        attributes.put(\\\"custom_protectActivityState\\\", protectActivityState);\\n        attributes.put(\\\"custom_protectDeviceOS\\\", protectDeviceOS);\\n\\n        // Store updated attributes in the shared state\\n        nodeState.putShared(\\\"objectAttributes\\\", attributes);\\n    }\\n\\n    // Proceed to the success path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507885,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090711995,
          "evaluatorVersion": "2.0"
        },
        "277c173b-7473-4609-a31a-f0631ae9df4d": {
          "_id": "277c173b-7473-4609-a31a-f0631ae9df4d",
          "name": "OOTB - Set Protect UserId and Username Script",
          "description": "Script to set userId and username to be used in P1 Protect nodes",
          "script": "\"/*\\n * P1 Protect User Identifier Assignment Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * This script sets the Protect User ID and Username in shared state, prerequisite for P1 Protect Evaluation node.  \\n *\\n * Script Inputs  :  \\n *    - \\\"_id\\\" (String) - Unique identifier of the user  \\n *    - \\\"username\\\" (String) - Username of the user  \\n *\\n * Script Outputs :  \\n *    - \\\"protectUserId\\\" (String) - ID used for protection mechanisms (defaults to username if \\\"_id\\\" is null)  \\n *    - \\\"protectUsername\\\" (String) - Stores the username  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (User identifiers successfully assigned)  \\n *    - \\\"Error\\\" (Unexpected execution failure)  \\n */\\n\\ntry {\\n    // Retrieve user ID and username from node state\\n    var protectUserId = nodeState.get(\\\"_id\\\");\\n    var protectUsername = nodeState.get(\\\"username\\\");\\n    \\n    // If _id is null, default to username as the identifier\\n    if (protectUserId === null) {\\n        protectUserId = protectUsername;\\n    }\\n\\n    // Store the assigned identifiers in shared state\\n    nodeState.putShared(\\\"protectUserId\\\", protectUserId);\\n    nodeState.putShared(\\\"protectUsername\\\", protectUsername);\\n\\n    // Proceed to success path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // Store user-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Store detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Redirect to the error outcome\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507709,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090712004,
          "evaluatorVersion": "2.0"
        },
        "f8dc30d1-02e2-45b2-aa34-06d75c7801db": {
          "_id": "f8dc30d1-02e2-45b2-aa34-06d75c7801db",
          "name": "OOTB - Move RISK value to Shared State Script",
          "description": "Script to set RISK value to shared state",
          "script": "\"/*\\n * P1 Protect Risk Evaluation Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/28/2025  \\n *\\n * This script retrieves the risk evaluation result from the PingOne Protect Evaluation Node  \\n * and stores it in shared state for further processing.\\n *\\n * Script Inputs  :  \\n *    - \\\"PingOneProtectEvaluationNode.RISK\\\" (Object) : Risk evaluation data from the PingOne Protect Evaluation Node  \\n *\\n * Script Outputs :  \\n *    - \\\"PingOneProtectEvaluationNode.RISK\\\" (Object) : Stored risk evaluation result for later use  \\n *    - \\\"errorMessage\\\" (String)                      : User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String)                      : Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  : Risk evaluation data successfully retrieved and stored  \\n *    - \\\"Error\\\" : Unexpected execution failure  \\n */\\n\\ntry {\\n    // Retrieve risk evaluation data from node state\\n    var PingOneProtectEvaluationNodeValue = nodeState.getObject(\\\"PingOneProtectEvaluationNode.RISK\\\");\\n\\n    // Store the retrieved risk value in shared state for later use\\n     nodeState.putShared(\\\"PingOneProtectEvaluationNode.RISK\\\",PingOneProtectEvaluationNodeValue);\\n    \\n     outcome = \\\"true\\\";\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\\n\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743151896104,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744224717735,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {
        "accountdisabledResetPwd": {
          "_id": "emailTemplate/accountdisabledResetPwd",
          "advancedEditor": true,
          "defaultLocale": "en",
          "description": "Fired when PingOne Protect detects critical risk associated with the account",
          "displayName": "Account Disabled Reset Pwd",
          "enabled": true,
          "from": "",
          "html": {
            "en": ""
          },
          "message": {
            "en": "<div style=\"display:block;width:400px;margin:0 auto;font-family:sans-serif;border:1px solid #c5c5c5;padding:30px 20px;text-align:center\">\n  <img src=\"https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png\" alt=\"Company Logo\" style=\"height:65px;margin-bottom:10px\" />\n  <div style=\"display:block\">\n    <h2 style=\"margin-top:10px;margin-bottom:10px\">Sign-in Attempt was blocked</h2>\n    <p>{{object.mail}}</p>\n    <hr style=\"width:100%;margin-top:20px;margin-bottom:25px;border:none;border-top:1px solid #c5c5c5\" />\n  </div>\n  <div style=\"text-align:left\">\n    <p id=\"alertText\">Someone just attempted to sign onto your account nearby {{object.custom_protectActivityCity}}, {{object.custom_protectActivityState}}. We have disabled the account for your security.</p>\n    <p>\n      <a href=\"https://<your-tenant-name>.forgeblocks.com/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=CIAM Deep Fake - Account Reset Main Journey\" style=\"text-decoration:none;color:#109cf1\">Reset your Password</a>\n    </p>\n    <p>Thanks\n    </p>\n  </div>\n</div>\n\n  "
          },
          "mimeType": "text/html",
          "styles": "body {\n   background-color: #324054;\n   color: #455469;\n   padding: 60px;\n   text-align: center \n}\n a {\n   text-decoration: none;\n   color: #109cf1;\n}\n .content {\n   background-color: #fff;\n   border-radius: 4px;\n   margin: 0 auto;\n   padding: 48px;\n   width: 235px \n}\n",
          "subject": {
            "en": "Account Disabled"
          },
          "templateId": "accountdisabledResetPwd"
        }
      },
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "CIAM Deep Fake - Selfie Verification Inner Journey": {
      "tree": {
        "_id": "CIAM Deep Fake - Selfie Verification Inner Journey",
        "_rev": "1588606885",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Deep Fake\"]"
        },
        "entryNodeId": "61b9ee40-827b-48d3-800c-4b1ce3e022a6",
        "innerTreeOnly": false,
        "nodes": {
          "010e344d-0b0e-4816-8570-117f8b146991": {
            "connections": {
              "error": "16c7b637-bc20-4069-bfd8-b1a6e9ca93f4",
              "success": "5c29cee2-d9e3-4736-90fc-210ca45aa1b7",
              "timeout": "16c7b637-bc20-4069-bfd8-b1a6e9ca93f4"
            },
            "displayName": "PingOne Credentials Verification",
            "nodeType": "PingOneCredentialsVerification",
            "x": 578,
            "y": 0
          },
          "0ea3c746-55cc-4636-88db-5fdfa2a698f1": {
            "connections": {
              "false": "48cde19d-42ec-4496-8490-92f0b2063bd2",
              "true": "10a5a885-f8cb-4abb-9b5b-1db313c0c846"
            },
            "displayName": "Retry Message",
            "nodeType": "MessageNode",
            "x": 1996,
            "y": 132.515625
          },
          "10a5a885-f8cb-4abb-9b5b-1db313c0c846": {
            "connections": {
              "Reject": "48cde19d-42ec-4496-8490-92f0b2063bd2",
              "Retry": "b0db9fd0-53b1-46a2-86b2-e3ebf1b38ace"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 1757,
            "y": 354.515625
          },
          "16c7b637-bc20-4069-bfd8-b1a6e9ca93f4": {
            "connections": {
              "false": "48cde19d-42ec-4496-8490-92f0b2063bd2",
              "true": "947187e8-ff89-4634-8d17-66352d7daf98"
            },
            "displayName": "Retry Message",
            "nodeType": "MessageNode",
            "x": 907,
            "y": 317.015625
          },
          "16fe1a69-c567-4d5f-9261-2eed64963084": {
            "connections": {
              "Error": "16c7b637-bc20-4069-bfd8-b1a6e9ca93f4",
              "true": "59a36f82-9458-447c-97b0-f894a8bb4ee5"
            },
            "displayName": "Validate User Identity",
            "nodeType": "ScriptedDecisionNode",
            "x": 878,
            "y": 773.515625
          },
          "211d6987-c021-46d5-986a-7a39ee1a35f3": {
            "connections": {
              "error": "16c7b637-bc20-4069-bfd8-b1a6e9ca93f4",
              "success": "16fe1a69-c567-4d5f-9261-2eed64963084",
              "timeout": "16c7b637-bc20-4069-bfd8-b1a6e9ca93f4"
            },
            "displayName": "PingOne Credentials Verification",
            "nodeType": "PingOneCredentialsVerification",
            "x": 544,
            "y": 770.515625
          },
          "440ee224-97dc-47fd-b0c6-d4cffff63819": {
            "connections": {
              "outcome": "b0db9fd0-53b1-46a2-86b2-e3ebf1b38ace"
            },
            "displayName": "Device Profile Collector",
            "nodeType": "DeviceProfileCollectorNode",
            "x": 1470,
            "y": 267.515625
          },
          "48cde19d-42ec-4496-8490-92f0b2063bd2": {
            "connections": {
              "outcome": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "displayName": "Set Failure Details",
            "nodeType": "SetFailureDetailsNode",
            "x": 1689,
            "y": 809.015625
          },
          "59a36f82-9458-447c-97b0-f894a8bb4ee5": {
            "connections": {
              "CONFIGURATION_FAILED": "abd03880-fd9d-4dbb-ac6e-55c3949cf12a",
              "outcome": "abd03880-fd9d-4dbb-ac6e-55c3949cf12a"
            },
            "displayName": "Create _aiid Cookie",
            "nodeType": "ConfigProviderNode",
            "x": 1181,
            "y": 811.015625
          },
          "5c29cee2-d9e3-4736-90fc-210ca45aa1b7": {
            "connections": {
              "Error": "16c7b637-bc20-4069-bfd8-b1a6e9ca93f4",
              "true": "abd03880-fd9d-4dbb-ac6e-55c3949cf12a"
            },
            "displayName": "Validate User Identity",
            "nodeType": "ScriptedDecisionNode",
            "x": 962,
            "y": 32.515625
          },
          "5d4930fc-ca57-4dab-9139-4adb4a765895": {
            "connections": {
              "true": "010e344d-0b0e-4816-8570-117f8b146991"
            },
            "displayName": "Extract Cookie.",
            "nodeType": "ScriptedDecisionNode",
            "x": 559,
            "y": 451.015625
          },
          "61b9ee40-827b-48d3-800c-4b1ce3e022a6": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "938847a3-bb32-4665-aeed-073f0c09a35d"
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 119.15625,
            "y": 2.515625
          },
          "938847a3-bb32-4665-aeed-073f0c09a35d": {
            "connections": {
              "false": "bb27161e-4056-4baa-a1cb-7d717f4b05bd",
              "true": "b0ddbfb7-9272-4b5e-9862-dfc526daa2d9"
            },
            "displayName": "PingOne Identity Match",
            "nodeType": "PingOneIdentityMatchNode",
            "x": 94,
            "y": 215.515625
          },
          "947187e8-ff89-4634-8d17-66352d7daf98": {
            "connections": {
              "Reject": "48cde19d-42ec-4496-8490-92f0b2063bd2",
              "Retry": "211d6987-c021-46d5-986a-7a39ee1a35f3"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 1098,
            "y": 496.515625
          },
          "abd03880-fd9d-4dbb-ac6e-55c3949cf12a": {
            "connections": {
              "false": "16c7b637-bc20-4069-bfd8-b1a6e9ca93f4",
              "true": "440ee224-97dc-47fd-b0c6-d4cffff63819"
            },
            "displayName": "Update Selfie",
            "nodeType": "ScriptedDecisionNode",
            "x": 1507,
            "y": 402.515625
          },
          "b0db9fd0-53b1-46a2-86b2-e3ebf1b38ace": {
            "connections": {
              "CONFIGURATION_FAILED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "failureOutcome": "0ea3c746-55cc-4636-88db-5fdfa2a698f1",
              "successOutcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "timeoutOutcome": "0ea3c746-55cc-4636-88db-5fdfa2a698f1"
            },
            "displayName": "Selfie Verification",
            "nodeType": "ConfigProviderNode",
            "x": 1466,
            "y": 17.515625
          },
          "b0ddbfb7-9272-4b5e-9862-dfc526daa2d9": {
            "connections": {
              "false": "211d6987-c021-46d5-986a-7a39ee1a35f3",
              "true": "5d4930fc-ca57-4dab-9139-4adb4a765895"
            },
            "displayName": "Cookie Presence Decision Node",
            "nodeType": "CookiePresenceDecisionNode",
            "x": 56,
            "y": 802.515625
          },
          "bb27161e-4056-4baa-a1cb-7d717f4b05bd": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "b0ddbfb7-9272-4b5e-9862-dfc526daa2d9"
            },
            "displayName": "PingOne Create User",
            "nodeType": "PingOneCreateUserNode",
            "x": 106.5,
            "y": 460.515625
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 2257,
            "y": 70
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 2290,
            "y": 746
          },
          "startNode": {
            "x": 0,
            "y": 9
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "010e344d-0b0e-4816-8570-117f8b146991": {
          "_id": "010e344d-0b0e-4816-8570-117f8b146991",
          "_rev": "-1250562217",
          "applicationInstanceAttribute": "pingOneApplicationInstanceId",
          "deliveryMethod": "PUSH",
          "waitingMessage": {},
          "deliveryMethodMessage": {
            "en": "Choose the delivery method to proceed with credential verification."
          },
          "pushMessage": {
            "en": "A push notification has been sent to your mobile wallet."
          },
          "scanQRCodeMessage": {
            "en": "Scan this QR Code with your mobile wallet to proceed."
          },
          "storeVerificationResponse": true,
          "attributeKeys": [],
          "credentialType": "VerifiedIdentity",
          "allowDeliveryMethodSelection": true,
          "timeout": 120,
          "customCredentialsPayload": false,
          "_type": {
            "_id": "PingOneCredentialsVerification",
            "name": "PingOne Credentials Verification",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "success",
              "displayName": "Success"
            },
            {
              "id": "error",
              "displayName": "Error"
            },
            {
              "id": "timeout",
              "displayName": "Time Out"
            }
          ]
        },
        "0ea3c746-55cc-4636-88db-5fdfa2a698f1": {
          "_id": "0ea3c746-55cc-4636-88db-5fdfa2a698f1",
          "_rev": "-1958485829",
          "messageYes": {
            "en": "Retry"
          },
          "message": {
            "en": "<div style=\"background-color: #fdecea; border-left: 5px solid #e53935; color: #5f5f5f; padding: 12px; border-radius: 5px; font-size: 14px; display: flex; align-items: center;\">\n    <span style=\"font-size: 18px; margin-right: 8px; color: #5f5f5f;\">&#9888;</span>\n    <span>something wen't wrong!</span>\n</div>"
          },
          "messageNo": {
            "en": "Cancel"
          },
          "_type": {
            "_id": "MessageNode",
            "name": "Message Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "10a5a885-f8cb-4abb-9b5b-1db313c0c846": {
          "_id": "10a5a885-f8cb-4abb-9b5b-1db313c0c846",
          "_rev": "124467182",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "16c7b637-bc20-4069-bfd8-b1a6e9ca93f4": {
          "_id": "16c7b637-bc20-4069-bfd8-b1a6e9ca93f4",
          "_rev": "-2140895029",
          "messageYes": {
            "en": "Retry"
          },
          "message": {
            "en": "<div style=\"background-color: #fdecea; border-left: 5px solid #e53935; color: #5f5f5f; padding: 12px; border-radius: 5px; font-size: 14px; display: flex; align-items: center;\">\n    <span style=\"font-size: 18px; margin-right: 8px; color: #5f5f5f;\">&#9888;</span>\n    <span>something wen't wrong!</span>\n</div>"
          },
          "messageNo": {
            "en": "Cancel"
          },
          "_type": {
            "_id": "MessageNode",
            "name": "Message Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "16fe1a69-c567-4d5f-9261-2eed64963084": {
          "_id": "16fe1a69-c567-4d5f-9261-2eed64963084",
          "_rev": "1422076506",
          "script": "72689954-71cb-4c2c-b5dc-79f2253d0d3a",
          "outcomes": [
            "true",
            "Error"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "pingOneCredentialVerification",
            "_id"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "211d6987-c021-46d5-986a-7a39ee1a35f3": {
          "_id": "211d6987-c021-46d5-986a-7a39ee1a35f3",
          "_rev": "1243873702",
          "applicationInstanceAttribute": "pingOneApplicationInstanceId",
          "deliveryMethod": "QRCODE",
          "waitingMessage": {},
          "deliveryMethodMessage": {},
          "pushMessage": {},
          "scanQRCodeMessage": {
            "en": "Scan this QR Code with your mobile wallet to proceed with credential verification."
          },
          "storeVerificationResponse": true,
          "attributeKeys": [],
          "credentialType": "VerifiedIdentity",
          "allowDeliveryMethodSelection": false,
          "timeout": 120,
          "customCredentialsPayload": false,
          "_type": {
            "_id": "PingOneCredentialsVerification",
            "name": "PingOne Credentials Verification",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "success",
              "displayName": "Success"
            },
            {
              "id": "error",
              "displayName": "Error"
            },
            {
              "id": "timeout",
              "displayName": "Time Out"
            }
          ]
        },
        "440ee224-97dc-47fd-b0c6-d4cffff63819": {
          "_id": "440ee224-97dc-47fd-b0c6-d4cffff63819",
          "_rev": "1053363023",
          "deviceLocation": false,
          "maximumSize": "3",
          "deviceMetadata": true,
          "message": {},
          "_type": {
            "_id": "DeviceProfileCollectorNode",
            "name": "Device Profile Collector",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "48cde19d-42ec-4496-8490-92f0b2063bd2": {
          "_id": "48cde19d-42ec-4496-8490-92f0b2063bd2",
          "_rev": "1360041534",
          "failureMessage": {
            "en": "Credential verification failed."
          },
          "failureDetails": {},
          "_type": {
            "_id": "SetFailureDetailsNode",
            "name": "Set Failure Details",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "59a36f82-9458-447c-97b0-f894a8bb4ee5": {
          "_id": "59a36f82-9458-447c-97b0-f894a8bb4ee5",
          "_rev": "629412079",
          "script": "44061d2c-3f01-48ab-90ca-d97a41699fdf",
          "nodeType": "SetCustomCookieNode",
          "scriptInputs": [
            "pingOneApplicationInstanceId"
          ],
          "_type": {
            "_id": "ConfigProviderNode",
            "name": "Configuration Provider",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            },
            {
              "id": "CONFIGURATION_FAILED",
              "displayName": "Configuration failure"
            }
          ]
        },
        "5c29cee2-d9e3-4736-90fc-210ca45aa1b7": {
          "_id": "5c29cee2-d9e3-4736-90fc-210ca45aa1b7",
          "_rev": "1429300576",
          "script": "72689954-71cb-4c2c-b5dc-79f2253d0d3a",
          "outcomes": [
            "true",
            "Error"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "pingOneCredentialVerification",
            "_id"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "5d4930fc-ca57-4dab-9139-4adb4a765895": {
          "_id": "5d4930fc-ca57-4dab-9139-4adb4a765895",
          "_rev": "327958442",
          "script": "1d7561f9-b005-41cf-9ff7-96ebb25fee74",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "pingOneApplicationInstanceId",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "61b9ee40-827b-48d3-800c-4b1ce3e022a6": {
          "_id": "61b9ee40-827b-48d3-800c-4b1ce3e022a6",
          "_rev": "-841405387",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "938847a3-bb32-4665-aeed-073f0c09a35d": {
          "_id": "938847a3-bb32-4665-aeed-073f0c09a35d",
          "_rev": "586164953",
          "captureFailure": false,
          "pingIdentityAttribute": "username",
          "amIdentityAttribute": "uid",
          "_type": {
            "_id": "PingOneIdentityMatchNode",
            "name": "PingOne Identity Match",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "947187e8-ff89-4634-8d17-66352d7daf98": {
          "_id": "947187e8-ff89-4634-8d17-66352d7daf98",
          "_rev": "913730407",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "abd03880-fd9d-4dbb-ac6e-55c3949cf12a": {
          "_id": "abd03880-fd9d-4dbb-ac6e-55c3949cf12a",
          "_rev": "983234472",
          "script": "8bf30f3b-3354-49fc-a661-71102aedf7f1",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "pingOneCredentialVerification",
            "_id"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "b0db9fd0-53b1-46a2-86b2-e3ebf1b38ace": {
          "_id": "b0db9fd0-53b1-46a2-86b2-e3ebf1b38ace",
          "_rev": "518679703",
          "script": "c01d74c5-7270-4ee5-8caa-a57fcba30caf",
          "nodeType": "PingOneVerifyEvaluationNode",
          "scriptInputs": [
            "forgeRock.device.profile"
          ],
          "_type": {
            "_id": "ConfigProviderNode",
            "name": "Configuration Provider",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "timeoutOutcome",
              "displayName": "Time out"
            },
            {
              "id": "CONFIGURATION_FAILED",
              "displayName": "Configuration failure"
            }
          ]
        },
        "b0ddbfb7-9272-4b5e-9862-dfc526daa2d9": {
          "_id": "b0ddbfb7-9272-4b5e-9862-dfc526daa2d9",
          "_rev": "-963870429",
          "cookieName": "_aiid",
          "_type": {
            "_id": "CookiePresenceDecisionNode",
            "name": "Cookie Presence Decision Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "bb27161e-4056-4baa-a1cb-7d717f4b05bd": {
          "_id": "bb27161e-4056-4baa-a1cb-7d717f4b05bd",
          "_rev": "1822878505",
          "captureFailure": true,
          "amIdentityAttribute": "uid",
          "anonymizedUser": true,
          "_type": {
            "_id": "PingOneCreateUserNode",
            "name": "PingOne Create User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        }
      },
      "innerNodes": {},
      "scripts": {
        "72689954-71cb-4c2c-b5dc-79f2253d0d3a": {
          "_id": "72689954-71cb-4c2c-b5dc-79f2253d0d3a",
          "name": "OOTB - Validate User Identity Script",
          "description": "Script to match the unique_identifier from credentials and userid from AIC.",
          "script": "\"/*\\n * Validate User Identity Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/28/2025\\n *\\n * Script Inputs  :  \\n *    - \\\"pingOneCredentialVerification\\\" (Object) - Contains verification data  \\n *    - \\\"_id\\\" (String) - User's unique identifier  \\n *\\n * Script Outputs :  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (User identity verified)  \\n *    - \\\"Error\\\" (An error occurred or mismatch)  \\n */\\n\\ntry {\\n    var rawResponse = nodeState.getObject(\\\"pingOneCredentialVerification\\\");\\n    var userIdFromCard = rawResponse.verifiedData[0].data.unique_identifier;\\n    var userId = nodeState.get(\\\"_id\\\");\\n\\n    if (userIdFromCard !== userId) {\\n        nodeState.putShared(\\\"errorMessage\\\", \\\"Presented invalid credentials.\\\");\\n        nodeState.putShared(\\\"errorDetails\\\", \\\"UserId from shared state mismatched with the one returned from the card.\\\");\\n        action.goTo(\\\"Error\\\");\\n    } else {\\n        action.goTo(\\\"true\\\");\\n    }\\n} catch (e) {\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    action.goTo(\\\"Error\\\");\\n}\\n\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1744021827668,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744224938295,
          "evaluatorVersion": "2.0"
        },
        "44061d2c-3f01-48ab-90ca-d97a41699fdf": {
          "_id": "44061d2c-3f01-48ab-90ca-d97a41699fdf",
          "name": "OOTB - Set pingOneApplicationInstanceId Cookie Config. Node Script",
          "description": "Configuration node script to Set Cookie",
          "script": "\"/*\\n * PingOne Application Instance ID Cookie Setter\\n *\\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/26/2025  \\n *\\n * Script Inputs  :  \\n *    - \\\"pingOneApplicationInstanceId\\\" (String) - The unique identifier for the PingOne application instance  \\n *\\n * Script Outputs :  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Cookie configuration created successfully)  \\n *    - \\\"Error\\\" (An error occurred during execution)  \\n */\\n\\ntry {\\n    var pingOneApplicationInstanceId = nodeState.get(\\\"pingOneApplicationInstanceId\\\");\\n\\n    config = {\\n        \\\"name\\\": \\\"_aiid\\\",\\n        \\\"value\\\": pingOneApplicationInstanceId,\\n        \\\"maxAge\\\": \\\"300\\\",\\n        \\\"domain\\\": \\\"\\\",\\n        \\\"path\\\": \\\"/\\\",\\n        \\\"useSecureCookie\\\": true,\\n        \\\"useHttpOnlyCookie\\\": true,\\n        \\\"sameSite\\\": \\\"STRICT\\\"\\n    };\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n\\n    // Go to Error outcome\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "CONFIG_PROVIDER_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743151896105,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744224601224,
          "evaluatorVersion": "1.0"
        },
        "1d7561f9-b005-41cf-9ff7-96ebb25fee74": {
          "_id": "1d7561f9-b005-41cf-9ff7-96ebb25fee74",
          "name": "OOTB - Extract Cookie Script",
          "description": "Extract the cookie with the value for pingOneApplicationInstanceId.",
          "script": "\"/*\\n * Extract AIID Cookie Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/28/2025 \\n *\\n * Script Inputs  :  \\n *    - \\\"Cookie\\\" (String) - Retrieved from request headers  \\n *\\n * Script Outputs :  \\n *    - \\\"pingOneApplicationInstanceId\\\" (String) - Extracted AIID cookie value  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Successfully extracted the cookie value)  \\n *    - \\\"Error\\\" (An error occurred during execution)  \\n */\\n\\ntry {\\n    // Get the cookie name you want to extract\\n    var cookieName = \\\"_aiid\\\";  // Change this to the actual cookie name\\n\\n    // Retrieve cookies from the request headers\\n    var cookies = requestHeaders.get(\\\"Cookie\\\");\\n\\n    if (cookies) {\\n        // Convert cookies string to key-value pairs\\n        var cookieArray = cookies[0].split(\\\"; \\\");\\n        var cookieMap = {};\\n\\n        for (var i = 0; i < cookieArray.length; i++) {\\n            var parts = cookieArray[i].split(\\\"=\\\");\\n            cookieMap[parts[0]] = parts[1];\\n        }\\n\\n        // Extract the required cookie value\\n        if (cookieMap[cookieName]) {\\n            nodeState.putShared(\\\"pingOneApplicationInstanceId\\\", cookieMap[cookieName]);\\n            outcome = \\\"true\\\";\\n        } \\n    } \\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\\n\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743151896104,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744224627938,
          "evaluatorVersion": "2.0"
        },
        "8bf30f3b-3354-49fc-a661-71102aedf7f1": {
          "_id": "8bf30f3b-3354-49fc-a661-71102aedf7f1",
          "name": "OOTB - Update User Selfie Script",
          "description": "Updates the user selfie with the latest selfie in the credentials.",
          "script": "\"/*\\n * Update User Reference Selfie Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/28/2025\\n *\\n * Script Inputs  :  \\n *    - \\\"pingOneCredentialVerification\\\" (Object) - Contains verification data, including the reference selfie  \\n *    - \\\"_id\\\" (String) - User's unique identifier  \\n *\\n * Script Outputs :  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Reference selfie successfully updated)  \\n *    - \\\"Error\\\" (An error occurred during execution)  \\n */\\n\\ntry {\\n    // Get the reference selfie from the credentials and update the IDM attribute\\n    var rawResponse = nodeState.getObject(\\\"pingOneCredentialVerification\\\");\\n    var referenceSelfie = rawResponse.verifiedData[0].data.selfie;\\n    var userId = nodeState.get(\\\"_id\\\");\\n    \\n    // Update the frUnindexedString1 attribute of the user\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [\\n        {\\\"operation\\\": \\\"replace\\\", \\\"field\\\": \\\"/frUnindexedString1\\\", \\\"value\\\": referenceSelfie}\\n    ]);\\n    \\n    outcome = \\\"true\\\";\\n    action.goTo(outcome);\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\\n\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743151896120,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744224984526,
          "evaluatorVersion": "2.0"
        },
        "c01d74c5-7270-4ee5-8caa-a57fcba30caf": {
          "_id": "c01d74c5-7270-4ee5-8caa-a57fcba30caf",
          "name": "OOTB - Selfie Verify Evaluation Config. Node Script",
          "description": "Configuration node script for Selfie P1 Verify Evaluation",
          "script": "\"/*\\n * P1 Selfie Verify Evaluation Config Provider Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/28/2025  \\n *\\n * This script builds a dynamic configuration object for the Config Provider Node\\n * based on the user's device type. It determines the appropriate delivery method\\n * for identity verification for case of mobile or web browser and configures messaging and behavior accordingly.\\n *\\n * Script Inputs  : \\n *    - \\\"forgeRock.device.profile\\\" (Object) - Device metadata from node state\\n *\\n * Script Outputs : \\n *    - \\\"config\\\" (Map) - Define and fill a Map object named 'config' with custom values, \\n *                       this will define the configuration for the associated node selected in the ConfigProviderNode.  \\n *\\n * Outcomes       : \\n *    - \\\"Success\\\"               (Verify Evaluation Succeeded)  \\n *    - \\\"Failure\\\"               (Verify Evaluation Failed)  \\n *    - \\\"Timed Out\\\"            (Verify Evaluation Timed Out)  \\n *    - \\\"Configuration Failure\\\" (Improper or missing values in config)  \\n */\\n\\nvar deliveryMethod = \\\"QRCODE\\\";\\nvar allowDeliveryMethodSelection = true;\\n\\nvar deviceProfile = nodeState.get(\\\"forgeRock.device.profile\\\");\\nlogger.error(\\\"P1 Verify Eval Node Config - deviceProfile: {}\\\", deviceProfile);\\n\\nvar deviceName = deviceProfile.get(\\\"metadata\\\").get(\\\"platform\\\").get(\\\"deviceName\\\");\\nlogger.error(\\\"P1 Verify Eval Node Config - deviceName: {}\\\", deviceName);\\n\\nif (deviceName == '\\\"iPhone (Browser)\\\"' || deviceName == '\\\"Android (Browser)\\\"') {\\n    deliveryMethod = \\\"REDIRECT\\\";\\n    allowDeliveryMethodSelection = false;\\n}\\nlogger.error(\\\"P1 Verify Eval Node Config - deliveryMethod: {}\\\", deliveryMethod);\\n\\nconfig = {\\n  \\\"pingOneWorker\\\" : null, // Enter your PingOne Worker App here\\n  \\\"verifyPolicyId\\\" : \\\"\\\", // Enter your Selfie Verification Verify Policy ID here\\n  \\\"deliveryMethod\\\" : deliveryMethod,\\n  \\\"allowDeliveryMethodSelection\\\" : allowDeliveryMethodSelection,\\n  \\\"deliveryMethodMessage\\\" : { \\n      \\\"en\\\": \\\"<h1 class='h2'>Select Delivery Method</h1><p>Select a delivery method to start the identity verification process.</p>\\\" \\n  },\\n  \\\"scanQRCodeMessage\\\" : { \\n      \\\"en\\\": \\\"<h1 class='h2'>Document Verification</h1><p>Scan this QR Code with your mobile phone and follow the instructions.</p>\\\" \\n  },\\n  \\\"waitingMessage\\\": {\\n      \\\"en\\\": \\\"Please complete the requested actions sent to your email and/or mobile phone number. Waiting for identity verification completion. Here is the code you will see on your device: {{verificationCode}}\\\"\\n  },\\n  \\\"redirectMessage\\\" : {},\\n  \\\"timeout\\\" : 120,\\n  \\\"biographicMatching\\\": {\\n      \\\"referenceSelfie\\\": \\\"fr-attr-str1\\\"\\n  },\\n  \\\"storeVerificationMetadata\\\" : true,\\n  \\\"storeVerifiedData\\\" : true,\\n  \\\"captureFailure\\\" : true\\n};\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "CONFIG_PROVIDER_NODE",
          "createdBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "creationDate": 1744220214766,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744710033390,
          "evaluatorVersion": "1.0"
        }
      },
      "emailTemplates": {},
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "CIAM Deep Fake - MFA Authentication Inner Journey": {
      "tree": {
        "_id": "CIAM Deep Fake - MFA Authentication Inner Journey",
        "_rev": "-1048378564",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Deep Fake\"]"
        },
        "entryNodeId": "80882d0b-74fe-4b27-ab1b-382124a52110",
        "innerTreeOnly": false,
        "nodes": {
          "002f4399-409c-47da-84ec-cf36f2b46364": {
            "connections": {
              "true": "bb2158c7-d18a-4b49-a41e-57c7094267ff"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 1094,
            "y": 720.015625
          },
          "0409a2e1-e904-49f6-a191-fd84d3ddf87e": {
            "connections": {
              "false": "18dfa03c-f023-4f65-9abc-670469baf414",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Enter Recovery Code",
            "nodeType": "PageNode",
            "x": 553,
            "y": 699.015625
          },
          "18dfa03c-f023-4f65-9abc-670469baf414": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "a98fa6df-16a6-438f-84dc-fc1f09ffc9c2"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 563,
            "y": 973.515625
          },
          "30e3823a-7bad-41bb-926c-b422c8ecbdca": {
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "bb2158c7-d18a-4b49-a41e-57c7094267ff"
            },
            "displayName": "Twilio Verify Sender",
            "nodeType": "VerifyAuthSenderNode",
            "x": 819,
            "y": 444.03125
          },
          "4995115d-9526-436a-89c3-6adfb9bcba55": {
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "bb2158c7-d18a-4b49-a41e-57c7094267ff"
            },
            "displayName": "Twilio Verify Sender",
            "nodeType": "VerifyAuthSenderNode",
            "x": 795,
            "y": 225.515625
          },
          "59664a6b-2d5e-445a-9405-aeb190e9f22a": {
            "connections": {
              "true": "d3cc1103-6df4-4ef1-9909-7564ee9a3aab"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 535,
            "y": 2349.015625
          },
          "59a0d6b7-8eca-4bfd-89ce-e9b7ab158063": {
            "connections": {
              "EXPIRED": "b5a5662c-9437-4a7a-9e52-4c9ab361ff52",
              "FALSE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "TRUE": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "WAITING": "8bfbf631-10d3-4bcb-a72a-3e3c3aa8dec1"
            },
            "displayName": "Push Result Verifier Node",
            "nodeType": "PushResultVerifierNode",
            "x": 903,
            "y": 2450.015625
          },
          "636138e3-15ae-4e2c-9e60-8276600a064d": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "002f4399-409c-47da-84ec-cf36f2b46364"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 1402,
            "y": 330.015625
          },
          "770a8498-eec7-4e0e-bf45-561a5abdd65e": {
            "connections": {
              "false": "a490a5eb-faed-466f-ae03-482382690311",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Enter Recovery Code",
            "nodeType": "PageNode",
            "x": 1201,
            "y": 2627.015625
          },
          "7799c177-e762-41b3-a671-39fed29ff4fc": {
            "connections": {
              "false": "f99ab073-cd97-448e-9e9c-fe84417b9728",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Enter Recovery Code",
            "nodeType": "PageNode",
            "x": 572,
            "y": 1578.015625
          },
          "80882d0b-74fe-4b27-ab1b-382124a52110": {
            "connections": {
              "EMAIL": "cd851eec-ac37-4244-9614-f32070ebda4d",
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "FIDO2": "94ef4faf-9473-4a2a-b6cf-7a6fdb2044e5",
              "Magic Link": "98e57547-259e-4d15-b441-d0ee27f73df9",
              "OATH": "d3cc1103-6df4-4ef1-9909-7564ee9a3aab",
              "PUSH": "a1498c9b-962e-4625-b4c9-818243b6f8b2",
              "SMS": "98be3ae4-cf6a-46fc-80f1-3a729c6f8174",
              "VOICE": "b31a399a-0ec1-4d38-9cfc-915f0d0001ef"
            },
            "displayName": "Select Auth Device",
            "nodeType": "PageNode",
            "x": 220,
            "y": 468.421875
          },
          "81cf3ce9-ecbb-4bc9-a9d5-b7fa0a236dff": {
            "connections": {
              "true": "ed7d4cf4-6f00-4de7-b17a-d3cbc4ed754d"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 1379,
            "y": 15.015625
          },
          "8bfbf631-10d3-4bcb-a72a-3e3c3aa8dec1": {
            "connections": {
              "DONE": "59a0d6b7-8eca-4bfd-89ce-e9b7ab158063",
              "EXITED": "770a8498-eec7-4e0e-bf45-561a5abdd65e"
            },
            "displayName": "Push Wait Node",
            "nodeType": "PushWaitNode",
            "x": 925,
            "y": 2648.015625
          },
          "8c868ac4-8968-40ab-96f9-d36934222543": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "81cf3ce9-ecbb-4bc9-a9d5-b7fa0a236dff"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 1404,
            "y": 133
          },
          "94ef4faf-9473-4a2a-b6cf-7a6fdb2044e5": {
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "failure": "e301438c-0bd0-429c-ab0c-66126501069a",
              "noDevice": "e301438c-0bd0-429c-ab0c-66126501069a",
              "recoveryCode": "0409a2e1-e904-49f6-a191-fd84d3ddf87e",
              "success": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "unsupported": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "displayName": "WebAuthn Authentication Node",
            "nodeType": "WebAuthnAuthenticationNode",
            "x": 530,
            "y": 444.015625
          },
          "98be3ae4-cf6a-46fc-80f1-3a729c6f8174": {
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "False": "e301438c-0bd0-429c-ab0c-66126501069a",
              "True": "4995115d-9526-436a-89c3-6adfb9bcba55"
            },
            "displayName": "Twilio Identifier",
            "nodeType": "VerifyAuthIdentifierNode",
            "x": 553,
            "y": 107.515625
          },
          "98c97a2c-8e15-4efa-a9c4-0078226bfba2": {
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "sent": "ed7d4cf4-6f00-4de7-b17a-d3cbc4ed754d"
            },
            "displayName": "Email OTP Sender",
            "nodeType": "ScriptedDecisionNode",
            "x": 810,
            "y": 20
          },
          "98e57547-259e-4d15-b441-d0ee27f73df9": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Email Magic Link",
            "nodeType": "EmailSuspendNode",
            "x": 230,
            "y": 862.015625
          },
          "a1498c9b-962e-4625-b4c9-818243b6f8b2": {
            "connections": {
              "NOT_REGISTERED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "SENT": "59a0d6b7-8eca-4bfd-89ce-e9b7ab158063"
            },
            "displayName": "Push Sender",
            "nodeType": "PushAuthenticationSenderNode",
            "x": 573,
            "y": 2646.015625
          },
          "a490a5eb-faed-466f-ae03-482382690311": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "c8cec833-42a8-4007-85de-551996cefd72"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 1206,
            "y": 2467.015625
          },
          "a8ff526f-2c00-4379-8232-8d306fabd326": {
            "connections": {
              "true": "7799c177-e762-41b3-a671-39fed29ff4fc"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 533,
            "y": 1270.015625
          },
          "a98fa6df-16a6-438f-84dc-fc1f09ffc9c2": {
            "connections": {
              "true": "0409a2e1-e904-49f6-a191-fd84d3ddf87e"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 527.75,
            "y": 1142.01953125
          },
          "b31a399a-0ec1-4d38-9cfc-915f0d0001ef": {
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "False": "e301438c-0bd0-429c-ab0c-66126501069a",
              "True": "30e3823a-7bad-41bb-926c-b422c8ecbdca"
            },
            "displayName": "Twilio Identifier",
            "nodeType": "VerifyAuthIdentifierNode",
            "x": 547,
            "y": 250.03125
          },
          "b5a5662c-9437-4a7a-9e52-4c9ab361ff52": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "a1498c9b-962e-4625-b4c9-818243b6f8b2"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 571,
            "y": 2475.015625
          },
          "b734fc3e-0bfc-4da6-aae8-acfd1c3abae0": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "59664a6b-2d5e-445a-9405-aeb190e9f22a"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 576,
            "y": 2176.515625
          },
          "bb2158c7-d18a-4b49-a41e-57c7094267ff": {
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "false": "636138e3-15ae-4e2c-9e60-8276600a064d",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Collect OTP",
            "nodeType": "PageNode",
            "x": 1095.984375,
            "y": 326.015625
          },
          "c8cec833-42a8-4007-85de-551996cefd72": {
            "connections": {
              "true": "770a8498-eec7-4e0e-bf45-561a5abdd65e"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 1170,
            "y": 2331.015625
          },
          "cd851eec-ac37-4244-9614-f32070ebda4d": {
            "connections": {
              "outcome": "98c97a2c-8e15-4efa-a9c4-0078226bfba2"
            },
            "displayName": "HOTP Generator",
            "nodeType": "OneTimePasswordGeneratorNode",
            "x": 545,
            "y": 36.015625
          },
          "d3cc1103-6df4-4ef1-9909-7564ee9a3aab": {
            "connections": {
              "failureOutcome": "b734fc3e-0bfc-4da6-aae8-acfd1c3abae0",
              "notRegisteredOutcome": "e301438c-0bd0-429c-ab0c-66126501069a",
              "recoveryCodeOutcome": "7799c177-e762-41b3-a671-39fed29ff4fc",
              "successOutcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Enter Verification Code",
            "nodeType": "PageNode",
            "x": 573,
            "y": 1845.015625
          },
          "ed7d4cf4-6f00-4de7-b17a-d3cbc4ed754d": {
            "connections": {
              "false": "8c868ac4-8968-40ab-96f9-d36934222543",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Collect OTP",
            "nodeType": "PageNode",
            "x": 1100,
            "y": 13.015625
          },
          "f99ab073-cd97-448e-9e9c-fe84417b9728": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "a8ff526f-2c00-4379-8232-8d306fabd326"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 574.7142857142858,
            "y": 1407.950892857143
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1628,
            "y": 1175
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1303,
            "y": 1072
          },
          "startNode": {
            "x": 50,
            "y": 250
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "002f4399-409c-47da-84ec-cf36f2b46364": {
          "_id": "002f4399-409c-47da-84ec-cf36f2b46364",
          "_rev": "987999933",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "0409a2e1-e904-49f6-a191-fd84d3ddf87e": {
          "_id": "0409a2e1-e904-49f6-a191-fd84d3ddf87e",
          "_rev": "628385415",
          "nodes": [
            {
              "_id": "e1493923-a236-49d8-81c3-7c2cbf08e117",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Recovery Code"
            },
            {
              "_id": "5dfec213-a581-4c59-bb74-0dd2b7911a7d",
              "nodeType": "RecoveryCodeCollectorDecisionNode",
              "displayName": "WEB_AUTHN Recovery Code Collector Decision"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Recovery Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "18dfa03c-f023-4f65-9abc-670469baf414": {
          "_id": "18dfa03c-f023-4f65-9abc-670469baf414",
          "_rev": "1598906216",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "30e3823a-7bad-41bb-926c-b422c8ecbdca": {
          "_id": "30e3823a-7bad-41bb-926c-b422c8ecbdca",
          "_rev": "-1602987327",
          "accountSID": "enterYourSIDHere",
          "authToken": null,
          "channel": "CALL",
          "identifierSharedState": "userIdentifier",
          "serviceSID": "enterYourServiceSIDHere",
          "requestIdentifier": false,
          "_type": {
            "_id": "VerifyAuthSenderNode",
            "name": "Twilio Verify Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        },
        "4995115d-9526-436a-89c3-6adfb9bcba55": {
          "_id": "4995115d-9526-436a-89c3-6adfb9bcba55",
          "_rev": "-1414411110",
          "accountSID": "enterYourSIDHere",
          "authToken": null,
          "channel": "SMS",
          "identifierSharedState": "userIdentifier",
          "serviceSID": "enterYourServiceSIDHere",
          "requestIdentifier": false,
          "_type": {
            "_id": "VerifyAuthSenderNode",
            "name": "Twilio Verify Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        },
        "59664a6b-2d5e-445a-9405-aeb190e9f22a": {
          "_id": "59664a6b-2d5e-445a-9405-aeb190e9f22a",
          "_rev": "-922653905",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "59a0d6b7-8eca-4bfd-89ce-e9b7ab158063": {
          "_id": "59a0d6b7-8eca-4bfd-89ce-e9b7ab158063",
          "_rev": "939252760",
          "_type": {
            "_id": "PushResultVerifierNode",
            "name": "Push Result Verifier Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "TRUE",
              "displayName": "Success"
            },
            {
              "id": "FALSE",
              "displayName": "Failure"
            },
            {
              "id": "EXPIRED",
              "displayName": "Expired"
            },
            {
              "id": "WAITING",
              "displayName": "Waiting"
            }
          ]
        },
        "636138e3-15ae-4e2c-9e60-8276600a064d": {
          "_id": "636138e3-15ae-4e2c-9e60-8276600a064d",
          "_rev": "-37921532",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "770a8498-eec7-4e0e-bf45-561a5abdd65e": {
          "_id": "770a8498-eec7-4e0e-bf45-561a5abdd65e",
          "_rev": "1932310305",
          "nodes": [
            {
              "_id": "87adffea-b2ca-46f7-8e43-eb8c7f7685c9",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Recovery Code"
            },
            {
              "_id": "a22f52bc-5630-4284-ae20-13984442cc53",
              "nodeType": "RecoveryCodeCollectorDecisionNode",
              "displayName": "PUSH Recovery Code Collector Decision"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Recovery Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "7799c177-e762-41b3-a671-39fed29ff4fc": {
          "_id": "7799c177-e762-41b3-a671-39fed29ff4fc",
          "_rev": "-582216891",
          "nodes": [
            {
              "_id": "f4301063-839c-46ec-93ed-991a023ae879",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Recovery Code"
            },
            {
              "_id": "302139fc-7519-450e-8545-9b3afc6e7160",
              "nodeType": "RecoveryCodeCollectorDecisionNode",
              "displayName": "OATH Recovery Code Collector Decision"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Recovery Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "80882d0b-74fe-4b27-ab1b-382124a52110": {
          "_id": "80882d0b-74fe-4b27-ab1b-382124a52110",
          "_rev": "-1277537515",
          "nodes": [
            {
              "_id": "7899a7bf-06d5-4c84-be26-75d23f4e26f4",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Select MFA Device"
            }
          ],
          "pageDescription": {
            "en": "Select an MFA method to use to sign on to your account."
          },
          "pageHeader": {
            "en": "Select Authentication Method"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "EMAIL",
              "displayName": "EMAIL"
            },
            {
              "id": "SMS",
              "displayName": "SMS"
            },
            {
              "id": "VOICE",
              "displayName": "VOICE"
            },
            {
              "id": "FIDO2",
              "displayName": "FIDO2"
            },
            {
              "id": "OATH",
              "displayName": "OATH"
            },
            {
              "id": "PUSH",
              "displayName": "PUSH"
            },
            {
              "id": "Magic Link",
              "displayName": "Magic Link"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "81cf3ce9-ecbb-4bc9-a9d5-b7fa0a236dff": {
          "_id": "81cf3ce9-ecbb-4bc9-a9d5-b7fa0a236dff",
          "_rev": "612490028",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "8bfbf631-10d3-4bcb-a72a-3e3c3aa8dec1": {
          "_id": "8bfbf631-10d3-4bcb-a72a-3e3c3aa8dec1",
          "_rev": "-647965069",
          "challengeMessage": {},
          "exitMessage": {},
          "waitingMessage": {},
          "secondsToWait": 5,
          "_type": {
            "_id": "PushWaitNode",
            "name": "Push Wait Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "DONE",
              "displayName": "Done"
            },
            {
              "id": "EXITED",
              "displayName": "Exit"
            }
          ]
        },
        "8c868ac4-8968-40ab-96f9-d36934222543": {
          "_id": "8c868ac4-8968-40ab-96f9-d36934222543",
          "_rev": "721690457",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "94ef4faf-9473-4a2a-b6cf-7a6fdb2044e5": {
          "_id": "94ef4faf-9473-4a2a-b6cf-7a6fdb2044e5",
          "_rev": "-845770015",
          "detectSignCountMismatch": false,
          "requiresResidentKey": false,
          "asScript": true,
          "origins": [],
          "userVerificationRequirement": "PREFERRED",
          "isRecoveryCodeAllowed": true,
          "timeout": 60,
          "_type": {
            "_id": "WebAuthnAuthenticationNode",
            "name": "WebAuthn Authentication Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "unsupported",
              "displayName": "Unsupported"
            },
            {
              "id": "noDevice",
              "displayName": "No Device Registered"
            },
            {
              "id": "success",
              "displayName": "Success"
            },
            {
              "id": "failure",
              "displayName": "Failure"
            },
            {
              "id": "error",
              "displayName": "Client Error"
            },
            {
              "id": "recoveryCode",
              "displayName": "Recovery Code"
            }
          ]
        },
        "98be3ae4-cf6a-46fc-80f1-3a729c6f8174": {
          "_id": "98be3ae4-cf6a-46fc-80f1-3a729c6f8174",
          "_rev": "-641543409",
          "identifierAttribute": "telephoneNumber",
          "identifierSharedState": "userIdentifier",
          "_type": {
            "_id": "VerifyAuthIdentifierNode",
            "name": "Twilio Identifier",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "True",
              "displayName": "True"
            },
            {
              "id": "False",
              "displayName": "False"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "98c97a2c-8e15-4efa-a9c4-0078226bfba2": {
          "_id": "98c97a2c-8e15-4efa-a9c4-0078226bfba2",
          "_rev": "388622332",
          "script": "e1781e83-6188-4647-ac44-95718fe949b6",
          "outcomes": [
            "sent",
            "error",
            "noMail"
          ],
          "outputs": [
            "error"
          ],
          "inputs": [
            "_id",
            "oneTimePassword"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "sent",
              "displayName": "sent"
            },
            {
              "id": "error",
              "displayName": "error"
            },
            {
              "id": "noMail",
              "displayName": "noMail"
            }
          ]
        },
        "98e57547-259e-4d15-b441-d0ee27f73df9": {
          "_id": "98e57547-259e-4d15-b441-d0ee27f73df9",
          "_rev": "-1917446097",
          "emailSuspendMessage": {
            "en": "An email has been sent to the address you entered. Click the link in that email to proceed."
          },
          "emailTemplateName": "magicLinkTemplate",
          "identityAttribute": "userName",
          "emailAttribute": "mail",
          "objectLookup": true,
          "_type": {
            "_id": "EmailSuspendNode",
            "name": "Email Suspend Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "a1498c9b-962e-4625-b4c9-818243b6f8b2": {
          "_id": "a1498c9b-962e-4625-b4c9-818243b6f8b2",
          "_rev": "542138700",
          "captureFailure": false,
          "contextInfo": false,
          "userMessage": {},
          "pushType": "DEFAULT",
          "customPayload": [],
          "mandatory": true,
          "messageTimeout": 120000,
          "_type": {
            "_id": "PushAuthenticationSenderNode",
            "name": "Push Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "SENT",
              "displayName": "Sent"
            },
            {
              "id": "NOT_REGISTERED",
              "displayName": "Not Registered"
            }
          ]
        },
        "a490a5eb-faed-466f-ae03-482382690311": {
          "_id": "a490a5eb-faed-466f-ae03-482382690311",
          "_rev": "849273228",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "a8ff526f-2c00-4379-8232-8d306fabd326": {
          "_id": "a8ff526f-2c00-4379-8232-8d306fabd326",
          "_rev": "-1585777849",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "a98fa6df-16a6-438f-84dc-fc1f09ffc9c2": {
          "_id": "a98fa6df-16a6-438f-84dc-fc1f09ffc9c2",
          "_rev": "1214649668",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "b31a399a-0ec1-4d38-9cfc-915f0d0001ef": {
          "_id": "b31a399a-0ec1-4d38-9cfc-915f0d0001ef",
          "_rev": "627838710",
          "identifierAttribute": "telephoneNumber",
          "identifierSharedState": "userIdentifier",
          "_type": {
            "_id": "VerifyAuthIdentifierNode",
            "name": "Twilio Identifier",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "True",
              "displayName": "True"
            },
            {
              "id": "False",
              "displayName": "False"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "b5a5662c-9437-4a7a-9e52-4c9ab361ff52": {
          "_id": "b5a5662c-9437-4a7a-9e52-4c9ab361ff52",
          "_rev": "-1584820162",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "b734fc3e-0bfc-4da6-aae8-acfd1c3abae0": {
          "_id": "b734fc3e-0bfc-4da6-aae8-acfd1c3abae0",
          "_rev": "1474419785",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "bb2158c7-d18a-4b49-a41e-57c7094267ff": {
          "_id": "bb2158c7-d18a-4b49-a41e-57c7094267ff",
          "_rev": "1646362537",
          "nodes": [
            {
              "_id": "c3535f49-7206-4324-afaf-906d170aec63",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate OTP"
            },
            {
              "_id": "dbf4ecff-eda4-433b-bd96-97df9ed1d972",
              "nodeType": "VerifyAuthCollectorDecisionNode",
              "displayName": "Twilio Verify Collector Decision"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Passcode"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        },
        "c8cec833-42a8-4007-85de-551996cefd72": {
          "_id": "c8cec833-42a8-4007-85de-551996cefd72",
          "_rev": "1148103131",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "cd851eec-ac37-4244-9614-f32070ebda4d": {
          "_id": "cd851eec-ac37-4244-9614-f32070ebda4d",
          "_rev": "-1580856913",
          "length": 6,
          "_type": {
            "_id": "OneTimePasswordGeneratorNode",
            "name": "HOTP Generator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "d3cc1103-6df4-4ef1-9909-7564ee9a3aab": {
          "_id": "d3cc1103-6df4-4ef1-9909-7564ee9a3aab",
          "_rev": "1772733674",
          "nodes": [
            {
              "_id": "a29058d0-39c9-4d32-9d04-6539c0d4dec1",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Verification Code"
            },
            {
              "_id": "7fc54e19-7087-48ea-a2df-ae717d5c0d3d",
              "nodeType": "OathTokenVerifierNode",
              "displayName": "OATH Token Verifier"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Verification Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            },
            {
              "id": "recoveryCodeOutcome",
              "displayName": "Recovery Code"
            }
          ]
        },
        "ed7d4cf4-6f00-4de7-b17a-d3cbc4ed754d": {
          "_id": "ed7d4cf4-6f00-4de7-b17a-d3cbc4ed754d",
          "_rev": "-1646999022",
          "nodes": [
            {
              "_id": "47c857fd-24c1-4aa7-b321-d00aab1dc8ad",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate OTP"
            },
            {
              "_id": "0712c981-bc98-4e58-a918-63c17aca1427",
              "nodeType": "OneTimePasswordCollectorDecisionNode",
              "displayName": "OTP Collector Decision"
            }
          ],
          "pageDescription": {
            "en": "Enter the passcode you received."
          },
          "pageHeader": {
            "en": "Enter Passcode"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "f99ab073-cd97-448e-9e9c-fe84417b9728": {
          "_id": "f99ab073-cd97-448e-9e9c-fe84417b9728",
          "_rev": "1257515647",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        }
      },
      "innerNodes": {
        "e1493923-a236-49d8-81c3-7c2cbf08e117": {
          "_id": "e1493923-a236-49d8-81c3-7c2cbf08e117",
          "_rev": "330565381",
          "script": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "5dfec213-a581-4c59-bb74-0dd2b7911a7d": {
          "_id": "5dfec213-a581-4c59-bb74-0dd2b7911a7d",
          "_rev": "-1805539334",
          "recoveryCodeType": "WEB_AUTHN",
          "_type": {
            "_id": "RecoveryCodeCollectorDecisionNode",
            "name": "Recovery Code Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "87adffea-b2ca-46f7-8e43-eb8c7f7685c9": {
          "_id": "87adffea-b2ca-46f7-8e43-eb8c7f7685c9",
          "_rev": "-247582262",
          "script": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "a22f52bc-5630-4284-ae20-13984442cc53": {
          "_id": "a22f52bc-5630-4284-ae20-13984442cc53",
          "_rev": "450794443",
          "recoveryCodeType": "PUSH",
          "_type": {
            "_id": "RecoveryCodeCollectorDecisionNode",
            "name": "Recovery Code Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "f4301063-839c-46ec-93ed-991a023ae879": {
          "_id": "f4301063-839c-46ec-93ed-991a023ae879",
          "_rev": "1447861492",
          "script": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "302139fc-7519-450e-8545-9b3afc6e7160": {
          "_id": "302139fc-7519-450e-8545-9b3afc6e7160",
          "_rev": "-246476623",
          "recoveryCodeType": "OATH",
          "_type": {
            "_id": "RecoveryCodeCollectorDecisionNode",
            "name": "Recovery Code Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "7899a7bf-06d5-4c84-be26-75d23f4e26f4": {
          "_id": "7899a7bf-06d5-4c84-be26-75d23f4e26f4",
          "_rev": "1396721931",
          "script": "6291a5b7-a262-4127-a5df-8ea238da4796",
          "outcomes": [
            "EMAIL",
            "SMS",
            "VOICE",
            "FIDO2",
            "OATH",
            "PUSH",
            "Magic Link",
            "Error"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id",
            "ciam_allowedMFATypes",
            "ciam_magicLinkEnabled"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "EMAIL",
              "displayName": "EMAIL"
            },
            {
              "id": "SMS",
              "displayName": "SMS"
            },
            {
              "id": "VOICE",
              "displayName": "VOICE"
            },
            {
              "id": "FIDO2",
              "displayName": "FIDO2"
            },
            {
              "id": "OATH",
              "displayName": "OATH"
            },
            {
              "id": "PUSH",
              "displayName": "PUSH"
            },
            {
              "id": "Magic Link",
              "displayName": "Magic Link"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "c3535f49-7206-4324-afaf-906d170aec63": {
          "_id": "c3535f49-7206-4324-afaf-906d170aec63",
          "_rev": "-2009287223",
          "script": "6ce5e10e-76a0-4172-b0cd-c2dcaeb7ef92",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "dbf4ecff-eda4-433b-bd96-97df9ed1d972": {
          "_id": "dbf4ecff-eda4-433b-bd96-97df9ed1d972",
          "_rev": "1893634823",
          "hideCode": true,
          "resendButtonText": "resend",
          "showCancelButton": false,
          "cancelButtonText": "cancel",
          "identifierSharedState": "userIdentifier",
          "nextButtonText": "next",
          "showResendButton": false,
          "_type": {
            "_id": "VerifyAuthCollectorDecisionNode",
            "name": "Twilio Verify Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        },
        "a29058d0-39c9-4d32-9d04-6539c0d4dec1": {
          "_id": "a29058d0-39c9-4d32-9d04-6539c0d4dec1",
          "_rev": "-446985481",
          "script": "07e3c04a-1cf0-42e9-ab80-c9c06634c530",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "7fc54e19-7087-48ea-a2df-ae717d5c0d3d": {
          "_id": "7fc54e19-7087-48ea-a2df-ae717d5c0d3d",
          "_rev": "-181864436",
          "totpTimeInterval": 30,
          "maximumAllowedClockDrift": 5,
          "totpTimeSteps": 2,
          "totpHashAlgorithm": "HMAC_SHA1",
          "isRecoveryCodeAllowed": true,
          "algorithm": "TOTP",
          "hotpWindowSize": 100,
          "_type": {
            "_id": "OathTokenVerifierNode",
            "name": "OATH Token Verifier",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            },
            {
              "id": "recoveryCodeOutcome",
              "displayName": "Recovery Code"
            }
          ]
        },
        "47c857fd-24c1-4aa7-b321-d00aab1dc8ad": {
          "_id": "47c857fd-24c1-4aa7-b321-d00aab1dc8ad",
          "_rev": "1448800496",
          "script": "6ce5e10e-76a0-4172-b0cd-c2dcaeb7ef92",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "oneTimePassword",
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "0712c981-bc98-4e58-a918-63c17aca1427": {
          "_id": "0712c981-bc98-4e58-a918-63c17aca1427",
          "_rev": "487713158",
          "passwordExpiryTime": 5,
          "_type": {
            "_id": "OneTimePasswordCollectorDecisionNode",
            "name": "OTP Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        }
      },
      "scripts": {
        "86e5bf13-4882-4032-8fb7-f75dd7fa7b82": {
          "_id": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "name": "OOTB - Set Invalid Code Error Message Script",
          "description": "Script to set invalid code error message",
          "script": "\"/*\\n * Invalid Code Error Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * Sets an \\\"Invalid Code\\\" error message in shared state, which can be displayed on the last UI Node.\\n *\\n * Script Inputs  : null  \\n *\\n * Script Outputs :  \\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Error message for invalid code  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message  \\n *    - \\\"errorDetails\\\" (String) - Debugging details  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Error message set)  \\n *    - \\\"Error\\\" (Execution failure)  \\n */\\n\\ntry {\\n    // Set the below error message in shared state, to display on the last UI Node\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"Invalid Code\\\");\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507163,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090711974,
          "evaluatorVersion": "2.0"
        },
        "e1781e83-6188-4647-ac44-95718fe949b6": {
          "_id": "e1781e83-6188-4647-ac44-95718fe949b6",
          "name": "OOTB - Send Email OTP Script",
          "description": "Script to send OTP to registered email",
          "script": "\"/* OTP Email Sender\\n *\\n * Author: Ping Identity\\n * Version: 1.0\\n * Date: 03/28/2025\\n * \\n * This script sends an email containing a one-time password (HOTP) to a user's email address.\\n * It is used within a journey that requires sending an OTP for verification or authentication purposes.\\n * \\n * This script does not need to be parametrized. It will work properly as is, assuming the necessary inputs are available in the shared or node state.\\n * \\n * Script Inputs:\\n *    - \\\"_id\\\" (String) - User ID. Retrieved from nodeState.\\n *    - \\\"oneTimePassword\\\" (String) - The generated OTP to be sent to the user. Retrieved from nodeState.\\n *\\n * Outcomes:\\n *    - \\\"sent\\\" (PASS) - Email successfully sent.\\n *    - \\\"noMail\\\" (FAIL) - No email address found, email not sent.\\n *    - \\\"error\\\" (ERROR) - An error occurred while processing the email sending.\\n *\\n * Notes:\\n *    - The script uses the IDM Email Service openidm binding for sending templated emails.\\n *    - Ensure the necessary attributes are available in sharedState or nodeState for successful execution.\\n */\\n/**\\n * Script configuration\\n*/\\nvar config = {\\n    /**\\n     * @property {string} templateID - Identifier of email template\\n     * @property {string} idmEndpoint - IDM Endpoint used to send templated emails\\n     * @property {string} idmAction - IDM action executed against the idmEndpoint\\n     */\\n    templateID: \\\"otp\\\",\\n    idmEndpoint: \\\"external/email\\\",\\n    idmAction: \\\"sendTemplate\\\"\\n};\\n/**\\n * Node outcomes\\n*/\\nvar nodeOutcome = {\\n    PASS: \\\"sent\\\",\\n    FAIL: \\\"noMail\\\",\\n    ERROR: \\\"error\\\"\\n};\\n/**\\n * Send email via the IDM Email Service openidm binding in next-gen scripting\\n *\\n * @param {string} hotp - HOTP retrieved from transientState\\n * @param {string} mail - mail attribute retrieved from the idRepository. Note if this is a registration journey acquire mail from sharedState\\n * @param {string} givenName - givenName attribute retrieved from the idRepository. Note if this is a registration journey acquire givenName from sharedState\\n */\\nfunction sendMail(hotp, mail, givenName) {\\n    try {\\n        var params = new Object();\\n        params.templateName = config.templateID;\\n        params.to = mail;\\n        params.object = {\\n            \\\"givenName\\\": givenName,\\n            \\\"otp\\\": hotp\\n        };\\n        openidm.action(config.idmEndpoint, config.idmAction, params);\\n        //Email send successfully\\n        return nodeOutcome.PASS;\\n    }\\n    catch (e) {\\n       // Failed to call IDM Email endpoint using template.\\n        return nodeOutcome.ERROR;\\n    }\\n};\\n/**\\n * Main function\\n */\\n(function () {\\n   // Node execution started\\n    var id;\\n    var hotp;\\n    var mail;\\n    if (!(id = nodeState.get(\\\"_id\\\"))) {\\n       // Unable to retrieve Identity\\n        action.goTo(nodeOutcome.ERROR);\\n        return;\\n    } else {\\n        var identity = idRepository.getIdentity(id);\\n    }\\n    if (!(hotp = nodeState.get(\\\"oneTimePassword\\\"))) {\\n       // Unable to retrieve HOTP from state\\n        action.goTo(nodeOutcome.ERROR);\\n        return;\\n    }\\n    //If this is a registration journey adapt the following to try retrieve from nodeState\\n    if (!(mail = identity.getAttributeValues(\\\"mail\\\").toArray()[0])) {\\n     //   Unable to retrieve mail attribute from the idRepository\\n        action.goTo(nodeOutcome.FAIL);\\n        return;\\n    }\\n    //If this is a registration journey adapt the following to try retrieve from nodeState\\n    //Be sure to set givenName against the user\\n    if (!(givenName = identity.getAttributeValues(\\\"givenName\\\").toArray()[0])) {\\n      // Unable to retrieve givenName attribute from the idRepository\\n        action.goTo(nodeOutcome.FAIL);\\n        return;\\n    }\\n    //Execute function to send mail\\n    outcome = sendMail(hotp, mail, givenName);\\n})();\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743151896104,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744225064768,
          "evaluatorVersion": "2.0"
        },
        "be50351b-c077-4827-b9aa-3a61a08b30f9": {
          "_id": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "name": "OOTB - Validate Recovery Code Input Script",
          "description": "Script to validate Recovery code input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"/*\\n * Recovery Code Input Validation Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * This script ensures that the recovery code input follows a strict 10-character requirement.\\n * It prevents form submission until a valid code is entered and dynamically enables/disables the submit button.\\n *\\n * Script Inputs  :  \\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Error message displayed when an incorrect recovery code is entered.  \\n *\\n * Script Outputs :  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure.  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging.  \\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Cleared out to reset error states.  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Validation script injected successfully).  \\n *    - \\\"Error\\\" (Unexpected execution failure).  \\n */\\n\\ntry {\\n    /**\\n     * Returns a JavaScript string that:\\n     * - Ensures the recovery code is exactly 10 characters long.\\n     * - Disables the submit button until a valid input is entered.\\n     * - Observes DOM changes and initializes validation dynamically.\\n     */\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                    if(submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        const recoveryCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Recovery Code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (recoveryCode && submitBtn) { \\\\n\\\\\\n                            // Set the maxlength attribute to 10 \\\\n\\\\\\n                            recoveryCode.setAttribute('maxlength', 10); \\\\n\\\\\\n                            const enableSubmitBtn = () => { \\\\n\\\\\\n                                // Check input validity before enabling submit button \\\\n\\\\\\n                                const isValidInput = recoveryCode.value.length === 10; \\\\n\\\\\\n                                if (isValidInput) { \\\\n\\\\\\n                                    submitBtn.disabled = false; \\\\n\\\\\\n                                } else { \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }; \\\\n\\\\\\n                            // Revalidate before form submission \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                const isValidInput = recoveryCode.value.length === 10; \\\\n\\\\\\n                                if (!isValidInput) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            recoveryCode.addEventListener('input', enableSubmitBtn); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    // If the recovery code field exists, initialize validation. Otherwise, observe DOM changes. \\\\n\\\\\\n                    if (document.querySelectorAll('input[data-vv-as=\\\\\\\"Recovery Code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                    else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                    } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    // Retrieve any previous invalid code error message\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n\\n    // Clear the invalidCodeErrorMessage to reset the error state\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n    \\n    if (callbacks.isEmpty()) {                \\n        // Display an error message if the previous recovery code attempt was invalid\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) {\\n            callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        }\\n\\n        // Inject validation script into the UI\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n\\n    // Proceed to the success path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507315,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090711981,
          "evaluatorVersion": "2.0"
        },
        "6291a5b7-a262-4127-a5df-8ea238da4796": {
          "_id": "6291a5b7-a262-4127-a5df-8ea238da4796",
          "name": "OOTB - Get User's Registered MFA Devices Script",
          "description": "Script to fetch user's registered MFA methods",
          "script": "\"/*\\n * MFA Device Selection Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * This script determines which MFA devices are available to the user based on their profile and administrative policy.\\n * It builds a list of usable MFA devices (filtered by policy), retrieves the latest registered option, and injects\\n * a choice callback into the UI. If Magic Link authentication is enabled, it is added as an additional option.\\n *\\n * Script Inputs  :  \\n *    - \\\"_id\\\" (String) - The unique identifier of the user.  \\n *    - \\\"ciam_allowedMFATypes\\\" (Array) - List of MFA methods allowed by admin policy.  \\n *    - \\\"ciam_magicLinkEnabled\\\" (Boolean) - Indicates if Magic Link authentication is permitted.  \\n *\\n * Script Outputs :  \\n *    - \\\"usableMFADevices\\\" (Array) - Filtered list of MFA methods the user is eligible to use.  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure.  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging.  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (An MFA device has been selected and validated).  \\n *    - \\\"Error\\\" (Unexpected execution failure or no usable MFA device available).  \\n */\\n\\ntry {\\n    // Retrieve user ID and allowed MFA devices\\n    var userId = nodeState.get(\\\"_id\\\");\\n    var allowedMFAMethods = nodeState.get(\\\"ciam_allowedMFATypes\\\");\\n    \\n    var mfaMapping = {\\n        \\\"EMAIL\\\": \\\"allowEmail\\\",\\n        \\\"SMS\\\": \\\"allowSMS\\\",\\n        \\\"VOICE\\\": \\\"allowVoice\\\",\\n        \\\"OATH\\\": \\\"allowOATH\\\",\\n        \\\"PUSH\\\": \\\"allowPush\\\",\\n        \\\"FIDO2\\\": \\\"allowFIDO2\\\"\\n    };\\n    \\n    var allowEmail = false, allowSMS = false, allowVoice = false, allowOATH = false, allowPush = false, allowFIDO2 = false;\\n    \\n    allowedMFAMethods.forEach(device => {\\n        if (mfaMapping[device]) {\\n            this[mfaMapping[device]] = true;\\n        }\\n    });\\n    \\n    var mfaDevicesObj = openidm.read(\\\"managed/alpha_user/\\\" + userId, null, [\\\"custom_mfaDevices\\\"]);\\n    var mfaDevices = (mfaDevicesObj && mfaDevicesObj.custom_mfaDevices) ? mfaDevicesObj.custom_mfaDevices : [];\\n    \\n    // By default returned mfaDevices is of Object type so values are parsed in a new array\\n    var usableMFADevices = [];\\n    \\n    // Store MFA devices and additional option in shared state    \\n    mfaDevices.forEach(device => {\\n        usableMFADevices.push(device);\\n    });\\n    \\n    usableMFADevices = usableMFADevices.filter(device =>\\n        (device === \\\"SMS\\\" && allowSMS) ||\\n        (device === \\\"EMAIL\\\" && allowEmail) ||\\n        (device === \\\"VOICE\\\" && allowVoice) ||\\n        (device === \\\"OATH\\\" && allowOATH) ||\\n        (device === \\\"PUSH\\\" && allowPush) ||\\n        (device === \\\"FIDO2\\\" && allowFIDO2)                               \\n    );\\n\\n    // Index of latest registered MFA device\\n    var idxLatestMFADevice = usableMFADevices ? usableMFADevices.length - 1 : -1;\\n    \\n    // Add Magic Link, if enabled by Admin\\n    var magicLinkEnabled = nodeState.get(\\\"ciam_magicLinkEnabled\\\");\\n    if(magicLinkEnabled) usableMFADevices.push(\\\"Magic Link\\\");\\n    \\n    // Handle callback logic\\n    if (callbacks.isEmpty()) {\\n      callbacksBuilder.choiceCallback(\\\"Select an MFA device\\\", usableMFADevices, idxLatestMFADevice, false);\\n    } else {\\n      // Callbacks returned from browser, save selected choice\\n      var index = callbacks.getChoiceCallbacks().get(0)[0];\\n      var selectedDevice = usableMFADevices[index] || null;\\n    \\n      if (!selectedDevice) {\\n        nodeState.putShared(\\\"errorMessage\\\", \\\"No registered MFA device found\\\");\\n        // Go to error  \\n        action.goTo(\\\"Error\\\");\\n      } else {\\n        // Go to authentication for that selected MFA device\\n        action.goTo(selectedDevice);\\n      }\\n    }\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743151896202,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744181249534,
          "evaluatorVersion": "2.0"
        },
        "6ce5e10e-76a0-4172-b0cd-c2dcaeb7ef92": {
          "_id": "6ce5e10e-76a0-4172-b0cd-c2dcaeb7ef92",
          "name": "OOTB - Validate OTP Input Script",
          "description": "Script to validate OTP input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"/*\\n * One-Time Password (OTP) Input Validation Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1 \\n * Date    : 03/28/2025  \\n *\\n * This script enforces input validation rules on OTP fields and ensures that only valid codes can be submitted.\\n * It dynamically applies constraints based on OTP length and handles UI updates.\\n *\\n * Script Inputs  :  \\n *    - \\\"oneTimePassword\\\" (String) - OTP generated by a prior node (HOTP Generator, Twilio, etc.).  \\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Error message displayed when an incorrect OTP is entered.  \\n *\\n * Script Outputs :  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Cleared out to reset error states  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Validation script injected successfully)  \\n *    - \\\"Error\\\" (Unexpected execution failure)  \\n *\\n * Note:  \\n *    - If HOTP Generator node is used prior, \\\"oneTimePassword\\\" will be a transient state property,  \\n *      make sure to make it available in script inputs.  \\n *    - If the OTP is generated by Twilio nodes, the default length is set to 6 and only digits are considered.  \\n *      Modify this if necessary.  \\n */\\n\\ntry {\\n    /**\\n     * Returns a JavaScript string that:\\n     *  - Sets the max length for OTP input fields.\\n     *  - Enforces numeric-only input using pattern matching.\\n     *  - Disables the submit button until a valid OTP is entered.\\n     */\\n    function validateInput(otpLength) {\\n        return String(\\\" \\\\n\\\\\\n                    var otpLength = \\\" + otpLength + \\\" \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                    if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                    // Validate the passcode \\\\n\\\\\\n                    function validateCode() { \\\\n\\\\\\n                        const passcode = document.querySelectorAll('input[data-vv-as=\\\\\\\"One Time Password\\\\\\\"]')[0] || document.querySelectorAll('input[data-vv-as=\\\\\\\"Code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (passcode) { \\\\n\\\\\\n                            // Set input properties to prevent user tampering \\\\n\\\\\\n                            passcode.setAttribute('maxlength', otpLength); \\\\n\\\\\\n                            passcode.setAttribute('pattern', '[0-9]{' + otpLength + '}'); \\\\n\\\\\\n                            passcode.setAttribute('inputmode', 'numeric'); \\\\n\\\\\\n                            // Check if the input is exactly 6 digits long and numeric \\\\n\\\\\\n                            const isValidCode = new RegExp('^[0-9]{' + otpLength + '}$').test(passcode.value); \\\\n\\\\\\n                            submitBtn.disabled = !isValidCode; \\\\n\\\\\\n                            return isValidCode; \\\\n\\\\\\n                        } \\\\n\\\\\\n                        return false; \\\\n\\\\\\n                    }; \\\\n\\\\\\n                    \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        const passcode = document.querySelectorAll('input[data-vv-as=\\\\\\\"One Time Password\\\\\\\"]')[0] || document.querySelectorAll('input[data-vv-as=\\\\\\\"Code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (passcode && submitBtn) { \\\\n\\\\\\n                            passcode.addEventListener('input', validateCode); \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                if (!validateCode()) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    // For HOTP and Twilio OTP collector nodes, if either of the element is present, initialize validation \\\\n\\\\\\n                    if (document.querySelectorAll('input[data-vv-as=\\\\\\\"One Time Password\\\\\\\"]')[0] || document.querySelectorAll('input[data-vv-as=\\\\\\\"Code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                    else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                    } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    // Retrieve error message if the user entered an invalid OTP previously\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n    \\n    // Reset the error message for the next attempt\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n\\n    // Get \\\"oneTimePassword\\\" shared in transient state by the HOTP Generator node or default it to 6\\n    var otpLength = nodeState.get(\\\"oneTimePassword\\\") ? nodeState.get(\\\"oneTimePassword\\\").length : 6;\\n    \\n    if (callbacks.isEmpty()) {\\n        // Display error message if the previous OTP attempt was invalid\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) {\\n            callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        }\\n        \\n        // Inject validation script into the UI\\n        callbacksBuilder.scriptTextOutputCallback(validateInput(otpLength));\\n    }\\n\\n    // Proceed to success path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141508125,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090712072,
          "evaluatorVersion": "2.0"
        },
        "07e3c04a-1cf0-42e9-ab80-c9c06634c530": {
          "_id": "07e3c04a-1cf0-42e9-ab80-c9c06634c530",
          "name": "OOTB - Validate Verification Code Input Script",
          "description": "Script to validate verification code input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"/*\\n * Verification Code Validation Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * This script ensures that the user enters a valid 6-digit verification code before enabling the submit button.\\n * It prevents premature form submission and enforces numeric input constraints.\\n *\\n * Script Inputs:\\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Error message displayed when an incorrect verification code is entered.\\n *\\n * Script Outputs:\\n *    - \\\"errorMessage\\\" (String) - User-friendly error message if an error occurs.\\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging.\\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Cleared out after validation to reset error states.\\n *\\n * Outcomes:\\n *    - \\\"true\\\"  (Script executed successfully).\\n *    - \\\"Error\\\" (Unexpected failure).\\n */\\n\\ntry {\\n    /**\\n     * Returns a JavaScript string that:\\n     * - Ensures the verification code is exactly 6 digits long.\\n     * - Disables the submit button until a valid input is entered.\\n     * - Prevents form submission if the input is invalid.\\n     * - Observes DOM changes and initializes validation dynamically.\\n     */\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    // Validate the verification code \\\\n\\\\\\n                    function validateCode() { \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        const verificationCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (verificationCode) { \\\\n\\\\\\n                            // Restrict input to 6-digit numeric values \\\\n\\\\\\n                            verificationCode.setAttribute('maxlength', '6'); \\\\n\\\\\\n                            verificationCode.setAttribute('pattern', '[0-9]{6}'); \\\\n\\\\\\n                            verificationCode.setAttribute('inputmode', 'numeric'); \\\\n\\\\\\n                            \\\\n\\\\\\n                            // Validate the input format \\\\n\\\\\\n                            const isValidCode = /^[0-9]{6}$/.test(verificationCode.value); \\\\n\\\\\\n                            submitBtn.disabled = !isValidCode; \\\\n\\\\\\n                            return isValidCode; \\\\n\\\\\\n                        } \\\\n\\\\\\n                        return false; \\\\n\\\\\\n                    }; \\\\n\\\\\\n                    \\\\n\\\\\\n                    // Prevent form submission via Enter key if input is invalid \\\\n\\\\\\n                    function preventEnterKeyDefault(event) { \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (event.key === 'Enter' && !validateCode()) { \\\\n\\\\\\n                            event.preventDefault(); \\\\n\\\\\\n                            if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        // Auto-submit and navigate to 'Not Registered' if the method is not registered for the user \\\\n\\\\\\n                        const nextBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (nextBtn) { \\\\n\\\\\\n                            nextBtn.style.visibility='hidden'; \\\\n\\\\\\n                            nextBtn.click(); \\\\n\\\\\\n                        } \\\\n\\\\\\n                        \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                        \\\\n\\\\\\n                        const verificationCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (verificationCode && submitBtn) { \\\\n\\\\\\n                            // Attach event listeners to handle validation dynamically \\\\n\\\\\\n                            verificationCode.addEventListener('input', validateCode); \\\\n\\\\\\n                            verificationCode.addEventListener('keypress', preventEnterKeyDefault); \\\\n\\\\\\n                            \\\\n\\\\\\n                            // Prevent form submission if input is invalid \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                if (!validateCode()) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    // If both elements are present, initialize validation \\\\n\\\\\\n                    if (document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0] && document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                    else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                    } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    // Retrieve any previous invalid code error message\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n\\n    // Clear the invalidCodeErrorMessage to reset the error state\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n    \\n    if (callbacks.isEmpty()) {\\n        // Display an error message if the previous verification code attempt was invalid\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) {\\n            callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        }\\n\\n        // Inject validation script into the UI\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n\\n    // Proceed to the success path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507663,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090711994,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {
        "magicLinkTemplate": {
          "_id": "emailTemplate/magicLinkTemplate",
          "advancedEditor": true,
          "defaultLocale": "en",
          "description": "To authenticate with email address ",
          "displayName": "Magic Link Template",
          "enabled": true,
          "from": "",
          "html": {
            "en": "",
            "fr": ""
          },
          "message": {
            "en": "<div style=\"display:block;text-align:center;font-family:sans-serif;border:1px solid #c5c5c5;width:400px;padding:30px 20px\">\n  <img src=\"https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png\" alt=\"Company Logo\" style=\"height:65px;margin-bottom:10px\" />\n  <h1>Sign On Request</h1>\n  <div style=\"margin-top:20px;margin-bottom:25px\">\n    <p>Please click the link below to authenticate. </p>\n    <a href=\"{{object.resumeURI}}\" style=\"font-size:14pt\">Complete Sign On</a>\n  </div>\n</div>",
            "fr": "<html>\n  <head></head>\n  <body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\">\n    <h3>Ceci est votre mail d'inscription.</h3>\n    <p>\n      <a href=\"{{object.resumeURI}}\" style=\"text-decoration: none; color: #109cf1;\">Lien de vérification email</a>\n    </p>\n  </body>\n</html>"
          },
          "mimeType": "text/html",
          "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
          "subject": {
            "en": "Sign On Request",
            "fr": "Créer un nouveau compte"
          },
          "templateId": "magicLinkTemplate"
        }
      },
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "CIAM Deep Fake - ID Verification And Issuance To Wallet Inner Journey": {
      "tree": {
        "_id": "CIAM Deep Fake - ID Verification And Issuance To Wallet Inner Journey",
        "_rev": "1904396254",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Deep Fake\"]"
        },
        "entryNodeId": "eb980b7d-e0db-4a0e-b969-1f63b0f4e099",
        "innerTreeOnly": false,
        "nodes": {
          "014492c6-4e97-4d37-b9cb-87e84fcd3ceb": {
            "connections": {
              "error": "e6e50f23-db28-49c9-97d0-9eba67a8f8d2",
              "success": "27aab0ab-e71f-4aa4-a91b-abc6a257cead"
            },
            "displayName": "PingOne Credentials Issue",
            "nodeType": "PingOneCredentialsIssue",
            "x": 1647,
            "y": 1838
          },
          "0fa70c07-8806-4163-95d8-c7c689c71145": {
            "connections": {
              "outcome": "10f7d6b8-caaf-48ec-997e-e731e2568bf1"
            },
            "displayName": "BIO_MATCH_Failed",
            "nodeType": "SetStateNode",
            "x": 2123,
            "y": 996.015625
          },
          "10f7d6b8-caaf-48ec-997e-e731e2568bf1": {
            "connections": {
              "false": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "PingOne Delete User",
            "nodeType": "PingOneDeleteUserNode",
            "x": 2110.25,
            "y": 1448.64453125
          },
          "1ab8dc7a-bafb-4946-8077-b1d308c8ec3a": {
            "connections": {
              "false": "ef4bf651-4834-496a-becb-c677a4a1a8f4",
              "true": "5febf5d7-2826-48c6-ba40-9e6564982bff"
            },
            "displayName": "Failure Message",
            "nodeType": "MessageNode",
            "x": 1184,
            "y": 126.015625
          },
          "1fc12095-12f7-4e1a-801c-4ea7895f1c57": {
            "connections": {
              "true": "a3b93248-73dc-4f83-a315-8c080f8c6052"
            },
            "displayName": "Toggle Allowed MFA Methods",
            "nodeType": "ScriptedDecisionNode",
            "x": 186,
            "y": 1638.015625
          },
          "2065bb86-0c64-4b32-8548-e7ca4434c767": {
            "connections": {
              "CONFIGURATION_FAILED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "failureOutcome": "7a3ad829-13bc-4e07-a614-eb23b35bf254",
              "successOutcome": "55fbecad-daf4-4317-8cbc-fece3cdfcb8b",
              "timeoutOutcome": "7a3ad829-13bc-4e07-a614-eb23b35bf254"
            },
            "displayName": "VERIFF: Verify Evaluation",
            "nodeType": "ConfigProviderNode",
            "x": 685,
            "y": 627.515625
          },
          "26937b0b-a67e-4edf-8d50-eeece5959030": {
            "connections": {
              "Bio_Match_Failed": "0fa70c07-8806-4163-95d8-c7c689c71145",
              "Success": "e3f2b265-4f2b-4fef-a158-d554d8943ac3"
            },
            "displayName": "Process Data From Govt Id",
            "nodeType": "ScriptedDecisionNode",
            "x": 1598,
            "y": 423.515625
          },
          "27aab0ab-e71f-4aa4-a91b-abc6a257cead": {
            "connections": {
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Success Credentials Issued",
            "nodeType": "PageNode",
            "x": 2097,
            "y": 1807.015625
          },
          "4639cd9c-4695-4c37-ab85-6922131733d0": {
            "connections": {
              "false": "eae38f78-1a89-403d-9836-9182221fc41c",
              "true": "5d7b86b2-6cba-4e3d-9e8b-20815f6cf68f"
            },
            "displayName": "PingOne Identity Match",
            "nodeType": "PingOneIdentityMatchNode",
            "x": 188.15625,
            "y": 1041.515625
          },
          "55fbecad-daf4-4317-8cbc-fece3cdfcb8b": {
            "connections": {
              "expiredOutcome": "7a3ad829-13bc-4e07-a614-eb23b35bf254",
              "failureOutcome": "7a3ad829-13bc-4e07-a614-eb23b35bf254",
              "notCompletedOutcome": "1ab8dc7a-bafb-4946-8077-b1d308c8ec3a",
              "notStartedOutcome": "1ab8dc7a-bafb-4946-8077-b1d308c8ec3a",
              "successOutcome": "9cb76e46-1b92-42f5-9c4e-3a6f8b524269"
            },
            "displayName": "PingOne Verify Completion Decision",
            "nodeType": "PingOneVerifyCompletionDecisionNode",
            "x": 1164.4765625,
            "y": 382.015625
          },
          "5d7b86b2-6cba-4e3d-9e8b-20815f6cf68f": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "4639cd9c-4695-4c37-ab85-6922131733d0"
            },
            "displayName": "PingOne Delete User",
            "nodeType": "PingOneDeleteUserNode",
            "x": 680,
            "y": 1164.03125
          },
          "5febf5d7-2826-48c6-ba40-9e6564982bff": {
            "connections": {
              "Bermuda": "2065bb86-0c64-4b32-8548-e7ca4434c767",
              "Brazil": "dc98fb37-972c-4a74-9a07-1daeba849df5",
              "India": "2065bb86-0c64-4b32-8548-e7ca4434c767",
              "Ireland": "dc98fb37-972c-4a74-9a07-1daeba849df5",
              "Japan": "dc98fb37-972c-4a74-9a07-1daeba849df5",
              "Mexico": "dc98fb37-972c-4a74-9a07-1daeba849df5",
              "Other": "dc98fb37-972c-4a74-9a07-1daeba849df5",
              "Philippines": "dc98fb37-972c-4a74-9a07-1daeba849df5",
              "Poland": "dc98fb37-972c-4a74-9a07-1daeba849df5",
              "United Kingdom": "2065bb86-0c64-4b32-8548-e7ca4434c767",
              "United States": "dc98fb37-972c-4a74-9a07-1daeba849df5",
              "error": "c6eeed1f-6fd9-4260-a888-b7646ea895a4"
            },
            "displayName": "Country Splitter",
            "nodeType": "ScriptedDecisionNode",
            "x": 205,
            "y": 211.515625
          },
          "650fafb9-0236-4968-8ea6-cd2a0f48e669": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "014492c6-4e97-4d37-b9cb-87e84fcd3ceb"
            },
            "displayName": "Prepare Data To Issue To Wallet",
            "nodeType": "ScriptedDecisionNode",
            "x": 1144,
            "y": 1445.421875
          },
          "7a3ad829-13bc-4e07-a614-eb23b35bf254": {
            "connections": {
              "true": "1ab8dc7a-bafb-4946-8077-b1d308c8ec3a"
            },
            "displayName": "Remove pingOneVerifyTransactionId From Shared State",
            "nodeType": "ScriptedDecisionNode",
            "x": 672,
            "y": 418.515625
          },
          "845d1c5c-5cd7-4de1-b2e6-ce02451fb53a": {
            "connections": {
              "FAILURE": "c6eeed1f-6fd9-4260-a888-b7646ea895a4",
              "PATCHED": "c09527a7-e2a2-4d06-bf01-38d376ec3a7a"
            },
            "displayName": "Update User",
            "nodeType": "PatchObjectNode",
            "x": 1638,
            "y": 673.515625
          },
          "975cd739-691c-41de-b325-48814e576b53": {
            "connections": {
              "false": "ef4bf651-4834-496a-becb-c677a4a1a8f4"
            },
            "displayName": "Failure Message",
            "nodeType": "MessageNode",
            "x": 698,
            "y": 1830.03125
          },
          "9cb76e46-1b92-42f5-9c4e-3a6f8b524269": {
            "connections": {
              "DONE": "26937b0b-a67e-4edf-8d50-eeece5959030"
            },
            "displayName": "Polling Wait Node",
            "nodeType": "PollingWaitNode",
            "x": 1634,
            "y": 155.515625
          },
          "a3b93248-73dc-4f83-a315-8c080f8c6052": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "fd8e7757-da6e-4b63-a38a-49783eeba3ab"
            },
            "displayName": "Verify Phone Number",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 197,
            "y": 1427.015625
          },
          "c09527a7-e2a2-4d06-bf01-38d376ec3a7a": {
            "connections": {
              "error": "e6e50f23-db28-49c9-97d0-9eba67a8f8d2",
              "success": "650fafb9-0236-4968-8ea6-cd2a0f48e669",
              "timeout": "e6e50f23-db28-49c9-97d0-9eba67a8f8d2"
            },
            "displayName": "PingOne Credentials Pair Wallet",
            "nodeType": "PingOneCredentialsPairWallet",
            "x": 676,
            "y": 1418.515625
          },
          "c6eeed1f-6fd9-4260-a888-b7646ea895a4": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "displayName": "PingOne Delete User",
            "nodeType": "PingOneDeleteUserNode",
            "x": 2119,
            "y": 559.015625
          },
          "d13f18a1-00bc-4aba-94a4-b3525cdaed1b": {
            "connections": {
              "outcome": "5febf5d7-2826-48c6-ba40-9e6564982bff"
            },
            "displayName": "Device Profile Collector",
            "nodeType": "DeviceProfileCollectorNode",
            "x": 188,
            "y": 680.03125
          },
          "dc98fb37-972c-4a74-9a07-1daeba849df5": {
            "connections": {
              "CONFIGURATION_FAILED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "failureOutcome": "7a3ad829-13bc-4e07-a614-eb23b35bf254",
              "successOutcome": "55fbecad-daf4-4317-8cbc-fece3cdfcb8b",
              "timeoutOutcome": "7a3ad829-13bc-4e07-a614-eb23b35bf254"
            },
            "displayName": "MITEK: Verify Evaluation",
            "nodeType": "ConfigProviderNode",
            "x": 684,
            "y": 91.515625
          },
          "e3f2b265-4f2b-4fef-a158-d554d8943ac3": {
            "connections": {
              "true": "845d1c5c-5cd7-4de1-b2e6-ce02451fb53a"
            },
            "displayName": "Review Profile",
            "nodeType": "PageNode",
            "x": 2118,
            "y": 161.03125
          },
          "e6e50f23-db28-49c9-97d0-9eba67a8f8d2": {
            "connections": {
              "Reject": "c6eeed1f-6fd9-4260-a888-b7646ea895a4",
              "Retry": "975cd739-691c-41de-b325-48814e576b53"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 1158,
            "y": 1832.03125
          },
          "eae38f78-1a89-403d-9836-9182221fc41c": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "d13f18a1-00bc-4aba-94a4-b3525cdaed1b"
            },
            "displayName": "PingOne Create User",
            "nodeType": "PingOneCreateUserNode",
            "x": 196,
            "y": 830.515625
          },
          "eb980b7d-e0db-4a0e-b969-1f63b0f4e099": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "1fc12095-12f7-4e1a-801c-4ea7895f1c57"
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 205.53125,
            "y": 1821.015625
          },
          "ef4bf651-4834-496a-becb-c677a4a1a8f4": {
            "connections": {
              "outcome": "10f7d6b8-caaf-48ec-997e-e731e2568bf1"
            },
            "displayName": "User Canceled",
            "nodeType": "SetStateNode",
            "x": 1689.5,
            "y": 1464.39453125
          },
          "fd8e7757-da6e-4b63-a38a-49783eeba3ab": {
            "connections": {
              "true": "4639cd9c-4695-4c37-ab85-6922131733d0"
            },
            "displayName": "Restore Allowed MFA Methods",
            "nodeType": "ScriptedDecisionNode",
            "x": 188,
            "y": 1259.03125
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 2751,
            "y": 1440
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1370,
            "y": 1276
          },
          "startNode": {
            "x": 19,
            "y": 400
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "014492c6-4e97-4d37-b9cb-87e84fcd3ceb": {
          "_id": "014492c6-4e97-4d37-b9cb-87e84fcd3ceb",
          "_rev": "-804700433",
          "pingOneUserIdAttribute": "pingOneUserId",
          "attributes": {
            "email": "mail",
            "family_name": "sn",
            "given_name": "givenName",
            "ial": "ialtype",
            "identity_assurance_verification": "verificationProof",
            "mobilePhone": "telephoneNumber",
            "resident_address": "postalAddress",
            "resident_city": "city",
            "resident_country": "country",
            "resident_postal_code": "postalCode",
            "resident_state": "stateProvince",
            "selfie": "imageData",
            "unique_identifier": "p1AICUserId"
          },
          "_type": {
            "_id": "PingOneCredentialsIssue",
            "name": "PingOne Credentials Issue",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "success",
              "displayName": "Success"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        },
        "0fa70c07-8806-4163-95d8-c7c689c71145": {
          "_id": "0fa70c07-8806-4163-95d8-c7c689c71145",
          "_rev": "178762587",
          "attributes": {
            "journeyOutcome": "BIO_MATCH_FAILED"
          },
          "_type": {
            "_id": "SetStateNode",
            "name": "Set State",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "10f7d6b8-caaf-48ec-997e-e731e2568bf1": {
          "_id": "10f7d6b8-caaf-48ec-997e-e731e2568bf1",
          "_rev": "1520507078",
          "captureFailure": true,
          "_type": {
            "_id": "PingOneDeleteUserNode",
            "name": "PingOne Delete User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "1ab8dc7a-bafb-4946-8077-b1d308c8ec3a": {
          "_id": "1ab8dc7a-bafb-4946-8077-b1d308c8ec3a",
          "_rev": "2005216590",
          "messageYes": {
            "en": "Retry"
          },
          "message": {
            "en": "<h1 class=\"h2\">Document Verification Error</h1>\n<p>Unable to verify the documents.</p>"
          },
          "messageNo": {
            "en": "Cancel"
          },
          "_type": {
            "_id": "MessageNode",
            "name": "Message Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "1fc12095-12f7-4e1a-801c-4ea7895f1c57": {
          "_id": "1fc12095-12f7-4e1a-801c-4ea7895f1c57",
          "_rev": "-113645345",
          "script": "7eee5b88-677c-4573-86f0-297f2ad2876a",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "ciam_allowedMFATypes",
            "ciam_originalAllowedMFATypes",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_allowedMFATypes",
            "ciam_originalAllowedMFATypes"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "2065bb86-0c64-4b32-8548-e7ca4434c767": {
          "_id": "2065bb86-0c64-4b32-8548-e7ca4434c767",
          "_rev": "1814670696",
          "script": "9e888561-8510-4ef8-b0e8-f5e7ce20111c",
          "nodeType": "PingOneVerifyEvaluationNode",
          "scriptInputs": [
            "forgeRock.device.profile"
          ],
          "_type": {
            "_id": "ConfigProviderNode",
            "name": "Configuration Provider",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "timeoutOutcome",
              "displayName": "Time out"
            },
            {
              "id": "CONFIGURATION_FAILED",
              "displayName": "Configuration failure"
            }
          ]
        },
        "26937b0b-a67e-4edf-8d50-eeece5959030": {
          "_id": "26937b0b-a67e-4edf-8d50-eeece5959030",
          "_rev": "-1074941602",
          "script": "3e759329-e6d7-4c5b-970d-8f0d6d874533",
          "outcomes": [
            "Success",
            "Bio_Match_Failed"
          ],
          "outputs": [
            "objectAttributes",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "biographicMatchResult",
            "capturedData",
            "objectAttributes",
            "username"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Success",
              "displayName": "Success"
            },
            {
              "id": "Bio_Match_Failed",
              "displayName": "Bio_Match_Failed"
            }
          ]
        },
        "27aab0ab-e71f-4aa4-a91b-abc6a257cead": {
          "_id": "27aab0ab-e71f-4aa4-a91b-abc6a257cead",
          "_rev": "875434912",
          "nodes": [
            {
              "_id": "082c68dc-5f1c-4f4a-9267-f08ee3e223c5",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Animated Success Message"
            }
          ],
          "pageDescription": {},
          "stage": "{\"ConfirmationCallback\":[{\"id\":\"09bd3ebd-3ed8-4a17-8616-a1389baac4a0\",\"showOnlyPositiveAnswer\":true}],\"submitButtonText\":{\"en\":\"Continue\"}}",
          "pageHeader": {
            "en": "Success: Credential Issuance"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "4639cd9c-4695-4c37-ab85-6922131733d0": {
          "_id": "4639cd9c-4695-4c37-ab85-6922131733d0",
          "_rev": "382326447",
          "captureFailure": true,
          "pingIdentityAttribute": "username",
          "amIdentityAttribute": "uid",
          "_type": {
            "_id": "PingOneIdentityMatchNode",
            "name": "PingOne Identity Match",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "55fbecad-daf4-4317-8cbc-fece3cdfcb8b": {
          "_id": "55fbecad-daf4-4317-8cbc-fece3cdfcb8b",
          "_rev": "-789887859",
          "captureFailure": true,
          "useFilterScript": true,
          "script": "bd3df6f5-2b39-40fc-9ec1-a952b6bf99f7",
          "scriptInputs": [
            "*"
          ],
          "_type": {
            "_id": "PingOneVerifyCompletionDecisionNode",
            "name": "PingOne Verify Completion Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "notStartedOutcome",
              "displayName": "Not Started"
            },
            {
              "id": "notCompletedOutcome",
              "displayName": "Not Completed"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "expiredOutcome",
              "displayName": "Expired"
            }
          ]
        },
        "5d7b86b2-6cba-4e3d-9e8b-20815f6cf68f": {
          "_id": "5d7b86b2-6cba-4e3d-9e8b-20815f6cf68f",
          "_rev": "273534501",
          "captureFailure": false,
          "_type": {
            "_id": "PingOneDeleteUserNode",
            "name": "PingOne Delete User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "5febf5d7-2826-48c6-ba40-9e6564982bff": {
          "_id": "5febf5d7-2826-48c6-ba40-9e6564982bff",
          "_rev": "1987382311",
          "script": "3802628c-9fd8-4833-b90a-a3c16cb5c4a1",
          "outcomes": [
            "Bermuda",
            "Brazil",
            "India",
            "Ireland",
            "Japan",
            "Mexico",
            "Philippines",
            "Poland",
            "United Kingdom",
            "United States",
            "Other",
            "error"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id",
            "objectAttributes"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Bermuda",
              "displayName": "Bermuda"
            },
            {
              "id": "Brazil",
              "displayName": "Brazil"
            },
            {
              "id": "India",
              "displayName": "India"
            },
            {
              "id": "Ireland",
              "displayName": "Ireland"
            },
            {
              "id": "Japan",
              "displayName": "Japan"
            },
            {
              "id": "Mexico",
              "displayName": "Mexico"
            },
            {
              "id": "Philippines",
              "displayName": "Philippines"
            },
            {
              "id": "Poland",
              "displayName": "Poland"
            },
            {
              "id": "United Kingdom",
              "displayName": "United Kingdom"
            },
            {
              "id": "United States",
              "displayName": "United States"
            },
            {
              "id": "Other",
              "displayName": "Other"
            },
            {
              "id": "error",
              "displayName": "error"
            }
          ]
        },
        "650fafb9-0236-4968-8ea6-cd2a0f48e669": {
          "_id": "650fafb9-0236-4968-8ea6-cd2a0f48e669",
          "_rev": "1235192614",
          "script": "b98324cf-d527-4efb-ad14-94d6d16e5de2",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "*"
          ],
          "inputs": [
            "username",
            "pingOneVerificationMetaData"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "7a3ad829-13bc-4e07-a614-eb23b35bf254": {
          "_id": "7a3ad829-13bc-4e07-a614-eb23b35bf254",
          "_rev": "-1743702445",
          "script": "ebf6157b-f5b6-4151-9d13-038e0f6409b8",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "pingOneVerifyTransactionId",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "pingOneVerifyTransactionId"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "845d1c5c-5cd7-4de1-b2e6-ce02451fb53a": {
          "_id": "845d1c5c-5cd7-4de1-b2e6-ce02451fb53a",
          "_rev": "1560537466",
          "identityResource": "managed/alpha_user",
          "patchAsObject": false,
          "ignoredFields": [],
          "identityAttribute": "userName",
          "_type": {
            "_id": "PatchObjectNode",
            "name": "Patch Object",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "PATCHED",
              "displayName": "Patched"
            },
            {
              "id": "FAILURE",
              "displayName": "Failed"
            }
          ]
        },
        "975cd739-691c-41de-b325-48814e576b53": {
          "_id": "975cd739-691c-41de-b325-48814e576b53",
          "_rev": "825725048",
          "messageYes": {
            "en": "Retry"
          },
          "message": {
            "en": "An error has occurred. Contact Support."
          },
          "messageNo": {
            "en": "Cancel"
          },
          "_type": {
            "_id": "MessageNode",
            "name": "Message Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "9cb76e46-1b92-42f5-9c4e-3a6f8b524269": {
          "_id": "9cb76e46-1b92-42f5-9c4e-3a6f8b524269",
          "_rev": "969238134",
          "spamDetectionTolerance": 3,
          "spamDetectionEnabled": false,
          "exitMessage": {},
          "waitingMessage": {},
          "secondsToWait": 2,
          "exitable": false,
          "_type": {
            "_id": "PollingWaitNode",
            "name": "Polling Wait Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "DONE",
              "displayName": "Done"
            }
          ]
        },
        "a3b93248-73dc-4f83-a315-8c080f8c6052": {
          "_id": "a3b93248-73dc-4f83-a315-8c080f8c6052",
          "_rev": "-365348261",
          "tree": "CIAM Deep Fake - MFA Device Registration Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "c09527a7-e2a2-4d06-bf01-38d376ec3a7a": {
          "_id": "c09527a7-e2a2-4d06-bf01-38d376ec3a7a",
          "_rev": "-1037560817",
          "waitingMessage": {
            "en": "Please complete the requested actions sent to your email and/or mobile phone number. Waiting for digital wallet pairing completion."
          },
          "deliveryMethodMessage": {
            "en": "<h1 class=\"h2\">Select Delivery Method</h1>\n<p>Select a delivery method to start the wallet pairing process.</p>"
          },
          "qrCodeDelivery": true,
          "storeWalletResponse": true,
          "scanQRCodeMessage": {
            "en": "<h1 class=\"h2\">Digital Wallet Pairing Request</h1>                 \n            <p >Scan this QR Code with your mobile phone or digital wallet and follow the instructions.</p>"
          },
          "pingOneUserIdAttribute": "pingOneUserId",
          "emailDelivery": true,
          "smsDelivery": true,
          "allowDeliveryMethodSelection": false,
          "timeout": 120,
          "_type": {
            "_id": "PingOneCredentialsPairWallet",
            "name": "PingOne Credentials Pair Wallet",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "success",
              "displayName": "Success"
            },
            {
              "id": "error",
              "displayName": "Error"
            },
            {
              "id": "timeout",
              "displayName": "Time Out"
            }
          ]
        },
        "c6eeed1f-6fd9-4260-a888-b7646ea895a4": {
          "_id": "c6eeed1f-6fd9-4260-a888-b7646ea895a4",
          "_rev": "2083853105",
          "captureFailure": true,
          "_type": {
            "_id": "PingOneDeleteUserNode",
            "name": "PingOne Delete User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "d13f18a1-00bc-4aba-94a4-b3525cdaed1b": {
          "_id": "d13f18a1-00bc-4aba-94a4-b3525cdaed1b",
          "_rev": "1839259913",
          "deviceLocation": false,
          "maximumSize": "3",
          "deviceMetadata": true,
          "message": {},
          "_type": {
            "_id": "DeviceProfileCollectorNode",
            "name": "Device Profile Collector",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "dc98fb37-972c-4a74-9a07-1daeba849df5": {
          "_id": "dc98fb37-972c-4a74-9a07-1daeba849df5",
          "_rev": "2118111131",
          "script": "ed52e86b-6ba7-474c-abdd-b7b13260a00b",
          "nodeType": "PingOneVerifyEvaluationNode",
          "scriptInputs": [
            "forgeRock.device.profile"
          ],
          "_type": {
            "_id": "ConfigProviderNode",
            "name": "Configuration Provider",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "timeoutOutcome",
              "displayName": "Time out"
            },
            {
              "id": "CONFIGURATION_FAILED",
              "displayName": "Configuration failure"
            }
          ]
        },
        "e3f2b265-4f2b-4fef-a158-d554d8943ac3": {
          "_id": "e3f2b265-4f2b-4fef-a158-d554d8943ac3",
          "_rev": "629342763",
          "nodes": [
            {
              "_id": "1f6a75ca-7ac8-4539-8898-61bc3a1da7d1",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Verify Profile Data"
            }
          ],
          "pageDescription": {
            "en": "Please review the information collected."
          },
          "stage": "{\"submitButtonText\":{\"en\":\"Continue\"}}",
          "pageHeader": {
            "en": "Verify User Data"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "e6e50f23-db28-49c9-97d0-9eba67a8f8d2": {
          "_id": "e6e50f23-db28-49c9-97d0-9eba67a8f8d2",
          "_rev": "1576352851",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "eae38f78-1a89-403d-9836-9182221fc41c": {
          "_id": "eae38f78-1a89-403d-9836-9182221fc41c",
          "_rev": "-1973984807",
          "captureFailure": true,
          "amIdentityAttribute": "uid",
          "anonymizedUser": false,
          "_type": {
            "_id": "PingOneCreateUserNode",
            "name": "PingOne Create User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "eb980b7d-e0db-4a0e-b969-1f63b0f4e099": {
          "_id": "eb980b7d-e0db-4a0e-b969-1f63b0f4e099",
          "_rev": "-1996306919",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "ef4bf651-4834-496a-becb-c677a4a1a8f4": {
          "_id": "ef4bf651-4834-496a-becb-c677a4a1a8f4",
          "_rev": "905234807",
          "attributes": {
            "journeyOutcome": "CANCEL"
          },
          "_type": {
            "_id": "SetStateNode",
            "name": "Set State",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "fd8e7757-da6e-4b63-a38a-49783eeba3ab": {
          "_id": "fd8e7757-da6e-4b63-a38a-49783eeba3ab",
          "_rev": "1281929741",
          "script": "7eee5b88-677c-4573-86f0-297f2ad2876a",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "ciam_allowedMFATypes",
            "ciam_originalAllowedMFATypes",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_allowedMFATypes",
            "ciam_originalAllowedMFATypes"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        }
      },
      "innerNodes": {
        "082c68dc-5f1c-4f4a-9267-f08ee3e223c5": {
          "_id": "082c68dc-5f1c-4f4a-9267-f08ee3e223c5",
          "_rev": "1772804410",
          "script": "94bfadfa-661f-4339-8a91-163cb9747808",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "1f6a75ca-7ac8-4539-8898-61bc3a1da7d1": {
          "_id": "1f6a75ca-7ac8-4539-8898-61bc3a1da7d1",
          "_rev": "1343566760",
          "script": "a39659c2-9d08-4f1a-a212-b35f0638c21d",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "*"
          ],
          "inputs": [
            "objectAttributes"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        }
      },
      "scripts": {
        "7eee5b88-677c-4573-86f0-297f2ad2876a": {
          "_id": "7eee5b88-677c-4573-86f0-297f2ad2876a",
          "name": "OOTB - Toggle and Restore Allowed MFA Methods Script",
          "description": "Script to restrict MFA allowed types to only allow SMS registration",
          "script": "\"/*\\n * MFA Type Restriction and Restoration Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/28/2025  \\n *\\n * This script temporarily restricts allowed MFA methods to SMS and restores the original configuration if it exists.\\n *\\n * Script Inputs  : \\\"\\n *    - \\\"ciam_allowedMFATypes\\\" (Array) - List of allowed MFA methods from shared state  \\n *    - \\\"ciam_originalAllowedMFATypes\\\" (Array) - Backup of the original allowed MFA methods \\n *\\n * Script Outputs :  \\n *    - \\\"ciam_allowedMFATypes\\\" (Array) - List of allowed MFA methods after modification  \\n *    - \\\"ciam_originalAllowedMFATypes\\\" (Array) - Backup of the original allowed MFA methods  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (MFA methods successfully updated)  \\n *    - \\\"Error\\\" (Unexpected execution failure)  \\n */\\n\\ntry {\\n    // Check if the original allowed MFA types are already stored\\n    var originalAllowedMFAMethods = nodeState.get(\\\"ciam_originalAllowedMFATypes\\\");\\n\\n    if (originalAllowedMFAMethods) {\\n        // Restore the original MFA methods, excluding SMS if not originally present\\n        var usableMFAMethods = [];\\n\\n        originalAllowedMFAMethods.forEach(device => {\\n            if (device !== \\\"SMS\\\") usableMFAMethods.push(device);\\n        });\\n\\n        nodeState.putShared(\\\"ciam_allowedMFATypes\\\", usableMFAMethods);\\n    } else {\\n        // Retrieve the current allowed MFA methods\\n        var allowedMFAMethods = nodeState.get(\\\"ciam_allowedMFATypes\\\");\\n\\n        // Restrict allowed MFA methods to SMS for direct registration\\n        allowedMFAMethods.forEach(device => {\\n            if (device === \\\"SMS\\\") nodeState.putShared(\\\"ciam_allowedMFATypes\\\", [\\\"SMS\\\"]);\\n        });\\n\\n        // Store the original MFA methods for future restoration\\n        nodeState.putShared(\\\"ciam_originalAllowedMFATypes\\\", allowedMFAMethods);\\n    }\\n\\n    // Proceed to success path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // Store a user-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Please contact support.\\\");\\n\\n    // Log the detailed error message for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n\\n    // Redirect to the error handling node\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141508366,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090712097,
          "evaluatorVersion": "2.0"
        },
        "9e888561-8510-4ef8-b0e8-f5e7ce20111c": {
          "_id": "9e888561-8510-4ef8-b0e8-f5e7ce20111c",
          "name": "OOTB - VERIFF Verify Evaluation Script",
          "description": "Configuration node script for VERIFF P1 Verify Evaluation",
          "script": "\"/*\\n * P1 VERIFF Verify Eval Node Config\\n *\\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/28/2025  \\n *\\n * This script builds a dynamic configuration object for the Config Provider Node\\n * based on the user's device type. It determines the appropriate delivery method\\n * for identity verification for case of mobile or web browser and configures messaging and behavior accordingly.\\n *\\n * Script Inputs  : \\n *    - \\\"forgeRock.device.profile\\\" (Object) - Device metadata from node state\\n *\\n * Script Outputs : \\n *    - \\\"config\\\" (Map) - Define and fill a Map object named 'config' with custom values, \\n *                       this will define the configuration for the associated node selected in the ConfigProviderNode.  \\n *\\n * Outcomes       : \\n *    - \\\"Success\\\"               (Verify Evaluation Succeeded)  \\n *    - \\\"Failure\\\"               (Verify Evaluation Failed)  \\n *    - \\\"Timed Out\\\"            (Verify Evaluation Timed Out)  \\n *    - \\\"Configuration Failure\\\" (Improper or missing values in config)  \\n */\\n\\ntry {\\n    var deliveryMethod = \\\"QRCODE\\\";\\n    var allowDeliveryMethodSelection = true;\\n\\n    var deviceProfile = nodeState.get(\\\"forgeRock.device.profile\\\");\\n    logger.error(\\\"P1 Verify Eval Node Config - deviceProfile: {}\\\", deviceProfile);\\n\\n    var deviceName = deviceProfile.get(\\\"metadata\\\").get(\\\"platform\\\").get(\\\"deviceName\\\");\\n    logger.error(\\\"P1 Verify Eval Node Config - deviceName: {}\\\", deviceName);\\n\\n    if (deviceName == '\\\"iPhone (Browser)\\\"' || deviceName == '\\\"Android (Browser)\\\"') {\\n        deliveryMethod = \\\"REDIRECT\\\";\\n        allowDeliveryMethodSelection = false;\\n    }\\n\\n    logger.error(\\\"P1 Verify Eval Node Config - deliveryMethod: {}\\\", deliveryMethod);\\n\\n    config = {\\n        \\\"pingOneWorker\\\": null, // Enter your PingOne Worker App here\\n        \\\"verifyPolicyId\\\": \\\"\\\", // Enter your VERIFF Verify Policy ID here\\n        \\\"deliveryMethod\\\": deliveryMethod,\\n        \\\"allowDeliveryMethodSelection\\\": allowDeliveryMethodSelection,\\n        \\\"deliveryMethodMessage\\\": {\\n            \\\"en\\\": \\\"<h1 class=\\\\\\\"h2\\\\\\\">Select Delivery Method</h1>\\\\n<p>Select a delivery method to start the identity verification process.</p>\\\"\\n        },\\n        \\\"scanQRCodeMessage\\\": {\\n            \\\"en\\\": \\\"<h1 class=\\\\\\\"h2\\\\\\\">Document Verification</h1>\\\\n<p>Scan this QR Code with your mobile phone and follow the instructions.</p>\\\"\\n        },\\n        \\\"waitingMessage\\\": {\\n            \\\"en\\\": \\\"Please complete the requested actions sent to your email and/or mobile phone number. Waiting for identity verification completion. Here is the code you will see on your device: {{verificationCode}}\\\"\\n        },\\n        \\\"redirectMessage\\\": {},\\n        \\\"timeout\\\": 120,\\n        \\\"biographicMatching\\\": {\\n            \\\"family_name\\\": \\\"sn\\\",\\n            \\\"given_name\\\": \\\"givenName\\\",\\n            \\\"name\\\": \\\"cn\\\"\\n        },\\n        \\\"storeVerificationMetadata\\\": false,\\n        \\\"storeVerifiedData\\\": false,\\n        \\\"captureFailure\\\": true\\n    };\\n} catch (e) {\\n    // Store a user-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Please contact support.\\\");\\n\\n    // Log the detailed error message for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "CONFIG_PROVIDER_NODE",
          "createdBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "creationDate": 1744209623817,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744795065087,
          "evaluatorVersion": "1.0"
        },
        "3e759329-e6d7-4c5b-970d-8f0d6d874533": {
          "_id": "3e759329-e6d7-4c5b-970d-8f0d6d874533",
          "name": "OOTB - Process Govt. Data Captured Script",
          "description": "Script to process Govt. Id data captured and validate biographic match",
          "script": "\"/*\\n * Process Captured Govt. Id Data\\n *\\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/28/2025  \\n *\\n * This script validates biographic attributes extracted from a government-issued ID \\n * and updates user attributes accordingly.\\n *\\n * Script Inputs:\\n *    - \\\"biographicMatchResult\\\" (Object)  - Results of biographic attribute validation.\\n *    - \\\"capturedData\\\"          (Object)  - Extracted user data from the government ID.\\n *    - \\\"objectAttributes\\\"       (Object)  - User attributes stored in nodeState.\\n *    - \\\"username\\\"              (String)  - The username of the user being verified.\\n * \\n * Script Outputs:\\n *    - \\\"objectAttributes\\\"       (Object)  - Updated user attributes stored in nodeState.\\n *    - \\\"errorMessage\\\"           (String)  - Error message for user-facing issues.\\n *    - \\\"errorDetails\\\"           (String)  - Detailed error information for debugging.\\n * \\n * Outcomes:\\n *    - \\\"Success\\\"            - Validation passed.\\n *    - \\\"Bio_Match_Failed\\\"   - Biographic match failed.\\n *    - \\\"Error\\\"              - Unexpected execution failure.\\n */\\n\\ntry {\\n  // Presetting the outcome to `Success`;\\n  outcome = 'Success';\\n    \\n  // Check Biographic Match Result from Govt. Id card\\n  var biographicMatchResult = nodeState.get(\\\"biographicMatchResult\\\");\\n  \\n  // Check if any match failed\\n  // Note: If some attribute is not captured from the ID card, expected response of biographicMatchResult should be 'NA'\\n  for (var identifier in biographicMatchResult) {\\n      if (biographicMatchResult[identifier] === 'false') { \\n          // Update the outcome\\n          outcome = 'Bio_Match_Failed';\\n          break;\\n      }\\n  }\\n\\n  if (outcome === 'Success') {\\n      // Get capturedData from shared state\\n      var capturedDataFromGovtId = nodeState.get(\\\"capturedData\\\");\\n      var userAttributes = nodeState.get(\\\"objectAttributes\\\");\\n      var username = nodeState.get(\\\"username\\\");\\n    \\n      var registeredUserAttributes = openidm.query(\\\"managed/alpha_user\\\",  \\n                             { \\\"_queryFilter\\\": `/userName eq \\\"${username}\\\"` }, \\n                             ['givenName', 'sn']  \\n                            );\\n    \\n      var givenName = registeredUserAttributes.result[0].givenName;\\n      var sn = registeredUserAttributes.result[0].sn;\\n    \\n      userAttributes.put('givenName', givenName);\\n      userAttributes.put('sn', sn);\\n    \\n      var resultMapUserAttributes = {\\n        \\\"firstName\\\": \\\"custom_legalFirstName\\\",\\n        \\\"lastName\\\": \\\"custom_legalLastName\\\",\\n        \\\"fullName\\\": \\\"custom_legalFullName\\\",\\n        \\\"addressStreet\\\": \\\"postalAddress\\\",\\n        \\\"addressCity\\\": \\\"city\\\",\\n        \\\"addressState\\\": \\\"stateProvince\\\",\\n        \\\"addressZip\\\": \\\"postalCode\\\",\\n        \\\"address\\\": \\\"postalAddress\\\",\\n        \\\"country\\\": \\\"country\\\"\\n      };\\n    \\n      for(var key in capturedDataFromGovtId){\\n        if(resultMapUserAttributes.hasOwnProperty(key)) {\\n          userAttributes.put(resultMapUserAttributes[key], capturedDataFromGovtId[key]);\\n        }\\n      }\\n      \\n      nodeState.putShared(\\\"objectAttributes\\\", userAttributes);  \\n  }\\n\\n  action.goTo(outcome);\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141508408,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090712099,
          "evaluatorVersion": "2.0"
        },
        "3802628c-9fd8-4833-b90a-a3c16cb5c4a1": {
          "_id": "3802628c-9fd8-4833-b90a-a3c16cb5c4a1",
          "name": "OOTB - Country Splitter Script",
          "description": "Script to split based on selected country",
          "script": "\"/* Country Splitter\\n *\\n * Author: Ping Identity\\n * Version : 1.0\\n * Date: 03/28/2025\\n * \\n * Splits journey execution path by country.\\n * \\n * This script does not need to be parametrized. It will work properly as is.\\n * \\n * Script Inputs:\\n *    - \\\"_id\\\" (String) - User ID.\\n *    - \\\"objectAttributes\\\" (Object) - Attributes associated with the user.\\n *\\n * Script Outputs:\\n *    - \\\"errorMessage\\\" (String) - User-friendly error message if an error occurs.\\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging.\\n *\\n * Outcomes:\\n *    - \\\"Bermuda\\\"\\n *    - \\\"Brazil\\\"\\n *    - \\\"India\\\"\\n *    - \\\"Ireland\\\"\\n *    - \\\"Japan\\\"\\n *    - \\\"Mexico\\\"\\n *    - \\\"Philippines\\\"\\n *    - \\\"Poland\\\"\\n *    - \\\"United Kingdom\\\"\\n *    - \\\"United States\\\"\\n *    - \\\"Other\\\" (Default for non-matching countries)\\n *    - \\\"error\\\" (Unexpected failure)\\n */\\n\\noutcome = 'error';\\ntry {\\n    var countryAmAttr = 'co';\\n    var countryIdmAttr = 'country';\\n    var countries = {\\n      '--': 'Other',\\n      'BM': 'Bermuda',\\n      'BR': 'Brazil',\\n      'IN': 'India',\\n      'IE': 'Ireland',\\n      'JP': 'Japan',\\n      'MX': 'Mexico',\\n      'PH': 'Philippines',\\n      'PL': 'Poland',\\n      'GB': 'United Kingdom',\\n      'US': 'United States',\\n    };\\n    var countryCodes = Object.keys(countries);\\n    var userid = nodeState.get('_id');\\n    var objectAttributes = nodeState.get('objectAttributes');\\n    var identity = idRepository.getIdentity(userid);\\n    var currentCountry = objectAttributes.get(countryIdmAttr) || identity.getAttributeValues(countryAmAttr)[0];\\n    if (currentCountry && countryCodes.indexOf(currentCountry) != -1) {\\n      outcome = countries[currentCountry];\\n    } else {\\n      outcome = 'other';\\n    }\\n} catch (e) {\\n    // Store a user-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Please contact support.\\\");\\n\\n    // Log the detailed error message for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    action.goTo('error');\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141508473,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090712108,
          "evaluatorVersion": "2.0"
        },
        "b98324cf-d527-4efb-ad14-94d6d16e5de2": {
          "_id": "b98324cf-d527-4efb-ad14-94d6d16e5de2",
          "name": "OOTB - Prepare For Credential Issuance Script",
          "description": "Script to prepare attributes to be issued to wallet",
          "script": "\"/*\\n * Credential Issuance Preparation Script\\n * \\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/28/2025  \\n * \\n * This script retrieves user attributes from the identity store and prepares verification proof for credential issuance.\\n * \\n * Script Inputs:\\n *    - \\\"username\\\"                   (String) - User identifier.\\n *    - \\\"pingOneVerificationMetaData\\\" (Object) - PingOne Verify metadata.\\n * \\n * Script Outputs:\\n *    - User attributes               Attributes associated with the user.\\n *    - \\\"verificationProof\\\"           (String) - Proof of verification.\\n *    - \\\"ialtype\\\"                     (String) - Identity Assurance Level.\\n * \\n * Outcomes:\\n *    - \\\"true\\\"  (Success)\\n *    - \\\"Error\\\" (Failure)\\n */\\n\\ntry {\\n    // Retrieve the username from node state\\n    var username = nodeState.get('username');\\n    \\n    // Query user attributes from the identity store\\n    var registeredUserAttributes = openidm.query(\\n        \\\"managed/alpha_user\\\",\\n        { \\\"_queryFilter\\\": `/userName eq \\\"${username}\\\"` },\\n        [\\n            'givenName', 'sn', 'mail', 'telephoneNumber', \\n            'postalAddress', 'city', 'stateProvince', \\n            'postalCode', 'country'\\n        ]\\n    );\\n\\n    // Extract the user's attributes  \\n    var userAttributes = registeredUserAttributes.result[0];  \\n    \\n    // Define the attributes that need to be stored in shared state\\n    var attributes = [\\n        \\\"givenName\\\", \\\"sn\\\", \\\"mail\\\", \\\"telephoneNumber\\\", \\n        \\\"postalAddress\\\", \\\"city\\\", \\\"stateProvince\\\", \\n        \\\"postalCode\\\", \\\"country\\\", \\\"_id\\\"\\n    ];  \\n\\n    // Store user attributes to be issued to the wallet in shared state, if they are present\\n    attributes.forEach(attr => {\\n        if (userAttributes[attr]) {\\n            nodeState.putShared(attr === \\\"_id\\\" ? \\\"p1AICUserId\\\" : attr, userAttributes[attr]);\\n        }\\n    });\\n\\n    // Set the Identity Assurance Level (IAL) to IAL2  \\n    nodeState.putShared(\\\"ialtype\\\", \\\"ial2\\\");  \\n\\n    // Retrieve PingOne verification metadata\\n    var pingOneVerificationMetaData = nodeState.get(\\\"pingOneVerificationMetaData\\\");\\n    \\n    var pingOneVerifyTransactionId = pingOneVerificationMetaData.get(\\\"pingOneVerifyTransactionId\\\");\\n    var pingOneVerifyTransactionStatus = pingOneVerificationMetaData.get(\\\"pingOneVerifyTransactionStatus\\\");\\n    var verifiedDocuments = pingOneVerificationMetaData.get(\\\"verifiedDocuments\\\");\\n    var pingOneVerifyPolicyId = pingOneVerificationMetaData.get(\\\"pingOneVerifyPolicyId\\\");\\n    var pingOneVerifyTransactionCreatedAt = pingOneVerificationMetaData.get(\\\"pingOneVerifyTransactionCreatedAt\\\");\\n\\n    // Construct the verification proof object\\n    var verificationProof = {\\n        \\\"verification\\\": {\\n            \\\"trust_framework\\\": \\\"nist_800_63A\\\",\\n            \\\"assurance_level\\\": \\\"ial2\\\",\\n            \\\"assurance_process\\\": {\\n                \\\"assurance_details\\\": [\\n                    {\\n                        \\\"assurance_type\\\": \\\"evidence_validation\\\",\\n                        \\\"assurance_classification\\\": \\\"strong\\\",\\n                        \\\"evidence_ref\\\": [{\\n                            \\\"txn\\\": pingOneVerifyTransactionId\\n                        }]\\n                    },\\n                    {\\n                        \\\"assurance_type\\\": \\\"verification\\\",\\n                        \\\"assurance_classification\\\": \\\"strong\\\",\\n                        \\\"evidence_ref\\\": [{\\n                            \\\"txn\\\": pingOneVerifyTransactionId\\n                        }]\\n                    }\\n                ]\\n            },\\n            \\\"time\\\": pingOneVerifyTransactionCreatedAt,\\n            \\\"verification_process\\\": pingOneVerifyPolicyId,\\n            \\\"evidence\\\": {\\n                \\\"transactionStatus\\\": pingOneVerifyTransactionStatus,\\n                \\\"transactionDocuments\\\": verifiedDocuments\\n            }\\n        }\\n    };\\n\\n    // Store verification proof in shared state\\n    nodeState.putShared(\\\"verificationProof\\\", verificationProof);\\n\\n    // Proceed to the success path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141508591,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090712130,
          "evaluatorVersion": "2.0"
        },
        "ebf6157b-f5b6-4151-9d13-038e0f6409b8": {
          "_id": "ebf6157b-f5b6-4151-9d13-038e0f6409b8",
          "name": "OOTB - Remove PingOneVerifyTransactionId From Shared State Script",
          "description": "Script to clear PingOne Verify transaction ID from shared state",
          "script": "\"/*\\n * PingOne Verify Transaction Cleanup Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/28/2025  \\n *\\n * This script clears the stored PingOne Verify transaction ID from shared state.\\n *\\n * Script Inputs  : \\n *    - \\\"pingOneVerifyTransactionId\\\" (String) - Transaction ID to be removed  \\n *\\n * Script Outputs : \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       : \\n *    - \\\"true\\\"  (Transaction ID successfully cleared)  \\n *    - \\\"Error\\\" (Unexpected execution failure)  \\n */\\n\\ntry {\\n    // Get pingOneVerifyTransactionId if present in shared state\\n    var pingOneVerifyTransactionId = nodeState.get(\\\"pingOneVerifyTransactionId\\\") ? nodeState.get(\\\"pingOneVerifyTransactionId\\\") : null;\\n\\n    // Remove the ID and set it to an empty value\\n    if (pingOneVerifyTransactionId) {\\n        nodeState.putShared(\\\"pingOneVerifyTransactionId\\\", \\\"\\\");\\n    }\\n\\n    // Proceed to success outcome\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // Store a user-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Please contact support.\\\");\\n\\n    // Log the detailed error message for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n\\n    // Redirect to the error handling node\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141508623,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090712131,
          "evaluatorVersion": "2.0"
        },
        "ed52e86b-6ba7-474c-abdd-b7b13260a00b": {
          "_id": "ed52e86b-6ba7-474c-abdd-b7b13260a00b",
          "name": "OOTB - MITEK Verify Evaluation Config. Node Script",
          "description": "Configuration node script for MITEK P1 Verify Evaluation",
          "script": "\"/*\\n * P1 MITEK Verify Eval Node Config\\n *\\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/28/2025  \\n *\\n * This script builds a dynamic configuration object for the Config Provider Node\\n * based on the user's device type. It determines the appropriate delivery method\\n * for identity verification for case of mobile or web browser and configures messaging and behavior accordingly.\\n *\\n * Script Inputs  : \\n *    - \\\"forgeRock.device.profile\\\" (Object) - Device metadata from node state\\n *\\n * Script Outputs : \\n *    - \\\"config\\\" (Map) - Define and fill a Map object named 'config' with custom values, \\n *                       this will define the configuration for the associated node selected in the ConfigProviderNode.  \\n *\\n * Outcomes       : \\n *    - \\\"Success\\\"               (Verify Evaluation Succeeded)  \\n *    - \\\"Failure\\\"               (Verify Evaluation Failed)  \\n *    - \\\"Timed Out\\\"            (Verify Evaluation Timed Out)  \\n *    - \\\"Configuration Failure\\\" (Improper or missing values in config)  \\n */\\n\\ntry {\\n    var deliveryMethod = \\\"QRCODE\\\";\\n    var allowDeliveryMethodSelection = true;\\n\\n    var deviceProfile = nodeState.get(\\\"forgeRock.device.profile\\\");\\n    logger.error(\\\"P1 Verify Eval Node Config - deviceProfile: {}\\\", deviceProfile);\\n\\n    var deviceName = deviceProfile.get(\\\"metadata\\\").get(\\\"platform\\\").get(\\\"deviceName\\\");\\n    logger.error(\\\"P1 Verify Eval Node Config - deviceName: {}\\\", deviceName);\\n\\n    if (deviceName == '\\\"iPhone (Browser)\\\"' || deviceName == '\\\"Android (Browser)\\\"') {\\n        deliveryMethod = \\\"REDIRECT\\\";\\n        allowDeliveryMethodSelection = false;\\n    }\\n\\n    logger.error(\\\"P1 Verify Eval Node Config - deliveryMethod: {}\\\", deliveryMethod);\\n\\n    config = {\\n        \\\"pingOneWorker\\\": null, // Enter your PingOne Worker App here\\n        \\\"verifyPolicyId\\\": \\\"\\\", // Enter your MITEK Verify Policy ID here\\n        \\\"deliveryMethod\\\": deliveryMethod,\\n        \\\"allowDeliveryMethodSelection\\\": allowDeliveryMethodSelection,\\n        \\\"deliveryMethodMessage\\\": {\\n            \\\"en\\\": \\\"<h1 class=\\\\\\\"h2\\\\\\\">Select Delivery Method</h1>\\\\n<p>Select a delivery method to start the identity verification process.</p>\\\"\\n        },\\n        \\\"scanQRCodeMessage\\\": {\\n            \\\"en\\\": \\\"<h1 class=\\\\\\\"h2\\\\\\\">Document Verification</h1>\\\\n<p>Scan this QR Code with your mobile phone and follow the instructions.</p>\\\"\\n        },\\n        \\\"waitingMessage\\\": {\\n            \\\"en\\\": \\\"Please complete the requested actions sent to your email and/or mobile phone number. Waiting for identity verification completion. Here is the code you will see on your device: {{verificationCode}}\\\"\\n        },\\n        \\\"redirectMessage\\\": {},\\n        \\\"timeout\\\": 120,\\n        \\\"biographicMatching\\\": {\\n            \\\"family_name\\\": \\\"sn\\\",\\n            \\\"given_name\\\": \\\"givenName\\\",\\n            \\\"name\\\": \\\"cn\\\"\\n        },\\n        \\\"storeVerificationMetadata\\\": false,\\n        \\\"storeVerifiedData\\\": false,\\n        \\\"captureFailure\\\": true\\n    };\\n} catch (e) {\\n    // Store a user-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Please contact support.\\\");\\n\\n    // Log the detailed error message for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "CONFIG_PROVIDER_NODE",
          "createdBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "creationDate": 1744206455211,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744795051872,
          "evaluatorVersion": "1.0"
        },
        "94bfadfa-661f-4339-8a91-163cb9747808": {
          "_id": "94bfadfa-661f-4339-8a91-163cb9747808",
          "name": "OOTB - Animated Success Message Script",
          "description": "Script to show animated success message tick mark",
          "script": "\"/*\\n * Email Update Success Animation Script\\n * \\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/28/2025  \\n * \\n * Displays a success animation and message when an email is successfully updated.\\n * \\n * Script Inputs:\\n *    - null\\n * \\n * Script Outputs:\\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging\\n * \\n * Outcomes:\\n *    - \\\"true\\\"  (Success)\\n *    - \\\"Error\\\" (Failure)\\n */\\n\\ntry {\\n    /**\\n     * Generates and returns a JavaScript function as a string\\n     * that creates a success checkmark animation and displays a confirmation message.\\n     */\\n    function createAnimatedTickMark() {\\n            return String(\\n                \\\"function go(obs) { \\\\n\\\" +\\n                \\\"    const message = document.getElementById('message'); \\\\n\\\" +\\n                \\\"    if (message) { \\\\n\\\" +\\n                \\\"        var divSection = document.createElement('div'); \\\\n\\\" +\\n                \\\"        divSection.id = 'successPage'; \\\\n\\\" +\\n                \\\"        message.insertBefore(divSection, message.nextSibling); \\\\n\\\" +\\n                \\\"        divSection.innerHTML = \\\\n\\\" +\\n                \\\"        `<style>\\\\n\\\" +\\n                \\\"            :root {\\\\n\\\" +\\n                \\\"                --animation-dimension: 100px;\\\\n\\\" +\\n                \\\"                --animation-start-color: #71E171;\\\\n\\\" +\\n                \\\"                --animation-midway-color: #67D067;\\\\n\\\" +\\n                \\\"                --animation-finish-color: #59B259;\\\\n\\\" +\\n                \\\"            }\\\\n\\\" +\\n                \\\"            .justify-content-center { justify-content: center !important } \\\\n\\\" +\\n                \\\"            .align-items-center { align-items: center !important } \\\\n\\\" +\\n                \\\"            .checkmark {\\\\n\\\" +\\n                \\\"                width: var(--animation-dimension);\\\\n\\\" +\\n                \\\"                height: var(--animation-dimension);\\\\n\\\" +\\n                \\\"                border-radius: 50%;\\\\n\\\" +\\n                \\\"                display: block;\\\\n\\\" +\\n                \\\"                stroke-width: 5;\\\\n\\\" +\\n                \\\"                stroke: #FFFFFF;\\\\n\\\" +\\n                \\\"                stroke-miterlimit: 10;\\\\n\\\" +\\n                \\\"                box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\\\\n\\\" +\\n                \\\"                animation: fill 0.4s ease-in-out 0.4s forwards,\\\\n\\\" +\\n                \\\"                    scale 0.3s ease-in-out 0.9s both;\\\\n\\\" +\\n                \\\"            }\\\\n\\\" +\\n                \\\"            .checkmarkCircle {\\\\n\\\" +\\n                \\\"                stroke-dasharray: 166;\\\\n\\\" +\\n                \\\"                stroke-dashoffset: 166;\\\\n\\\" +\\n                \\\"                stroke-width: 5;\\\\n\\\" +\\n                \\\"                stroke-miterlimit: 10;\\\\n\\\" +\\n                \\\"                stroke: var(--animation-finish-color);\\\\n\\\" +\\n                \\\"                fill: none;\\\\n\\\" +\\n                \\\"                animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards,\\\\n\\\" +\\n                \\\"                    colorChange 1.2s ease-in-out forwards;\\\\n\\\" +\\n                \\\"            }\\\\n\\\" +\\n                \\\"            .checkmarkCheck {\\\\n\\\" +\\n                \\\"                transform-origin: 50% 50%;\\\\n\\\" +\\n                \\\"                stroke-dasharray: 48;\\\\n\\\" +\\n                \\\"                stroke-dashoffset: 48;\\\\n\\\" +\\n                \\\"                animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards,\\\\n\\\" +\\n                \\\"                    colorChange 0.6s ease-in-out 0.8s forwards;\\\\n\\\" +\\n                \\\"            }\\\\n\\\" +\\n                \\\"            @keyframes colorChange {\\\\n\\\" +\\n                \\\"                0% { stroke: var(--animation-start-color); }\\\\n\\\" +\\n                \\\"                50% { stroke: var(--animation-midway-color); }\\\\n\\\" +\\n                \\\"                100% { stroke: var(--animation-finish-color); }\\\\n\\\" +\\n                \\\"            }\\\\n\\\" +\\n                \\\"            @keyframes stroke {\\\\n\\\" +\\n                \\\"                100% { stroke-dashoffset: 0; }\\\\n\\\" +\\n                \\\"            }\\\\n\\\" +\\n                \\\"            @keyframes scale {\\\\n\\\" +\\n                \\\"                0%, 100% { transform: none; }\\\\n\\\" +\\n                \\\"                50% { transform: scale3d(1.1, 1.1, 1); }\\\\n\\\" +\\n                \\\"                70% { transform: scale3d(0.98, 0.98, 1); }\\\\n\\\" +\\n                \\\"                85% { transform: scale3d(1.02, 1.02, 1); }\\\\n\\\" +\\n                \\\"            }\\\\n\\\" +\\n                \\\"            @keyframes fill {\\\\n\\\" +\\n                \\\"                100% { box-shadow: inset 0px 0px 0px 0px var(--animation-finish-color); }\\\\n\\\" +\\n                \\\"            }\\\\n\\\" +\\n                \\\"        </style>\\\\n\\\" +\\n                \\\"        <div style='display: flex; align-items: center; justify-content: center'>\\\\n\\\" +\\n                \\\"            <svg class='checkmark' xmlns='http://www.w3.org/2000/svg' viewbox='0 0 52 52'>\\\\n\\\" +\\n                \\\"                <circle class='checkmarkCircle' cx='26' cy='26' r='25' fill='none' />\\\\n\\\" +\\n                \\\"                <path class='checkmarkCheck' fill='none' d='M14.1 27.2l7.1 7.2 16.7-16.8' />\\\\n\\\" +\\n                \\\"            </svg>\\\\n\\\" +\\n                \\\"        </div>`;\\\\n\\\" +\\n                \\\"        var messageDiv = document.createElement('div'); \\\\n\\\" +\\n                \\\"        messageDiv.style.marginTop = '16px'; \\\\n\\\" +\\n                \\\"        messageDiv.innerText = 'Successfully issued credentials to wallet.';\\\\n\\\" +\\n                \\\"        divSection.appendChild(messageDiv); \\\\n\\\" +\\n                \\\"    }\\\\n\\\" +\\n                \\\"}\\\\n\\\" +\\n                \\\"go();\\\\n\\\"\\n        );\\n    }\\n\\n    /**\\n     * If no callbacks are present, generate the script dynamically\\n     * and send it to the user interface using `scriptTextOutputCallback`.\\n     */\\n    if (callbacks.isEmpty()) {\\n        callbacksBuilder.scriptTextOutputCallback(createAnimatedTickMark());\\n        callbacksBuilder.textOutputCallback(0, \\\" \\\");\\n    }\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // Store a user-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Please contact support.\\\");\\n\\n    // Log the detailed error message for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n\\n    // Redirect to the error outcome\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141508715,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090712151,
          "evaluatorVersion": "2.0"
        },
        "a39659c2-9d08-4f1a-a212-b35f0638c21d": {
          "_id": "a39659c2-9d08-4f1a-a212-b35f0638c21d",
          "name": "OOTB - Display Profile Info Captured From Govt ID Script",
          "description": "Script to display captured data from Govt. Id",
          "script": "\"/*\\n * Captured User Attributes Display Script\\n * \\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/28/2025  \\n * \\n * Retrieves user attributes from nodeState and displays them as read-only fields.\\n * \\n * Script Inputs:\\n *    - \\\"objectAttributes\\\" (Object) - User attributes map.\\n * \\n * Script Outputs:\\n *    - \\\"errorMessage\\\" (String) - User-friendly error message if an error occurs.\\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging.\\n * \\n * Outcomes:\\n *    - \\\"true\\\"  (Success)\\n *    - \\\"Error\\\" (Failure)\\n */\\n\\ntry {\\n    /**\\n     * Generates a script to make an input field read-only.\\n     * @param {string} key - The field label.\\n     * @returns {string} - JavaScript code to set the field as read-only.\\n     */\\n    function createScript(key) {\\n        return String(\\n            \\\" \\\\n\\\\\\n              const fieldName = document.querySelector('input[data-vv-as=\\\\\\\"\\\"+ key +\\\"\\\\\\\"]'); \\\\n\\\\\\n              fieldName.readOnly = true; \\\\n\\\\\\n        \\\");\\n    }\\n    \\n    var userAttributes = nodeState.get(\\\"objectAttributes\\\");\\n\\n    // Mapping of internal attribute names to display labels\\n    var mappingKeys = {\\n        'givenName': 'First Name',\\n        'sn': 'Last Name',\\n        'custom_legalFirstName': \\\"Legal First Name\\\",\\n        'custom_legalLastName': \\\"Legal Last Name\\\",\\n        'custom_legalFullName': \\\"Legal Full Name\\\",\\n        'postalAddress': 'Street Address',\\n        'city': 'City',\\n        'stateProvince': 'State',\\n        'postalCode': 'Zip Code',\\n        'country': 'Country',\\n    };\\n    \\n    if (callbacks.isEmpty()) {\\n        for (var key in mappingKeys) {\\n            if (key in userAttributes) {\\n                var value = userAttributes[key];\\n\\n                // Add a text input field displaying the value for the attribute\\n                callbacksBuilder.stringAttributeInputCallback(mappingKeys[key], mappingKeys[key], value, false);\\n\\n                // Make the input field read-only\\n                callbacksBuilder.scriptTextOutputCallback(createScript(mappingKeys[key]));\\n            }\\n        }\\n    }\\n    \\n    // Proceed to the success path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // Store a user-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Please contact support.\\\");\\n\\n    // Log the detailed error message for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n\\n    // Redirect to the error handling node\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141508831,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090712151,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {},
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "CIAM Deep Fake - Authentication Main Journey": {
      "tree": {
        "_id": "CIAM Deep Fake - Authentication Main Journey",
        "_rev": "-401065540",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Deep Fake\"]"
        },
        "entryNodeId": "2791aab1-0c32-4c5e-a150-e471ca395a2a",
        "innerTreeOnly": false,
        "nodes": {
          "07275b14-735f-432c-a7bf-54ffe4498cb8": {
            "x": 563,
            "y": 952.515625,
            "connections": {
              "true": "f8ac0fb4-c76f-432d-8029-03c86d61f611"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set p1ProtectAction As Eval"
          },
          "081f47b4-ff91-4a71-ab1a-d5eb98edf563": {
            "x": 188,
            "y": 805.515625,
            "connections": {
              "true": "d054850b-9823-4f80-bb73-b6f89e1bd191"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Prerequisites & Init Variables"
          },
          "082e75c9-3a8a-4af5-accd-ed128a552d2a": {
            "x": 159,
            "y": 7.515625,
            "connections": {
              "true": "4709521f-7bbc-4440-8af9-5b33da22445d"
            },
            "nodeType": "PageNode",
            "displayName": "Page Node"
          },
          "0b85c2b7-8633-4ea6-b89b-252d3439a112": {
            "x": 569,
            "y": 397.515625,
            "connections": {
              "false": "96bfcd1e-ac3e-4c1b-a0fa-83c565b6501e",
              "true": "2301f103-fe8d-402a-8844-e2a22135399c"
            },
            "nodeType": "IdentifyExistingUserNode",
            "displayName": "Identify Existing User"
          },
          "13e92470-32de-4651-a6d9-67b1361b1f92": {
            "x": 1575,
            "y": 308.015625,
            "connections": {
              "EMAIL_NOT_SENT": "de2a5d5a-36c8-4929-a0d1-b786e193ea42",
              "EMAIL_SENT": "de2a5d5a-36c8-4929-a0d1-b786e193ea42"
            },
            "nodeType": "EmailTemplateNode",
            "displayName": "Notify New Device"
          },
          "2301f103-fe8d-402a-8844-e2a22135399c": {
            "x": 561,
            "y": 568.015625,
            "connections": {
              "false": "85f5bcc2-93e0-4c0a-958d-7740c999c135",
              "true": "d4c433d0-7909-4ff9-ac1d-977765b455aa"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Is Protect Analysis Required?"
          },
          "2791aab1-0c32-4c5e-a150-e471ca395a2a": {
            "x": 198,
            "y": 954.515625,
            "connections": {
              "DONE": "081f47b4-ff91-4a71-ab1a-d5eb98edf563"
            },
            "nodeType": "PollingWaitNode",
            "displayName": "Polling Wait Node"
          },
          "2fcfe6cb-fd9a-4304-b90f-8ca59062fb44": {
            "x": 168,
            "y": 520.015625,
            "connections": {
              "false": "082e75c9-3a8a-4af5-accd-ed128a552d2a",
              "true": "ad5fce39-cee2-4a9f-8526-79226348b59b"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Is Protect Analysis Required?"
          },
          "4709521f-7bbc-4440-8af9-5b33da22445d": {
            "x": 544.15625,
            "y": 0,
            "connections": {
              "CANCELLED": "96bfcd1e-ac3e-4c1b-a0fa-83c565b6501e",
              "EXPIRED": "af58eddc-3f83-4356-bbab-524abcbd76c5",
              "FALSE": "96bfcd1e-ac3e-4c1b-a0fa-83c565b6501e",
              "LOCKED": "96bfcd1e-ac3e-4c1b-a0fa-83c565b6501e",
              "TRUE": "0b85c2b7-8633-4ea6-b89b-252d3439a112"
            },
            "nodeType": "IdentityStoreDecisionNode",
            "displayName": "Identity Store Decision"
          },
          "648059a4-b131-44ef-88c4-a5cd39c06a1a": {
            "x": 951,
            "y": 699.515625,
            "connections": {
              "highRisk": "bd5ee2b6-8296-4519-b473-54f801012bcb",
              "lowRisk": "f2b8d829-db8b-4290-a26e-501e6f8caaf0",
              "mediumRisk": "85f5bcc2-93e0-4c0a-958d-7740c999c135"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Extract Protect Activity Params"
          },
          "6b80bafb-5a0c-4777-a101-8337418e2e84": {
            "x": 1062,
            "y": 356.515625,
            "connections": {
              "outcome": "96bfcd1e-ac3e-4c1b-a0fa-83c565b6501e"
            },
            "nodeType": "EmailSuspendNode",
            "displayName": "Email Suspend Node"
          },
          "85f5bcc2-93e0-4c0a-958d-7740c999c135": {
            "x": 1587,
            "y": 892.515625,
            "connections": {
              "false": "96bfcd1e-ac3e-4c1b-a0fa-83c565b6501e",
              "true": "f2b8d829-db8b-4290-a26e-501e6f8caaf0"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "MFA Authentication"
          },
          "96bfcd1e-ac3e-4c1b-a0fa-83c565b6501e": {
            "x": 1878.5,
            "y": 639.515625,
            "connections": {
              "outcome": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "nodeType": "product-PingOneProtectResultNode",
            "displayName": "Update P1 Protect Eval Failure"
          },
          "ad5fce39-cee2-4a9f-8526-79226348b59b": {
            "x": 174,
            "y": 369.515625,
            "connections": {
              "false": "96bfcd1e-ac3e-4c1b-a0fa-83c565b6501e",
              "true": "082e75c9-3a8a-4af5-accd-ed128a552d2a"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "Initialize P1 Protect"
          },
          "af58eddc-3f83-4356-bbab-524abcbd76c5": {
            "x": 597,
            "y": 233.515625,
            "connections": {
              "false": "96bfcd1e-ac3e-4c1b-a0fa-83c565b6501e",
              "true": "6b80bafb-5a0c-4777-a101-8337418e2e84"
            },
            "nodeType": "MessageNode",
            "displayName": "Password Reset"
          },
          "bd5ee2b6-8296-4519-b473-54f801012bcb": {
            "x": 979,
            "y": 501.015625,
            "connections": {
              "false": "85f5bcc2-93e0-4c0a-958d-7740c999c135",
              "true": "e04e451e-287b-4951-9f00-8ae5de3ebbce"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Is P1 Neo Enabled?"
          },
          "d054850b-9823-4f80-bb73-b6f89e1bd191": {
            "x": 177,
            "y": 674.515625,
            "connections": {
              "true": "2fcfe6cb-fd9a-4304-b90f-8ca59062fb44"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set p1ProtectAction As Init"
          },
          "d4c433d0-7909-4ff9-ac1d-977765b455aa": {
            "x": 566,
            "y": 789.015625,
            "connections": {
              "true": "07275b14-735f-432c-a7bf-54ffe4498cb8"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set flowType As Authentication"
          },
          "de2a5d5a-36c8-4929-a0d1-b786e193ea42": {
            "x": 1769,
            "y": 46.515625,
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "product-PingOneProtectResultNode",
            "displayName": "Update P1 Protect Eval Success"
          },
          "e04e451e-287b-4951-9f00-8ae5de3ebbce": {
            "x": 1328,
            "y": 584.515625,
            "connections": {
              "false": "96bfcd1e-ac3e-4c1b-a0fa-83c565b6501e",
              "true": "f2b8d829-db8b-4290-a26e-501e6f8caaf0"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "Selfie Verification"
          },
          "f2b8d829-db8b-4290-a26e-501e6f8caaf0": {
            "x": 1341,
            "y": 19,
            "connections": {
              "false": "de2a5d5a-36c8-4929-a0d1-b786e193ea42",
              "true": "13e92470-32de-4651-a6d9-67b1361b1f92"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Check for New Device"
          },
          "f8ac0fb4-c76f-432d-8029-03c86d61f611": {
            "x": 957,
            "y": 933.515625,
            "connections": {
              "false": "96bfcd1e-ac3e-4c1b-a0fa-83c565b6501e",
              "true": "648059a4-b131-44ef-88c4-a5cd39c06a1a"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "Protect Evaluation & Mitigation"
          }
        },
        "staticNodes": {
          "startNode": {
            "x": 22,
            "y": 39
          },
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 2355,
            "y": 267
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 2379,
            "y": 610
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "07275b14-735f-432c-a7bf-54ffe4498cb8": {
          "_id": "07275b14-735f-432c-a7bf-54ffe4498cb8",
          "_rev": "150682222",
          "script": "00f3eaed-ac1b-4737-b0f9-f2b0a825360f",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "p1ProtectAction",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "081f47b4-ff91-4a71-ab1a-d5eb98edf563": {
          "_id": "081f47b4-ff91-4a71-ab1a-d5eb98edf563",
          "_rev": "-1313204820",
          "script": "f402e7a4-22d6-4406-8faf-d92dc1e35db6",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "ciam_allowedMFATypes",
            "ciam_protectAnalysisRequired",
            "ciam_magicLinkEnabled"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "082e75c9-3a8a-4af5-accd-ed128a552d2a": {
          "_id": "082e75c9-3a8a-4af5-accd-ed128a552d2a",
          "_rev": "-978876584",
          "nodes": [
            {
              "_id": "d7b6d03d-7dea-4115-9da2-bd9a938bfab5",
              "nodeType": "ValidatedUsernameNode",
              "displayName": "Platform Username"
            },
            {
              "_id": "3843bc1e-9352-41ac-ac39-93ff109cfa36",
              "nodeType": "ValidatedPasswordNode",
              "displayName": "Platform Password"
            },
            {
              "_id": "215b52d4-5a11-4882-9cbd-a787b269a1d2",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Empty Username and Password ?"
            }
          ],
          "pageDescription": {
            "en": "New here? <a href=\"#/service/CIAM Deep Fake - Registration with Threat Detection and ID Verification Main Journey\">Create an account</a><br> Having trouble signing on? <a href=\"#/service/CIAM Deep Fake - Account Reset Main Journey\">Reset Password</a><br>"
          },
          "stage": "{\"submitButtonText\":{\"en\":\"Sign In\"}}",
          "pageHeader": {
            "en": "Sign In"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "0b85c2b7-8633-4ea6-b89b-252d3439a112": {
          "_id": "0b85c2b7-8633-4ea6-b89b-252d3439a112",
          "_rev": "-662908925",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "13e92470-32de-4651-a6d9-67b1361b1f92": {
          "_id": "13e92470-32de-4651-a6d9-67b1361b1f92",
          "_rev": "761949085",
          "emailTemplateName": "suspiciousActivity",
          "identityAttribute": "userName",
          "emailAttribute": "mail",
          "_type": {
            "_id": "EmailTemplateNode",
            "name": "Email Template Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "EMAIL_SENT",
              "displayName": "Email Sent"
            },
            {
              "id": "EMAIL_NOT_SENT",
              "displayName": "Email Not Sent"
            }
          ]
        },
        "2301f103-fe8d-402a-8844-e2a22135399c": {
          "_id": "2301f103-fe8d-402a-8844-e2a22135399c",
          "_rev": "2133315456",
          "script": "32a223c5-838f-4376-8223-ae9c16643dae",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_protectAnalysisRequired"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "2791aab1-0c32-4c5e-a150-e471ca395a2a": {
          "_id": "2791aab1-0c32-4c5e-a150-e471ca395a2a",
          "_rev": "1016409925",
          "spamDetectionTolerance": 3,
          "spamDetectionEnabled": false,
          "exitMessage": {},
          "waitingMessage": {
            "en": "Loading..."
          },
          "secondsToWait": 2,
          "exitable": false,
          "_type": {
            "_id": "PollingWaitNode",
            "name": "Polling Wait Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "DONE",
              "displayName": "Done"
            }
          ]
        },
        "2fcfe6cb-fd9a-4304-b90f-8ca59062fb44": {
          "_id": "2fcfe6cb-fd9a-4304-b90f-8ca59062fb44",
          "_rev": "-358481222",
          "script": "32a223c5-838f-4376-8223-ae9c16643dae",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_protectAnalysisRequired"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "4709521f-7bbc-4440-8af9-5b33da22445d": {
          "_id": "4709521f-7bbc-4440-8af9-5b33da22445d",
          "_rev": "-1204965364",
          "useUniversalIdForUsername": false,
          "minimumPasswordLength": 8,
          "mixedCaseForPasswordChangeMessages": false,
          "_type": {
            "_id": "IdentityStoreDecisionNode",
            "name": "Identity Store Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "TRUE",
              "displayName": "True"
            },
            {
              "id": "FALSE",
              "displayName": "False"
            },
            {
              "id": "LOCKED",
              "displayName": "Locked"
            },
            {
              "id": "CANCELLED",
              "displayName": "Cancelled"
            },
            {
              "id": "EXPIRED",
              "displayName": "Expired"
            }
          ]
        },
        "648059a4-b131-44ef-88c4-a5cd39c06a1a": {
          "_id": "648059a4-b131-44ef-88c4-a5cd39c06a1a",
          "_rev": "1619062646",
          "script": "3ef74e41-015a-4659-80ef-566a5668296f",
          "outcomes": [
            "highRisk",
            "lowRisk",
            "mediumRisk"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id",
            "PingOneProtectEvaluationNode.RISK"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "highRisk",
              "displayName": "highRisk"
            },
            {
              "id": "lowRisk",
              "displayName": "lowRisk"
            },
            {
              "id": "mediumRisk",
              "displayName": "mediumRisk"
            }
          ]
        },
        "6b80bafb-5a0c-4777-a101-8337418e2e84": {
          "_id": "6b80bafb-5a0c-4777-a101-8337418e2e84",
          "_rev": "-674071771",
          "emailSuspendMessage": {
            "en": "Password Expired! A password reset link has been sent to your email."
          },
          "emailTemplateName": "accountReset",
          "identityAttribute": "userName",
          "emailAttribute": "mail",
          "objectLookup": true,
          "_type": {
            "_id": "EmailSuspendNode",
            "name": "Email Suspend Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "85f5bcc2-93e0-4c0a-958d-7740c999c135": {
          "_id": "85f5bcc2-93e0-4c0a-958d-7740c999c135",
          "_rev": "856199654",
          "tree": "CIAM Deep Fake - MFA Authentication Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "96bfcd1e-ac3e-4c1b-a0fa-83c565b6501e": {
          "_id": "96bfcd1e-ac3e-4c1b-a0fa-83c565b6501e",
          "_rev": "1331677599",
          "status": "FAILED",
          "_type": {
            "_id": "product-PingOneProtectResultNode",
            "name": "PingOne Protect Result",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "ad5fce39-cee2-4a9f-8526-79226348b59b": {
          "_id": "ad5fce39-cee2-4a9f-8526-79226348b59b",
          "_rev": "-874707987",
          "tree": "CIAM Deep Fake - Threat Detection Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "af58eddc-3f83-4356-bbab-524abcbd76c5": {
          "_id": "af58eddc-3f83-4356-bbab-524abcbd76c5",
          "_rev": "1556866254",
          "messageYes": {
            "en": "Reset Password"
          },
          "message": {
            "en": "Your Password has been expired. Upon clicking 'Reset Password' you will receive a password reset link to your email address."
          },
          "messageNo": {
            "en": "Cancel"
          },
          "_type": {
            "_id": "MessageNode",
            "name": "Message Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "bd5ee2b6-8296-4519-b473-54f801012bcb": {
          "_id": "bd5ee2b6-8296-4519-b473-54f801012bcb",
          "_rev": "-1750979973",
          "script": "4a463a39-e743-499b-9923-61f7aaa6a0ef",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_p1NeoEnabled"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "d054850b-9823-4f80-bb73-b6f89e1bd191": {
          "_id": "d054850b-9823-4f80-bb73-b6f89e1bd191",
          "_rev": "-1588139205",
          "script": "bf16588d-6e67-4cfe-83a9-c877de085710",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "p1ProtectAction",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "d4c433d0-7909-4ff9-ac1d-977765b455aa": {
          "_id": "d4c433d0-7909-4ff9-ac1d-977765b455aa",
          "_rev": "1464332271",
          "script": "55994140-f9d1-4b3b-8922-87de6ebd71a2",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "flowType"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "de2a5d5a-36c8-4929-a0d1-b786e193ea42": {
          "_id": "de2a5d5a-36c8-4929-a0d1-b786e193ea42",
          "_rev": "1109423824",
          "status": "SUCCESS",
          "_type": {
            "_id": "product-PingOneProtectResultNode",
            "name": "PingOne Protect Result",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "e04e451e-287b-4951-9f00-8ae5de3ebbce": {
          "_id": "e04e451e-287b-4951-9f00-8ae5de3ebbce",
          "_rev": "-1002149406",
          "tree": "CIAM Deep Fake - Selfie Verification Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "f2b8d829-db8b-4290-a26e-501e6f8caaf0": {
          "_id": "f2b8d829-db8b-4290-a26e-501e6f8caaf0",
          "_rev": "519740482",
          "script": "3dfef6a0-2ef3-4c56-9177-7cf846ef2db7",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "newDevice"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "f8ac0fb4-c76f-432d-8029-03c86d61f611": {
          "_id": "f8ac0fb4-c76f-432d-8029-03c86d61f611",
          "_rev": "-72662001",
          "tree": "CIAM Deep Fake - Threat Detection Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        }
      },
      "innerNodes": {
        "d7b6d03d-7dea-4115-9da2-bd9a938bfab5": {
          "_id": "d7b6d03d-7dea-4115-9da2-bd9a938bfab5",
          "_rev": "-1780912214",
          "usernameAttribute": "userName",
          "validateInput": false,
          "_type": {
            "_id": "ValidatedUsernameNode",
            "name": "Platform Username",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "3843bc1e-9352-41ac-ac39-93ff109cfa36": {
          "_id": "3843bc1e-9352-41ac-ac39-93ff109cfa36",
          "_rev": "653236752",
          "passwordAttribute": "password",
          "validateInput": false,
          "_type": {
            "_id": "ValidatedPasswordNode",
            "name": "Platform Password",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "215b52d4-5a11-4882-9cbd-a787b269a1d2": {
          "_id": "215b52d4-5a11-4882-9cbd-a787b269a1d2",
          "_rev": "-333959816",
          "script": "05a6220a-b3df-44c9-b03a-404c4426b8e2",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        }
      },
      "scripts": {
        "00f3eaed-ac1b-4737-b0f9-f2b0a825360f": {
          "_id": "00f3eaed-ac1b-4737-b0f9-f2b0a825360f",
          "name": "OOTB - Set Protect Action As Eval Script",
          "description": "Script to set Protect action as Eval, will be used in Threat Detection Journey to evaluate Risk",
          "script": "\"/*\\n * P1 Protect Action As Eval Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * This script assigns an action for the P1 Protect child journey to evaluate potential threats.  \\n *\\n * Script Inputs  :  \\n *    - null  \\n *\\n * Script Outputs :  \\n *    - \\\"p1ProtectAction\\\" (String) - Defines the action to be taken in the threat detection journey  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Action successfully assigned)  \\n *    - \\\"Error\\\" (Unexpected execution failure)  \\n */\\n\\ntry {  \\n    // Assign the action for threat detection evaluation  \\n    nodeState.putShared(\\\"p1ProtectAction\\\", \\\"eval\\\");\\n\\n    // Set the outcome to success\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // Store user-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Store detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Redirect to the error outcome\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141509261,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744092468034,
          "evaluatorVersion": "2.0"
        },
        "f402e7a4-22d6-4406-8faf-d92dc1e35db6": {
          "_id": "f402e7a4-22d6-4406-8faf-d92dc1e35db6",
          "name": "OOTB - Initialize Variables Script",
          "description": "Script to Initialize variables that will be used further in the Journey",
          "script": "\"/* Prerequisites for this Journey Pack\\n       -Create following custom attributes before proceeding:\\n           1. custom_emailVerified - string (To keep track that user has verified their emailAddress)\\n           2. custom_protectActivityCity - string (User's P1 Protect Activity City, used in notification template)\\n           3. custom_protectActivityState - string (User's P1 Protect Activity City, used in notification template)\\n           4. custom_protectDeviceOS - string (User's P1 Protect Activity City, used in notification template)\\n           5. custom_mfaDevices - array of string (To set, fetch and display user's registered MFA devices)\\n           6. custom_latestMFADevice - string (Recent MFA device registered by user, used in notification template)\\n           7. custom_legalFirstName - string (Legal First Name captured from Govt. Id)\\n           8. custom_legalLastName - string (Legal Last Name captured from Govt. Id)\\n           9. custom_legalFullName - string (Legal Full Name captured from Govt. Id)\\n       -Configuration Check\\n           1. Set the environment variable p1-protect-analysis-required & p1-neo-enabled. If it is not set, the value specified in the code below for \\\"protectAnalysisRequired\\\" var & \\\"p1NeoEnabled\\\" will be used respectively.\\n           2. Threat Detection Inner Journey (If Protect Analysis Is Required):\\n               a. Update the PingOne Worker Service ID (P1 Worker App), Risk Policy ID* in following nodes: (*Optional, if not provided default will be considered)\\n                   -- P1 Protect Initialize (1 instance)\\n                   -- P1 Protect Evaluation (2 instances)\\n           3. ID Verification & Issuance To Wallet Journey (If P1 Neo Is Enabled):\\n               a. Update the PingOne Worker Service ID (P1 Worker App), P1 Verify Policy ID & Credential Type ID from the P1 Environment in following nodes:\\n                   -- PingOne Identity Match Node: Link Worker App\\n                   -- PingOne Create User Node: Link Worker App\\n                   -- MITEK PingOne Verify Evaluation Config. Provider Node: Open script, add Worker App & Verify Policy ID supporting MITEK Doc Authn Provider. See documentation for the steps to create Verify Policy for registration.\\n                   -- VERIFF PingOne Verify Evaluation Config. Provider Node: Open script, add Worker App & Verify Policy ID supporting VERIFF Doc Authn Provider. See documentation for the steps to create Verify Policy for registration.\\n                   -- **PingOne Verify Completion Node: Link Worker App & the below attached Verify Completion Script, also mark the `Use a script to process Verify transactions` checkbox. \\n                       Note: Script needs to be created and updated in the native console\\n                   -- PingOne Credentials Pair Wallet Config. Provider Node: Open script, add Worker App & add Digital Wallet Application ID. See documentation for the steps to create Digital Wallet Application in PingOne. \\n                   -- PingOne Credentials Issue Node: Link Worker App & add Credential Card type ID. See documentation for the credential card to be used.\\n                   -- PingOne Delete User Node (2 instances): Link Worker App\\n           4. MFA Registration Inner Journey (If \\\"SMS\\\", or \\\"VOICE\\\" are opted in below \\\"allowedMFATyps\\\" array):\\n               a. Update the required fields in:\\n                   -- OTP SMS Sender Node\\n                   -- Twilio Verify Lookup\\n                   -- Twilio Verify Sender\\n           5. MFA Authenticaion Inner Journey (If \\\"EMAIL\\\", \\\"SMS\\\", or \\\"VOICE\\\" are opted in below \\\"allowedMFATyps\\\" array):\\n               a. Update the required fields in:\\n                   -- OTP Email Sender Node\\n                   -- OTP SMS Sender Node\\n                   -- Twilio Verify Lookup\\n                   -- Twilio Verify Sender\\n           6. Registration with Threat Detection and ID Verification Main Journey\\n               a. Update the current journey URL in Failure URL node.\\n           7. Email templates configuration\\n               a. Account Reset - Replace this <your-tenant-name> with your tenant name.\\n               b. Account Disabled Reset Pwd - Replace this <your-tenant-name> with your tenant name.\\n*/\\n\\n/*****\\n    **Verify Completion Script (Script Type: PingOne Verify Completion Decision Node)\\n    /** ******************************************************************\\n         *\\n         * Retrieves the most recent Verify transaction, extracts data from \\n         * the Government ID, and matches it with the user's profile data. \\n         * The extracted information is stored in shared state for further use \\n         * in the authentication journey.\\n         *\\n         * Note: The data is available for a short time (~30 minutes) after\\n         * verification decision.\\n         *\\n         * Global Variables:\\n         * - `nodeState`: Access to authentication tree state attributes.\\n         * - `verifyTransactionsHelper`: Helper for Verify transactions.\\n         * - `outcome`: Maps to auth tree node outcomes.\\n         *\\n         ********************************************************************* /\\n        \\n        try {\\n          var firstNameMatch = 'NA';\\n          var lastNameMatch = 'NA';\\n          var fullNameMatch = 'NA';\\n        \\n          /**\\n           * Processes biographic match results and updates match status.\\n           * @param {Object} matchResults - Biographic match results.\\n           * /\\n          function updateBiographicMatch(matchResults) {\\n            for (var key in matchResults) {\\n              var confidence = matchResults[key].confidence;\\n              // If `rawScore` is missing, assume a value of 1, meaning \\n              // the biographic match is determined solely by confidence level.\\n              var rawScore = matchResults[key].rawScore != null ? matchResults[key].rawScore : 1;\\n              if (confidence === 'NOT_APPLICABLE') continue;\\n        \\n              var isHighConfidence = confidence === 'HIGH';\\n              var isHighScore = rawScore > 0.9;\\n              var matched = isHighConfidence && isHighScore;\\n        \\n              if (key === 'given_name') firstNameMatch = matched ? 'true' : 'false';\\n              else if (key === 'last_name') lastNameMatch = matched ? 'true' : 'false';\\n              else fullNameMatch = matched ? 'true' : 'false';\\n            }\\n          }\\n        \\n          /**\\n           * Converts an array of biographic match results into an object.\\n           * @param {Array} matchResultsArr - Array of biographic match data.\\n           * @returns {Object} Mapped biographic match object.\\n           * /\\n          function mapBiographicMatchResults(matchResultsArr) {\\n            var acc = {};\\n            for (var i = 0; i < matchResultsArr.length; i++) {\\n              var obj = matchResultsArr[i];\\n              // Standardize the `match` key by mapping it to `confidence`.\\n              acc[obj.identifier] = { confidence: obj.match };\\n            }\\n            return acc;\\n          }\\n        \\n          // Retrieve the latest Verify transaction\\n          var transactionData = verifyTransactionsHelper.getLastVerifyTransaction();\\n          if (!transactionData) {\\n            outcome = 'notStartedOutcome';\\n          } else {\\n            var lastTransaction = JSON.parse(transactionData);\\n            if (!lastTransaction.id) {\\n              outcome = 'notStartedOutcome';\\n            } else if (lastTransaction.hasOwnProperty(\\\"transactionStatus\\\") && lastTransaction.transactionStatus.status === 'FAIL') {\\n                // Set `failureOutcome` if status is 'FAIL'\\n                outcome = 'failureOutcome';\\n            } else {\\n              // Retrieve verified Government ID and Selfie data\\n              var verifiedGovtIdData = verifyTransactionsHelper.getVerifiedDataByType(lastTransaction.id, 'GOVERNMENT_ID');\\n              var verifiedSelfieData = verifyTransactionsHelper.getVerifiedDataByType(lastTransaction.id, 'SELFIE');\\n              var allMetadataResult = verifyTransactionsHelper.getAllMetadata(lastTransaction.id);\\n        \\n              if (!verifiedGovtIdData || !verifiedSelfieData) {\\n                outcome = 'notCompletedOutcome';\\n              } else {\\n                var verifiedGovtId = JSON.parse(verifiedGovtIdData);\\n                var verifiedSelfie = JSON.parse(verifiedSelfieData);\\n        \\n                if (!verifiedGovtId._embedded.verifiedData.length || !verifiedSelfie._embedded.verifiedData.length) {\\n                  outcome = 'failureOutcome';\\n                } else {\\n                  // Process Biographic Match metadata\\n                  if (allMetadataResult) {\\n                    var allMetadata = JSON.parse(allMetadataResult)._embedded.metaData;\\n                    for (var i = 0; i < allMetadata.length; i++) {\\n                      var metadata = allMetadata[i];\\n                      if (metadata.type === 'BIOGRAPHIC_MATCH' && metadata.status === 'SUCCESS') {\\n                        var matchResults = metadata.provider === 'BABEL_STREET' \\n                          ? metadata.data.detailedResults \\n                          : mapBiographicMatchResults(metadata.data.biographic_match_results);\\n                        updateBiographicMatch(matchResults);\\n                      }\\n                    }\\n                  }\\n                  \\n                  // Store biographic match results in shared state\\n                  nodeState.putShared('biographicMatchResult', {\\n                    firstNameMatch: firstNameMatch,\\n                    lastNameMatch: lastNameMatch,\\n                    fullNameMatch: fullNameMatch\\n                  });\\n                  \\n                  // Store image and captured data\\n                  nodeState.putShared('imageData', verifiedSelfie._embedded.verifiedData[0].data.IMAGE);\\n                  nodeState.putShared('capturedData', verifiedGovtId._embedded.verifiedData[0].data);\\n        \\n                  // Store transaction metadata in shared state\\n                  nodeState.putShared('pingOneVerificationMetaData', {\\n                    pingOneVerifyTransactionId: lastTransaction.id,\\n                    pingOneVerifyTransactionStatus: lastTransaction.transactionStatus,\\n                    verifiedDocuments: lastTransaction.verifiedDocuments,\\n                    pingOneVerifyPolicyId: lastTransaction.verifyPolicy.id,\\n                    pingOneVerifyTransactionCreatedAt: lastTransaction.createdAt\\n                  });\\n                  \\n                  outcome = 'successOutcome';\\n                }\\n              }\\n            }\\n          }\\n        } catch (e) {\\n          // User-friendly error message\\n          nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n          // Detailed error information for debugging\\n          nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n        }\\n*****/\\n\\n// Allowed MFA device types by the Admin\\nvar allowedMFATypes = [\\\"FIDO2\\\", \\\"OATH\\\", \\\"PUSH\\\", \\\"EMAIL\\\", \\\"SMS\\\", \\\"VOICE\\\"];\\nnodeState.putShared(\\\"ciam_allowedMFATypes\\\", allowedMFATypes);\\n\\n// Check if Admin wants to enable/disable protectAnalysis\\n// This value may be overridden later based on the respective environment variable\\nvar protectAnalysisRequired = true;\\nnodeState.putShared(\\\"ciam_protectAnalysisRequired\\\", protectAnalysisRequired);\\n\\n// Check if Admin wants to enable/disable ID Verification & Issuance To Wallet process\\n// This value can not be overridden later based on the respective environment variable\\nvar p1NeoEnabled = true;\\nnodeState.putShared(\\\"ciam_p1NeoEnabled\\\", p1NeoEnabled);\\n\\n// Check if Admin wants to allow OOB Magic Link as an MFA authentication method\\nvar magicLinkEnabled = true;\\nnodeState.putShared(\\\"ciam_magicLinkEnabled\\\", magicLinkEnabled);\\n\\noutcome = \\\"true\\\";\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141509168,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744226503143,
          "evaluatorVersion": "2.0"
        },
        "32a223c5-838f-4376-8223-ae9c16643dae": {
          "_id": "32a223c5-838f-4376-8223-ae9c16643dae",
          "name": "OOTB - Protect Analysis Required Script",
          "description": "Script to check if P1 Protect analysis is required or not",
          "script": "\"/*\\n * Protect Analysis Evaluation Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1 \\n * Date    : 03/28/2025  \\n *\\n * Determines if Protect analysis is required based on environment variables or node state.\\n *\\n * Script Inputs:\\n *    - \\\"ciam_protectAnalysisRequired\\\" (Boolean/String)  - Specifies if Protect analysis is needed.\\n * \\n * Script Outputs:\\n *    - \\\"errorMessage\\\"  (String)  - User-friendly error message.\\n *    - \\\"errorDetails\\\"  (String)  - Debugging details.\\n * \\n * Outcomes:\\n *    - \\\"true\\\"   - Protect analysis is required.\\n *    - \\\"false\\\"  - Protect analysis is not required.\\n *    - \\\"Error\\\"  - Failure during execution.\\n *\\n * Prerequisite: Ensure `esv.p1.protect.analysis.required` is set if needed.\\n */\\n\\ntry {\\n    // Retrieve Protect analysis requirement from the environment variable or node state\\n    var protectAnalysisRequired = systemEnv.getProperty(\\\"esv.p1.protect.analysis.required\\\");\\n\\n    // If the environment variable is not set, fall back to nodeState\\n    if (!protectAnalysisRequired || !protectAnalysisRequired.length) {\\n        protectAnalysisRequired = nodeState.get(\\\"ciam_protectAnalysisRequired\\\");\\n    }\\n\\n    // Determine the outcome based on the value of protectAnalysisRequired\\n    outcome = (protectAnalysisRequired === \\\"true\\\" || protectAnalysisRequired === true) ? \\\"true\\\" : \\\"false\\\";\\n\\n    // Proceed to the determined outcome\\n    action.goTo(outcome);\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n\\n    // Redirect to the error outcome\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "creationDate": 1743147019431,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744092468033,
          "evaluatorVersion": "2.0"
        },
        "3ef74e41-015a-4659-80ef-566a5668296f": {
          "_id": "3ef74e41-015a-4659-80ef-566a5668296f",
          "name": "OOTB - P1 Protect Extract Parameters From Risk Evaluation Script",
          "description": "Script to extract parameters from P1 Protect Risk Evaluation",
          "script": "\"/*\\n * Extract Parameters From Risk Evaluation\\n * \\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n * \\n * This script analyzes the risk level from PingOne Protect's evaluation response and updates user attributes accordingly.\\n * \\n * Script Inputs:\\n *    - \\\"PingOneProtectEvaluationNode.RISK\\\" (Object) - Risk evaluation details from PingOne Protect.\\n *    - \\\"_id\\\" (String) - User identifier.\\n * \\n * Script Outputs:\\n *    - \\\"errorMessage\\\"  (String) - Error message on failure.\\n *    - \\\"errorDetails\\\"  (String) - Detailed error information.\\n * \\n * Outcomes:\\n *    - \\\"highRisk\\\"     (High-risk detected)\\n *    - \\\"newDevice\\\"    (New device identified)\\n *    - \\\"lowRisk\\\"      (Low  risk detected)\\n *    - \\\"mediumRisk\\\"   (Medium risk detected)\\n */\\n\\ntry {\\n    function capitalizeFirstLetter(string) {\\n        return string\\n            .split(' ')                   // Split the string into an array of words\\n            .map(word =>\\n                word.charAt(0).toUpperCase() + word.slice(1)\\n            )                             // Capitalize the first letter of each word\\n            .join(' ');                   // Join the array back into a single string\\n    }\\n\\n    var rawResponse = nodeState.getObject(\\\"PingOneProtectEvaluationNode.RISK\\\");\\n\\n    var riskLevel = rawResponse.result.level;\\n    nodeState.putShared(\\\"riskLevel\\\", riskLevel);\\n\\n    // Get & Set the protect activity variables in user's profile (to be used in notification templates)\\n    var protectActivityCity = rawResponse.details.city;\\n    var protectActivityState = rawResponse.details.state;\\n    var protectDeviceOS = rawResponse.details.device.os.name;\\n\\n    protectActivityCity = capitalizeFirstLetter(protectActivityCity);\\n    protectActivityState = capitalizeFirstLetter(protectActivityState);\\n\\n\\n    // Get the userId from nodestate\\n    var userId = nodeState.get(\\\"_id\\\");\\n\\n    //Update the protectActvityCity attribute of user\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{ \\\"operation\\\": \\\"replace\\\", \\\"field\\\": \\\"/custom_protectActivityCity\\\", \\\"value\\\": protectActivityCity }]);\\n\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{ \\\"operation\\\": \\\"replace\\\", \\\"field\\\": \\\"/custom_protectActivityState\\\", \\\"value\\\": protectActivityState }]);\\n\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{ \\\"operation\\\": \\\"replace\\\", \\\"field\\\": \\\"/custom_protectDeviceOS\\\", \\\"value\\\": protectDeviceOS }]);\\n\\n    if (riskLevel === \\\"LOW\\\") {\\n        outcome = \\\"lowRisk\\\";\\n    }\\n    else if (riskLevel === \\\"MEDIUM\\\") {\\n        outcome = \\\"mediumRisk\\\";\\n    }\\n    else if (riskLevel === \\\"HIGH\\\") {\\n        outcome = \\\"highRisk\\\";\\n    }\\n\\n    // Check if new device is found\\n    if (rawResponse.details.newDevice.status === \\\"UNKNOWN_DEVICE\\\") {\\n        nodeState.putShared(\\\"newDevice\\\", \\\"true\\\");\\n    }\\n\\n    // Go to outcome\\n    action.goTo(outcome);\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507794,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744091681285,
          "evaluatorVersion": "2.0"
        },
        "4a463a39-e743-499b-9923-61f7aaa6a0ef": {
          "_id": "4a463a39-e743-499b-9923-61f7aaa6a0ef",
          "name": "OOTB - P1 Neo Enabled Script",
          "description": "Script to check if P1 Neo is enabled or not",
          "script": "\"/*\\n * PingOne Neo Enablement Check\\n * \\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/28/2025  \\n * \\n * Determines if PingOne Neo is enabled based on environment or nodeState variables.\\n * \\n * Script Inputs  : \\n *    - \\\"ciam_p1NeoEnabled\\\" (Boolean/String) - PingOne Neo enablement flag  \\n * \\n * Script Outputs : \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n * \\n * Outcomes       : \\n *    - \\\"true\\\"  (Neo Enabled)  \\n *    - \\\"false\\\" (Neo Not Enabled)  \\n *    - \\\"Error\\\" (Unexpected execution failure)  \\n */\\n\\ntry {\\n    // Retrieve PingOne Neo enablement flag from the environment variable\\n    var p1NeoEnabled = systemEnv.getProperty(\\\"esv.p1.neo.enabled\\\");\\n\\n    // If the environment variable is not set, fall back to nodeState\\n    if (!p1NeoEnabled || !p1NeoEnabled.length) {\\n        p1NeoEnabled = nodeState.get(\\\"ciam_p1NeoEnabled\\\");\\n    }\\n\\n    // Determine the outcome based on the enablement flag\\n    if (p1NeoEnabled === \\\"true\\\" || p1NeoEnabled === true) {\\n        outcome = \\\"true\\\";\\n    } else {\\n        outcome = \\\"false\\\";\\n    }\\n\\n    // Proceed to the determined outcome\\n    action.goTo(outcome);\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141508931,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744092468018,
          "evaluatorVersion": "2.0"
        },
        "bf16588d-6e67-4cfe-83a9-c877de085710": {
          "_id": "bf16588d-6e67-4cfe-83a9-c877de085710",
          "name": "OOTB - Set Protect Action As Init Script",
          "description": "Script to set Protect action as Init, will be used in Threat Detection Journey to initialize Protect SDK",
          "script": "\"/*\\n * P1 Protect Action As Eval Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * This script sets the initial action for the P1 Protect child journey to begin threat evaluation.  \\n *\\n * Script Inputs  :  \\n *    - null  \\n *\\n * Script Outputs :  \\n *    - \\\"p1ProtectAction\\\" (String) - Defines the action to be taken in the threat detection journey  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Action successfully assigned)  \\n *    - \\\"Error\\\" (Unexpected execution failure)  \\n */\\n\\ntry {\\n    // Initialize the action for threat detection\\n    nodeState.putShared(\\\"p1ProtectAction\\\", \\\"init\\\");\\n\\n    // Proceed to the success path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // Store user-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Store detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Redirect to the error outcome\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141509219,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744092468052,
          "evaluatorVersion": "2.0"
        },
        "55994140-f9d1-4b3b-8922-87de6ebd71a2": {
          "_id": "55994140-f9d1-4b3b-8922-87de6ebd71a2",
          "name": "OOTB - Set Flow Type As Authentication Script",
          "description": "Script to set flowType as Authentication",
          "script": "\"/*\\n * CIAM Protect Analysis Requirement Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * Script Inputs  :  \\n *    - null  \\n *\\n * Script Outputs :  \\n *    - \\\"flowType\\\" (String) - Stores the flow type as \\\"Authentication\\\"  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Successfully set flowType and moved forward)  \\n *    - \\\"Error\\\" (An error occurred during execution)  \\n */\\n\\ntry {\\n    // Setting the flowType as Authentication, this will be used to differentiate paths in Threat Detection Journey\\n    nodeState.putShared(\\\"flowType\\\", \\\"Authentication\\\");\\n    // Go to true\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\\n\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743151896771,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090712192,
          "evaluatorVersion": "2.0"
        },
        "3dfef6a0-2ef3-4c56-9177-7cf846ef2db7": {
          "_id": "3dfef6a0-2ef3-4c56-9177-7cf846ef2db7",
          "name": "OOTB - New Device Found Script",
          "description": "Script to check for new device",
          "script": "\"/*\\n * New Device Detection Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/28/2025\\n *\\n * Script Inputs  :  \\n *    - \\\"newDevice\\\" (String) - Indicates whether the device is new (\\\"true\\\" or \\\"false\\\")  \\n *\\n * Script Outputs :  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (New device detected)  \\n *    - \\\"false\\\" (Existing device)  \\n *    - \\\"Error\\\" (An error occurred during execution)  \\n */\\n\\ntry {\\n    if (nodeState.get(\\\"newDevice\\\") === \\\"true\\\") {\\n        outcome = \\\"true\\\";\\n    } else {\\n        outcome = \\\"false\\\";\\n    }\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error \\n    action.goTo(\\\"Error\\\");\\n}\\n\\n\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743151896746,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744225151650,
          "evaluatorVersion": "2.0"
        },
        "05a6220a-b3df-44c9-b03a-404c4426b8e2": {
          "_id": "05a6220a-b3df-44c9-b03a-404c4426b8e2",
          "name": "OOTB - Validate Username and Password.",
          "description": "Script to validate username and password",
          "script": "\"/*\\n * Username & Password Input Validation Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1\\n * Date    : 03/28/2025  \\n *\\n * Description:  \\n *    - This script ensures that the \\\"Next\\\" button remains disabled until both username and password fields are filled.  \\n *    - It dynamically observes changes in the input fields and enables the button when valid input is provided.  \\n *    - Prevents form submission if either field is empty at the time of submission.  \\n *\\n * Script Inputs  :  \\n *    - null  \\n *\\n * Script Outputs :  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Successfully enabled button for valid input)  \\n *    - \\\"Error\\\" (An error occurred during execution)  \\n */\\n\\ntry {\\n    // Disable next button, if input is empty\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                    if(submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        const username = document.querySelectorAll('input[data-vv-as=\\\\\\\"User Name\\\\\\\"]')[0]; \\\\n\\\\\\n                        const password = document.querySelectorAll('input[data-vv-as=\\\\\\\"Password\\\\\\\"]')[0];\\\\n\\\\\\n                        if (username && password && submitBtn) { \\\\n\\\\\\n                            const enableSubmitBtn = () => { \\\\n\\\\\\n                                // Check input validity before enabling submit button \\\\n\\\\\\n                                const isValidInput = username.value.length > 0 && password.value.length > 0; \\\\n\\\\\\n                                if (isValidInput) { \\\\n\\\\\\n                                    submitBtn.disabled = false; \\\\n\\\\\\n                                } else { \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }; \\\\n\\\\\\n                            // Revalidate before form submission \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                const isValidInput = username.value.length > 0 && password.value.length > 0; \\\\n\\\\\\n                                if (!isValidInput) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            username.addEventListener('input', enableSubmitBtn); \\\\n\\\\\\n                            password.addEventListener('input', enableSubmitBtn);\\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                       } \\\\n\\\\\\n                      } \\\\n\\\\\\n                      if (document.querySelectorAll('input[data-vv-as=\\\\\\\"User Name\\\\\\\"]')[0] && document.querySelectorAll('input[data-vv-as=\\\\\\\"Password\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                      else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                      } \\\\n\\\\\\n        \\\");\\n    }\\n    \\n    if (callbacks.isEmpty()) {                \\n        // Request callbacks\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n    // Go to true\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error \\n    action.goTo(\\\"Error\\\");\\n}\\n\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743151896828,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744224882864,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {
        "suspiciousActivity": {
          "_id": "emailTemplate/suspiciousActivity",
          "advancedEditor": true,
          "defaultLocale": "en",
          "description": "Fired when PingOne Protect detects some risk associated with the account",
          "displayName": "Suspicious Activity",
          "enabled": true,
          "from": "",
          "html": {
            "en": ""
          },
          "message": {
            "en": "<div style=\"display:block;width:400px;margin:0 auto;font-family:sans-serif;border:1px solid #c5c5c5;padding:30px 20px;text-align:center\">\n  <img src=\"https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png\" alt=\"Company Logo\" style=\"height:65px;margin-bottom:10px\" />\n  <div style=\"display:block\">\n    <div style=\"display:inline-block;width:40px;height:40px;border-radius:50%;background-color:red;color:white;font-size:24px;line-height:40px;text-align:center\">!</div>\n    <h2 style=\"margin-top:10px;margin-bottom:10px\">Sign-in attempt detected</h2>\n    <p>{{object.mail}}</p>\n    <hr style=\"width:100%;margin-top:20px;margin-bottom:25px;border:none;border-top:1px solid #c5c5c5\" />\n  </div>\n  <div style=\"text-align:left\">\n    <p id=\"alertText\">Someone just attempted to sign onto your account nearby {{object.custom_protectActivityCity}}, {{object.custom_protectActivityState}}. If this was not you, please consider resetting your password or contact support. Otherwise, ignore.</p>\n    <p>Thanks,\n      \n      <br />The ${Brand Name} team\n    \n    </p>\n  </div>\n</div>"
          },
          "mimeType": "text/html",
          "styles": "body {\n   background-color: #324054;\n   color: #455469;\n   padding: 60px;\n   text-align: center \n}\n a {\n   text-decoration: none;\n   color: #109cf1;\n}\n .content {\n   background-color: #fff;\n   border-radius: 4px;\n   margin: 0 auto;\n   padding: 48px;\n   width: 235px \n}\n",
          "subject": {
            "en": "Security alert"
          },
          "templateId": "suspiciousActivity"
        },
        "accountReset": {
          "_id": "emailTemplate/accountReset",
          "advancedEditor": true,
          "defaultLocale": "en",
          "description": "",
          "displayName": "Account Reset",
          "enabled": true,
          "from": "",
          "html": {
            "en": ""
          },
          "message": {
            "en": "<div style=\"display:block;width:400px;margin:0 auto;font-family:sans-serif;border:1px solid #c5c5c5;padding:30px 20px;text-align:center\">\n  <img src=\"https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png\" alt=\"Company Logo\" style=\"height:65px;margin-bottom:10px\" />\n  <div style=\"display:block\">\n    <h2 style=\"margin-top:10px;margin-bottom:10px\">Password Expiration</h2>\n    <p>{{object.mail}}</p>\n    <hr style=\"width:100%;margin-top:20px;margin-bottom:25px;border:none;border-top:1px solid #c5c5c5\" />\n  </div>\n  <div style=\"text-align:left\">\n    <p id=\"alertText\">Your account password has expired. For security reasons, you need to reset your password in order to regain access to your account.</p>\n    <p>We noticed a recent attempt to sign in from {{object.custom_protectActivityCity}}, {{object.custom_protectActivityState}}. If this was you, please proceed with resetting your password. If not, we recommend resetting your password immediately to secure your account.</p>\n    <p>\n      <a href=\"https://\n        &lt;your-tenant-name&gt;.forgeblocks.com/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=CIAM Deep Fake - Account Reset Main Journey\" style=\"text-decoration:none;color:#109cf1\">Reset your Password\n    \n        </a>\n      </p>\n      <p></p>\n      <p>Thanks\n    </p>\n    </div>\n  </div>"
          },
          "mimeType": "text/html",
          "styles": "body {\n   background-color: #324054;\n   color: #455469;\n   padding: 60px;\n   text-align: center \n}\n a {\n   text-decoration: none;\n   color: #109cf1;\n}\n .content {\n   background-color: #fff;\n   border-radius: 4px;\n   margin: 0 auto;\n   padding: 48px;\n   width: 235px \n}\n",
          "subject": {
            "en": ""
          },
          "templateId": "accountReset"
        }
      },
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "CIAM Deep Fake - Registration with Threat Detection and ID Verification Main Journey": {
      "tree": {
        "_id": "CIAM Deep Fake - Registration with Threat Detection and ID Verification Main Journey",
        "_rev": "814423123",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Deep Fake\"]"
        },
        "entryNodeId": "930caf6d-44d4-437c-a120-aa3b38e6053b",
        "innerTreeOnly": false,
        "nodes": {
          "00d415ea-0160-451c-a2b7-0389369d4066": {
            "connections": {
              "false": "55b6769f-1ceb-4a9e-93b0-7078facfa664",
              "true": "1f000fa7-1488-455a-901c-c0fd4a05c1e4"
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 1129.15625,
            "y": 865.015625
          },
          "0b01a0c1-5e98-4180-8a25-adba6c526902": {
            "connections": {
              "false": "2a33fff4-3312-4020-9dc4-6fd98d93f1d5",
              "true": "6d55cf66-be06-43bb-9587-66c40736ef75"
            },
            "displayName": "Required Attributes Present",
            "nodeType": "RequiredAttributesDecisionNode",
            "x": 1089,
            "y": 241.03125
          },
          "1366bef7-f3c3-412b-9a74-264e80d1e101": {
            "connections": {
              "outcome": "1e1e8ca4-ad57-48e2-9019-ab30c200a72f"
            },
            "displayName": "Disable User's Account",
            "nodeType": "AccountLockoutNode",
            "x": 2011,
            "y": 58.921875
          },
          "1e1e8ca4-ad57-48e2-9019-ab30c200a72f": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "29c07c5d-1deb-450f-98f2-cba6e68d3de1"
            },
            "displayName": "Get User Id In Shared State",
            "nodeType": "IdentifyExistingUserNode",
            "x": 2445.15625,
            "y": 34.015625
          },
          "1f000fa7-1488-455a-901c-c0fd4a05c1e4": {
            "connections": {
              "outcome": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "displayName": "Failure: Update P1 Protect Eval",
            "nodeType": "product-PingOneProtectResultNode",
            "x": 2021.5,
            "y": 660.0260416666667
          },
          "1f460b8d-b421-407c-8c9b-4f20056632c7": {
            "connections": {
              "true": "2fad9376-3c25-49d4-a749-7489ec7ba89a"
            },
            "displayName": "Transient To Shared",
            "nodeType": "ScriptedDecisionNode",
            "x": 270,
            "y": 0
          },
          "29c07c5d-1deb-450f-98f2-cba6e68d3de1": {
            "connections": {
              "true": "7c75bc7c-5187-42ed-b26d-b3f38d9660d5"
            },
            "displayName": "Set Email Ver. Status To True",
            "nodeType": "ScriptedDecisionNode",
            "x": 2820,
            "y": 74.015625
          },
          "2a33fff4-3312-4020-9dc4-6fd98d93f1d5": {
            "connections": {
              "outcome": "c7f2666c-1fa7-49c9-aa1f-49c491d4874c"
            },
            "displayName": "Create Profile Node",
            "nodeType": "PageNode",
            "x": 1534,
            "y": 395.015625
          },
          "2fad9376-3c25-49d4-a749-7489ec7ba89a": {
            "connections": {
              "false": "0b01a0c1-5e98-4180-8a25-adba6c526902",
              "true": "bb87f831-4d62-4499-9803-e541c73f9be3"
            },
            "displayName": "Is P1 Neo Enabled?",
            "nodeType": "ScriptedDecisionNode",
            "x": 690.25,
            "y": 92.39453125
          },
          "35108a68-ced7-4d17-8cd9-675fa27ff9ef": {
            "connections": {
              "true": "5509d330-6aa6-4109-9dc5-de2135f2dcb0"
            },
            "displayName": "Set p1ProtectAction As Init",
            "nodeType": "ScriptedDecisionNode",
            "x": 280,
            "y": 742.03125
          },
          "3934f3c7-cb18-4abe-b8a3-dba4e5857954": {
            "connections": {
              "true": "aa9efc2f-a9c3-443a-9475-1bd3460ab888"
            },
            "displayName": "Create Profile Node",
            "nodeType": "PageNode",
            "x": 690,
            "y": 982.921875
          },
          "3a64576b-b1de-4d31-9d5d-91e3bfef5f21": {
            "connections": {
              "false": "00d415ea-0160-451c-a2b7-0389369d4066",
              "true": "61399571-a844-4198-a914-f3b19d5d04d3"
            },
            "displayName": "Is Protect Analysis Required?",
            "nodeType": "ScriptedDecisionNode",
            "x": 674,
            "y": 1397.015625
          },
          "3b1551e1-3840-4bfc-8159-a5c122b64ca0": {
            "connections": {
              "false": "5442295f-8909-496f-bf51-e2a5654f8201",
              "true": "d3c14aec-e365-4b6f-8044-86ae3338cf9f"
            },
            "displayName": "Govt. ID Verification & Issuance To Wallet",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 2463,
            "y": 863.03125
          },
          "4a5f1a51-5766-4fd0-9503-bbfdce3d2e8a": {
            "connections": {
              "outcome": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "displayName": "Restart Journey",
            "nodeType": "SetFailureUrlNode",
            "x": 3432,
            "y": 931.015625
          },
          "4f695e18-8f93-4ff4-9035-fdbcdd912fbd": {
            "connections": {
              "true": "d4cb9fb7-0b5c-446b-b592-cdeb4b010344"
            },
            "displayName": "Delete AIC User Entry",
            "nodeType": "ScriptedDecisionNode",
            "x": 2996,
            "y": 1112.015625
          },
          "5442295f-8909-496f-bf51-e2a5654f8201": {
            "connections": {
              "true": "1f000fa7-1488-455a-901c-c0fd4a05c1e4"
            },
            "displayName": "Delete User Entry",
            "nodeType": "ScriptedDecisionNode",
            "x": 3535,
            "y": 439.421875
          },
          "54cc7697-bedd-43a8-93bc-6a1637506be7": {
            "connections": {
              "collected": "aa9efc2f-a9c3-443a-9475-1bd3460ab888",
              "error": "1f000fa7-1488-455a-901c-c0fd4a05c1e4"
            },
            "displayName": "Create Your Profile",
            "nodeType": "PageNode",
            "x": 1134.65625,
            "y": 1281.015625
          },
          "5509d330-6aa6-4109-9dc5-de2135f2dcb0": {
            "connections": {
              "false": "1f000fa7-1488-455a-901c-c0fd4a05c1e4",
              "true": "f8cef93b-3b74-4ca9-8deb-1e8bd4afb133"
            },
            "displayName": "Initialize P1 Protect",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 297,
            "y": 547.015625
          },
          "55b6769f-1ceb-4a9e-93b0-7078facfa664": {
            "connections": {
              "false": "3934f3c7-cb18-4abe-b8a3-dba4e5857954",
              "true": "d3bec877-56ef-49c5-add3-3a14cc807d3c"
            },
            "displayName": "Is P1 Neo Enabled?",
            "nodeType": "ScriptedDecisionNode",
            "x": 1134,
            "y": 1070.015625
          },
          "61367c17-beae-49a1-b59d-7d422a4fe6f9": {
            "connections": {
              "ACCOUNT_EXISTS": "d8c412ee-6c9d-4b74-97df-cce9f98775c0",
              "NO_ACCOUNT": "1f460b8d-b421-407c-8c9b-4f20056632c7",
              "SOCIAL_AUTH_INTERRUPTED": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "displayName": "Social Provider Handler Node",
            "nodeType": "SocialProviderHandlerNodeV2",
            "x": 667.375,
            "y": 282.015625
          },
          "61399571-a844-4198-a914-f3b19d5d04d3": {
            "connections": {
              "true": "6e6ebe5c-fa4d-4391-b0c6-0fe144f0e0cc"
            },
            "displayName": "Set p1ProtectAction As Eval",
            "nodeType": "ScriptedDecisionNode",
            "x": 675,
            "y": 1270.015625
          },
          "685eba90-1dfc-452c-8795-d743a7a5d1c0": {
            "connections": {
              "outcome": "ef7c5244-4131-4e3f-85ce-776d169847b1"
            },
            "displayName": "Enable User's Account",
            "nodeType": "AccountLockoutNode",
            "x": 3918,
            "y": 104.421875
          },
          "6d55cf66-be06-43bb-9587-66c40736ef75": {
            "connections": {
              "outcome": "c7f2666c-1fa7-49c9-aa1f-49c491d4874c"
            },
            "displayName": "Collect Country",
            "nodeType": "PageNode",
            "x": 1535,
            "y": 0
          },
          "6e6ebe5c-fa4d-4391-b0c6-0fe144f0e0cc": {
            "connections": {
              "false": "1f000fa7-1488-455a-901c-c0fd4a05c1e4",
              "true": "00d415ea-0160-451c-a2b7-0389369d4066"
            },
            "displayName": "Protect Evaluation & Mitigation",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1107,
            "y": 684.015625
          },
          "7c75bc7c-5187-42ed-b26d-b3f38d9660d5": {
            "connections": {
              "false": "867e6a7a-020c-4e21-b19a-22db4cbe200d",
              "true": "3b1551e1-3840-4bfc-8159-a5c122b64ca0"
            },
            "displayName": "Is P1 Neo Enabled?",
            "nodeType": "ScriptedDecisionNode",
            "x": 3174,
            "y": 53.015625
          },
          "8279c9af-67b8-421b-abb5-f618f9df453c": {
            "connections": {
              "true": "b9aaff63-dd75-4493-8e95-c842e864f915"
            },
            "displayName": "Delete AIC User Entry",
            "nodeType": "ScriptedDecisionNode",
            "x": 3001,
            "y": 1287.015625
          },
          "867e6a7a-020c-4e21-b19a-22db4cbe200d": {
            "connections": {
              "false": "5442295f-8909-496f-bf51-e2a5654f8201",
              "true": "685eba90-1dfc-452c-8795-d743a7a5d1c0"
            },
            "displayName": "MFA Device Registration",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 3548,
            "y": 63.015625
          },
          "88a92389-002a-4da7-ba21-70c107a48b1f": {
            "connections": {
              "true": "ded67cc8-51ba-4f47-89a2-854c98848642"
            },
            "displayName": "Prerequisites & Init Variables",
            "nodeType": "ScriptedDecisionNode",
            "x": 285,
            "y": 1263.921875
          },
          "8e52a8c0-0397-404d-b1fb-f7dff0ba1eca": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Success: Update P1 Protect Eval",
            "nodeType": "product-PingOneProtectResultNode",
            "x": 4598,
            "y": 126.02604166666669
          },
          "930caf6d-44d4-437c-a120-aa3b38e6053b": {
            "connections": {
              "DONE": "88a92389-002a-4da7-ba21-70c107a48b1f"
            },
            "displayName": "Polling Wait Node",
            "nodeType": "PollingWaitNode",
            "x": 310,
            "y": 1412.015625
          },
          "96c7d5cb-f672-4ca5-a351-7f3b2502c9b2": {
            "connections": {
              "CREATED": "9767caec-78d7-4866-b887-271e26ae9179",
              "FAILURE": "1f000fa7-1488-455a-901c-c0fd4a05c1e4"
            },
            "displayName": "Create User",
            "nodeType": "CreateObjectNode",
            "x": 2048,
            "y": 390.015625
          },
          "9767caec-78d7-4866-b887-271e26ae9179": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "1366bef7-f3c3-412b-9a74-264e80d1e101"
            },
            "displayName": "Data Store Decision",
            "nodeType": "DataStoreDecisionNode",
            "x": 2465,
            "y": 406.015625
          },
          "9cfb5a99-c4af-42b7-9843-8a75993aa857": {
            "connections": {
              "true": "35108a68-ced7-4d17-8cd9-675fa27ff9ef"
            },
            "displayName": "Set flowType As Registration",
            "nodeType": "ScriptedDecisionNode",
            "x": 278,
            "y": 888.03125
          },
          "aa9efc2f-a9c3-443a-9475-1bd3460ab888": {
            "connections": {
              "outcome": "df67463f-c465-459b-94d5-2464b4f29fd0"
            },
            "displayName": "Email Suspend Node",
            "nodeType": "EmailSuspendNode",
            "x": 691,
            "y": 869.015625
          },
          "b9aaff63-dd75-4493-8e95-c842e864f915": {
            "connections": {
              "outcome": "4a5f1a51-5766-4fd0-9503-bbfdce3d2e8a"
            },
            "displayName": "Failure: Update P1 Protect Eval",
            "nodeType": "product-PingOneProtectResultNode",
            "x": 3402,
            "y": 1124.015625
          },
          "bb87f831-4d62-4499-9803-e541c73f9be3": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "0b01a0c1-5e98-4180-8a25-adba6c526902"
            },
            "displayName": "Consent Page Node",
            "nodeType": "PageNode",
            "x": 1109.75,
            "y": 1.14453125
          },
          "c7f2666c-1fa7-49c9-aa1f-49c491d4874c": {
            "connections": {
              "true": "df67463f-c465-459b-94d5-2464b4f29fd0"
            },
            "displayName": "Shared To Transient",
            "nodeType": "ScriptedDecisionNode",
            "x": 1943.75,
            "y": 233.39453125
          },
          "d3bec877-56ef-49c5-add3-3a14cc807d3c": {
            "connections": {
              "false": "1f000fa7-1488-455a-901c-c0fd4a05c1e4",
              "true": "54cc7697-bedd-43a8-93bc-6a1637506be7"
            },
            "displayName": "Consent Page Node",
            "nodeType": "PageNode",
            "x": 1576,
            "y": 1311.015625
          },
          "d3c14aec-e365-4b6f-8044-86ae3338cf9f": {
            "connections": {
              "BIO_MATCH_FAILED": "4f695e18-8f93-4ff4-9035-fdbcdd912fbd",
              "CANCEL": "8279c9af-67b8-421b-abb5-f618f9df453c",
              "SUCCESS": "867e6a7a-020c-4e21-b19a-22db4cbe200d"
            },
            "displayName": "Neo Inner Journey Outcome",
            "nodeType": "ScriptedDecisionNode",
            "x": 2461,
            "y": 1100.015625
          },
          "d4cb9fb7-0b5c-446b-b592-cdeb4b010344": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "b9aaff63-dd75-4493-8e95-c842e864f915"
            },
            "displayName": "Return To Main Page",
            "nodeType": "PageNode",
            "x": 3007.65625,
            "y": 841.015625
          },
          "d8c412ee-6c9d-4b74-97df-cce9f98775c0": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Account Active Decision",
            "nodeType": "AccountActiveDecisionNode",
            "x": 4599,
            "y": 322.421875
          },
          "ded67cc8-51ba-4f47-89a2-854c98848642": {
            "connections": {
              "false": "f8cef93b-3b74-4ca9-8deb-1e8bd4afb133",
              "true": "9cfb5a99-c4af-42b7-9843-8a75993aa857"
            },
            "displayName": "Is Protect Analysis Required?",
            "nodeType": "ScriptedDecisionNode",
            "x": 278,
            "y": 1049.03125
          },
          "df67463f-c465-459b-94d5-2464b4f29fd0": {
            "connections": {
              "outcome": "96c7d5cb-f672-4ca5-a351-7f3b2502c9b2"
            },
            "displayName": "Enter Password",
            "nodeType": "PageNode",
            "x": 681,
            "y": 675.015625
          },
          "ef7c5244-4131-4e3f-85ce-776d169847b1": {
            "connections": {
              "EMAIL_NOT_SENT": "8e52a8c0-0397-404d-b1fb-f7dff0ba1eca",
              "EMAIL_SENT": "8e52a8c0-0397-404d-b1fb-f7dff0ba1eca"
            },
            "displayName": "Notify User On Email",
            "nodeType": "EmailTemplateNode",
            "x": 4256,
            "y": 81.015625
          },
          "f8cef93b-3b74-4ca9-8deb-1e8bd4afb133": {
            "connections": {
              "localAuthentication": "3a64576b-b1de-4d31-9d5d-91e3bfef5f21",
              "socialAuthentication": "61367c17-beae-49a1-b59d-7d422a4fe6f9"
            },
            "displayName": "Collect Username",
            "nodeType": "PageNode",
            "x": 263,
            "y": 142.015625
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 5008,
            "y": 209
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 2835,
            "y": 669
          },
          "startNode": {
            "x": 50,
            "y": 250
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "00d415ea-0160-451c-a2b7-0389369d4066": {
          "_id": "00d415ea-0160-451c-a2b7-0389369d4066",
          "_rev": "1041590554",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "0b01a0c1-5e98-4180-8a25-adba6c526902": {
          "_id": "0b01a0c1-5e98-4180-8a25-adba6c526902",
          "_rev": "399184538",
          "identityResource": "managed/alpha_user",
          "_type": {
            "_id": "RequiredAttributesDecisionNode",
            "name": "Required Attributes Present",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "1366bef7-f3c3-412b-9a74-264e80d1e101": {
          "_id": "1366bef7-f3c3-412b-9a74-264e80d1e101",
          "_rev": "-577917299",
          "lockAction": "LOCK",
          "_type": {
            "_id": "AccountLockoutNode",
            "name": "Account Lockout",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "1e1e8ca4-ad57-48e2-9019-ab30c200a72f": {
          "_id": "1e1e8ca4-ad57-48e2-9019-ab30c200a72f",
          "_rev": "1106955520",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "1f000fa7-1488-455a-901c-c0fd4a05c1e4": {
          "_id": "1f000fa7-1488-455a-901c-c0fd4a05c1e4",
          "_rev": "425793608",
          "status": "FAILED",
          "_type": {
            "_id": "product-PingOneProtectResultNode",
            "name": "PingOne Protect Result",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "1f460b8d-b421-407c-8c9b-4f20056632c7": {
          "_id": "1f460b8d-b421-407c-8c9b-4f20056632c7",
          "_rev": "-836392897",
          "script": "5b4afaff-3938-45d6-a7aa-8a4ca3c033d7",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "objectAttributes",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "objectAttributes"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "29c07c5d-1deb-450f-98f2-cba6e68d3de1": {
          "_id": "29c07c5d-1deb-450f-98f2-cba6e68d3de1",
          "_rev": "2091757441",
          "script": "1dad0550-6205-45ee-84db-7f2b3cf80676",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id",
            "ciam_allowedMFATypes"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "2a33fff4-3312-4020-9dc4-6fd98d93f1d5": {
          "_id": "2a33fff4-3312-4020-9dc4-6fd98d93f1d5",
          "_rev": "-544067804",
          "nodes": [
            {
              "_id": "0ad1a9b5-d517-4ba1-bb65-4be171218431",
              "nodeType": "AttributeCollectorNode",
              "displayName": "Attribute Collector"
            },
            {
              "_id": "1c22a795-c3f1-4cba-821b-19ca2f699458",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Country Collector"
            },
            {
              "_id": "3462f51e-3dea-4c0b-a529-b318187b5ca4",
              "nodeType": "AcceptTermsAndConditionsNode",
              "displayName": "Accept Terms and Conditions"
            }
          ],
          "pageDescription": {
            "en": "Enter your profile details as per your government ID."
          },
          "pageHeader": {
            "en": "Create Your Profile"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "2fad9376-3c25-49d4-a749-7489ec7ba89a": {
          "_id": "2fad9376-3c25-49d4-a749-7489ec7ba89a",
          "_rev": "1478630271",
          "script": "4a463a39-e743-499b-9923-61f7aaa6a0ef",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_p1NeoEnabled"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "35108a68-ced7-4d17-8cd9-675fa27ff9ef": {
          "_id": "35108a68-ced7-4d17-8cd9-675fa27ff9ef",
          "_rev": "-1771677958",
          "script": "bf16588d-6e67-4cfe-83a9-c877de085710",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "p1ProtectAction",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "3934f3c7-cb18-4abe-b8a3-dba4e5857954": {
          "_id": "3934f3c7-cb18-4abe-b8a3-dba4e5857954",
          "_rev": "-792940213",
          "nodes": [
            {
              "_id": "c57c5ca9-64bd-4b65-96d0-c01cf9dc0a8a",
              "nodeType": "AttributeCollectorNode",
              "displayName": "Attribute Collector"
            },
            {
              "_id": "fec57f53-395c-4c7b-a0ad-2436d0fad947",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Input"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Create Your Profile"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "3a64576b-b1de-4d31-9d5d-91e3bfef5f21": {
          "_id": "3a64576b-b1de-4d31-9d5d-91e3bfef5f21",
          "_rev": "-1085637666",
          "script": "32a223c5-838f-4376-8223-ae9c16643dae",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_protectAnalysisRequired"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "3b1551e1-3840-4bfc-8159-a5c122b64ca0": {
          "_id": "3b1551e1-3840-4bfc-8159-a5c122b64ca0",
          "_rev": "261865967",
          "tree": "CIAM Deep Fake - ID Verification And Issuance To Wallet Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "4a5f1a51-5766-4fd0-9503-bbfdce3d2e8a": {
          "_id": "4a5f1a51-5766-4fd0-9503-bbfdce3d2e8a",
          "_rev": "-1777431399",
          "failureUrl": "https://<your-tenant-name>.forgeblocks.com/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=CIAM%20Deep%20Fake%20-%20Registration%20with%20Threat%20Detection%20and%20ID%20Verification%20-%20Main%20Journey",
          "_type": {
            "_id": "SetFailureUrlNode",
            "name": "Failure URL",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "4f695e18-8f93-4ff4-9035-fdbcdd912fbd": {
          "_id": "4f695e18-8f93-4ff4-9035-fdbcdd912fbd",
          "_rev": "1697506900",
          "script": "40447d05-8335-4698-97a5-7be5edd6eb25",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "5442295f-8909-496f-bf51-e2a5654f8201": {
          "_id": "5442295f-8909-496f-bf51-e2a5654f8201",
          "_rev": "478916585",
          "script": "40447d05-8335-4698-97a5-7be5edd6eb25",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "54cc7697-bedd-43a8-93bc-6a1637506be7": {
          "_id": "54cc7697-bedd-43a8-93bc-6a1637506be7",
          "_rev": "899147834",
          "nodes": [
            {
              "_id": "f2c97d83-a382-4dbf-8373-257dafc887fc",
              "nodeType": "AttributeCollectorNode",
              "displayName": "Attribute Collector"
            },
            {
              "_id": "20d8ec86-c12a-407f-b15d-d0414ee08880",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Country Collector"
            }
          ],
          "pageDescription": {
            "en": "Enter your profile details as per your government ID, including your mobile number with country code."
          },
          "pageHeader": {
            "en": "Create Your Profile"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "collected",
              "displayName": "collected"
            },
            {
              "id": "error",
              "displayName": "error"
            }
          ]
        },
        "5509d330-6aa6-4109-9dc5-de2135f2dcb0": {
          "_id": "5509d330-6aa6-4109-9dc5-de2135f2dcb0",
          "_rev": "-1444819087",
          "tree": "CIAM Deep Fake - Threat Detection Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "55b6769f-1ceb-4a9e-93b0-7078facfa664": {
          "_id": "55b6769f-1ceb-4a9e-93b0-7078facfa664",
          "_rev": "-1307095825",
          "script": "4a463a39-e743-499b-9923-61f7aaa6a0ef",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_p1NeoEnabled"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "61367c17-beae-49a1-b59d-7d422a4fe6f9": {
          "_id": "61367c17-beae-49a1-b59d-7d422a4fe6f9",
          "_rev": "-1844016072",
          "clientType": "BROWSER",
          "script": "58c824ae-84ed-4724-82cd-db128fc3f6c",
          "usernameAttribute": "userName",
          "storeTokens": false,
          "_type": {
            "_id": "SocialProviderHandlerNodeV2",
            "name": "Social Provider Handler Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "ACCOUNT_EXISTS",
              "displayName": "Account exists"
            },
            {
              "id": "NO_ACCOUNT",
              "displayName": "No account exists"
            },
            {
              "id": "SOCIAL_AUTH_INTERRUPTED",
              "displayName": "Social auth interrupted"
            }
          ]
        },
        "61399571-a844-4198-a914-f3b19d5d04d3": {
          "_id": "61399571-a844-4198-a914-f3b19d5d04d3",
          "_rev": "-621717893",
          "script": "00f3eaed-ac1b-4737-b0f9-f2b0a825360f",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "p1ProtectAction",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "685eba90-1dfc-452c-8795-d743a7a5d1c0": {
          "_id": "685eba90-1dfc-452c-8795-d743a7a5d1c0",
          "_rev": "-1744624043",
          "lockAction": "UNLOCK",
          "_type": {
            "_id": "AccountLockoutNode",
            "name": "Account Lockout",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "6d55cf66-be06-43bb-9587-66c40736ef75": {
          "_id": "6d55cf66-be06-43bb-9587-66c40736ef75",
          "_rev": "1538237822",
          "nodes": [
            {
              "_id": "5f755dd5-5107-47d9-867d-a62d11bf1206",
              "nodeType": "AttributeCollectorNode",
              "displayName": "Confirm First And Last Name"
            },
            {
              "_id": "78769e50-faab-495f-aab7-ae4f46a6bfa1",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Country Collector"
            },
            {
              "_id": "9a5b3c5d-a994-4a20-a53c-190e469b93d7",
              "nodeType": "AcceptTermsAndConditionsNode",
              "displayName": "Accept Terms and Conditions"
            }
          ],
          "pageDescription": {
            "en": "Enter your profile details as per your government ID."
          },
          "pageHeader": {
            "en": "Select Country"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "6e6ebe5c-fa4d-4391-b0c6-0fe144f0e0cc": {
          "_id": "6e6ebe5c-fa4d-4391-b0c6-0fe144f0e0cc",
          "_rev": "826224697",
          "tree": "CIAM Deep Fake - Threat Detection Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "7c75bc7c-5187-42ed-b26d-b3f38d9660d5": {
          "_id": "7c75bc7c-5187-42ed-b26d-b3f38d9660d5",
          "_rev": "766991503",
          "script": "4a463a39-e743-499b-9923-61f7aaa6a0ef",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_p1NeoEnabled"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "8279c9af-67b8-421b-abb5-f618f9df453c": {
          "_id": "8279c9af-67b8-421b-abb5-f618f9df453c",
          "_rev": "-1292051020",
          "script": "40447d05-8335-4698-97a5-7be5edd6eb25",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "867e6a7a-020c-4e21-b19a-22db4cbe200d": {
          "_id": "867e6a7a-020c-4e21-b19a-22db4cbe200d",
          "_rev": "624263631",
          "tree": "CIAM Deep Fake - MFA Device Registration Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "88a92389-002a-4da7-ba21-70c107a48b1f": {
          "_id": "88a92389-002a-4da7-ba21-70c107a48b1f",
          "_rev": "-1684428916",
          "script": "f402e7a4-22d6-4406-8faf-d92dc1e35db6",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "ciam_allowedMFATypes",
            "ciam_protectAnalysisRequired",
            "ciam_p1NeoEnabled",
            "ciam_magicLinkEnabled"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "8e52a8c0-0397-404d-b1fb-f7dff0ba1eca": {
          "_id": "8e52a8c0-0397-404d-b1fb-f7dff0ba1eca",
          "_rev": "-64856246",
          "status": "SUCCESS",
          "_type": {
            "_id": "product-PingOneProtectResultNode",
            "name": "PingOne Protect Result",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "930caf6d-44d4-437c-a120-aa3b38e6053b": {
          "_id": "930caf6d-44d4-437c-a120-aa3b38e6053b",
          "_rev": "1601684437",
          "spamDetectionTolerance": 3,
          "spamDetectionEnabled": false,
          "exitMessage": {},
          "waitingMessage": {
            "en": "Loading..."
          },
          "secondsToWait": 2,
          "exitable": false,
          "_type": {
            "_id": "PollingWaitNode",
            "name": "Polling Wait Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "DONE",
              "displayName": "Done"
            }
          ]
        },
        "96c7d5cb-f672-4ca5-a351-7f3b2502c9b2": {
          "_id": "96c7d5cb-f672-4ca5-a351-7f3b2502c9b2",
          "_rev": "-394632412",
          "identityResource": "managed/alpha_user",
          "_type": {
            "_id": "CreateObjectNode",
            "name": "Create Object",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "CREATED",
              "displayName": "Created"
            },
            {
              "id": "FAILURE",
              "displayName": "Failed"
            }
          ]
        },
        "9767caec-78d7-4866-b887-271e26ae9179": {
          "_id": "9767caec-78d7-4866-b887-271e26ae9179",
          "_rev": "-391070304",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "name": "Data Store Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "9cfb5a99-c4af-42b7-9843-8a75993aa857": {
          "_id": "9cfb5a99-c4af-42b7-9843-8a75993aa857",
          "_rev": "-69804129",
          "script": "98b8fa72-3274-4c77-af5f-3cceb8706c7f",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "flowType",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "aa9efc2f-a9c3-443a-9475-1bd3460ab888": {
          "_id": "aa9efc2f-a9c3-443a-9475-1bd3460ab888",
          "_rev": "703549360",
          "emailSuspendMessage": {
            "en": "An email has been sent to the address you entered. Click the link in that email to proceed."
          },
          "emailTemplateName": "registration",
          "identityAttribute": "userName",
          "emailAttribute": "mail",
          "objectLookup": false,
          "_type": {
            "_id": "EmailSuspendNode",
            "name": "Email Suspend Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "b9aaff63-dd75-4493-8e95-c842e864f915": {
          "_id": "b9aaff63-dd75-4493-8e95-c842e864f915",
          "_rev": "-99471142",
          "status": "FAILED",
          "_type": {
            "_id": "product-PingOneProtectResultNode",
            "name": "PingOne Protect Result",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "bb87f831-4d62-4499-9803-e541c73f9be3": {
          "_id": "bb87f831-4d62-4499-9803-e541c73f9be3",
          "_rev": "-1193839407",
          "nodes": [
            {
              "_id": "21d7a390-7de0-407c-ab50-ea8a2558a574",
              "nodeType": "MessageNode",
              "displayName": "Consent Message"
            }
          ],
          "pageDescription": {},
          "stage": "{\"ConfirmationCallback\":[{\"id\":\"c04345d9-78d3-4ae6-b1aa-105ae658ac46\",\"showOnlyPositiveAnswer\":true},{\"id\":\"21d7a390-7de0-407c-ab50-ea8a2558a574\",\"showOnlyPositiveAnswer\":true}]}",
          "pageHeader": {
            "en": "Before You Begin"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "c7f2666c-1fa7-49c9-aa1f-49c491d4874c": {
          "_id": "c7f2666c-1fa7-49c9-aa1f-49c491d4874c",
          "_rev": "-1631514884",
          "script": "da0ba338-0780-4092-a606-95e78eb9e934",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "objectAttributes",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "objectAttributes"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "d3bec877-56ef-49c5-add3-3a14cc807d3c": {
          "_id": "d3bec877-56ef-49c5-add3-3a14cc807d3c",
          "_rev": "537413022",
          "nodes": [
            {
              "_id": "b62e18a1-2e24-40b8-9e15-92130190abc4",
              "nodeType": "MessageNode",
              "displayName": "Consent Message"
            }
          ],
          "pageDescription": {},
          "stage": "{\"ConfirmationCallback\":[{\"id\":\"fda85c86-d323-4081-a545-97d1d5e2d92b\",\"showOnlyPositiveAnswer\":true},{\"id\":\"d8672e69-a98c-4282-964a-3452ba7e1920\",\"showOnlyPositiveAnswer\":true},{\"id\":\"b62e18a1-2e24-40b8-9e15-92130190abc4\",\"showOnlyPositiveAnswer\":true}]}",
          "pageHeader": {
            "en": "Before You Begin"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "d3c14aec-e365-4b6f-8044-86ae3338cf9f": {
          "_id": "d3c14aec-e365-4b6f-8044-86ae3338cf9f",
          "_rev": "-476339979",
          "script": "ebec896d-7421-4733-bd81-7aadad89d45b",
          "outcomes": [
            "SUCCESS",
            "BIO_MATCH_FAILED",
            "CANCEL"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "journeyOutcome"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "SUCCESS",
              "displayName": "SUCCESS"
            },
            {
              "id": "BIO_MATCH_FAILED",
              "displayName": "BIO_MATCH_FAILED"
            },
            {
              "id": "CANCEL",
              "displayName": "CANCEL"
            }
          ]
        },
        "d4cb9fb7-0b5c-446b-b592-cdeb4b010344": {
          "_id": "d4cb9fb7-0b5c-446b-b592-cdeb4b010344",
          "_rev": "-1495302937",
          "nodes": [
            {
              "_id": "5937c97f-4214-4273-b564-cbec65da4f46",
              "nodeType": "MessageNode",
              "displayName": "Message Node"
            }
          ],
          "pageDescription": {},
          "stage": "{\"ConfirmationCallback\":[{\"id\":\"8bc5514c-6a03-4be9-b316-e0de99ea2b04\",\"showOnlyPositiveAnswer\":true},{\"id\":\"b2219ac7-c3b3-4a6c-a179-7ea76a9a790a\",\"showOnlyPositiveAnswer\":true},{\"id\":\"5937c97f-4214-4273-b564-cbec65da4f46\",\"showOnlyPositiveAnswer\":true}]}",
          "pageHeader": {
            "en": "Error"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "d8c412ee-6c9d-4b74-97df-cce9f98775c0": {
          "_id": "d8c412ee-6c9d-4b74-97df-cce9f98775c0",
          "_rev": "-1660026443",
          "_type": {
            "_id": "AccountActiveDecisionNode",
            "name": "Account Active Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "ded67cc8-51ba-4f47-89a2-854c98848642": {
          "_id": "ded67cc8-51ba-4f47-89a2-854c98848642",
          "_rev": "1541402688",
          "script": "32a223c5-838f-4376-8223-ae9c16643dae",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_protectAnalysisRequired"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "df67463f-c465-459b-94d5-2464b4f29fd0": {
          "_id": "df67463f-c465-459b-94d5-2464b4f29fd0",
          "_rev": "1655320660",
          "nodes": [
            {
              "_id": "3a4a63e6-0294-40ac-8096-cf194abc56df",
              "nodeType": "ValidatedPasswordNode",
              "displayName": "Platform Password"
            }
          ],
          "pageDescription": {},
          "stage": "{\"ValidatedCreatePasswordCallback\":[{\"id\":\"7c622dab-d7a0-4cd2-9baf-a8679add0968\",\"confirmPassword\":true,\"policyDisplayCheckmark\":true},{\"id\":\"3a4a63e6-0294-40ac-8096-cf194abc56df\",\"confirmPassword\":true,\"policyDisplayCheckmark\":true}]}",
          "pageHeader": {
            "en": "Enter Password"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "ef7c5244-4131-4e3f-85ce-776d169847b1": {
          "_id": "ef7c5244-4131-4e3f-85ce-776d169847b1",
          "_rev": "1282366472",
          "emailTemplateName": "welcome",
          "identityAttribute": "userName",
          "emailAttribute": "mail",
          "_type": {
            "_id": "EmailTemplateNode",
            "name": "Email Template Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "EMAIL_SENT",
              "displayName": "Email Sent"
            },
            {
              "id": "EMAIL_NOT_SENT",
              "displayName": "Email Not Sent"
            }
          ]
        },
        "f8cef93b-3b74-4ca9-8deb-1e8bd4afb133": {
          "_id": "f8cef93b-3b74-4ca9-8deb-1e8bd4afb133",
          "_rev": "665867068",
          "nodes": [
            {
              "_id": "0f46a3bf-503c-4448-b40c-eca1eddad5f0",
              "nodeType": "ValidatedUsernameNode",
              "displayName": "Platform Username"
            },
            {
              "_id": "74795cd8-e961-40ba-a5bb-7e1cde6f8498",
              "nodeType": "AcceptTermsAndConditionsNode",
              "displayName": "Accept Terms and Conditions"
            },
            {
              "_id": "8ce5e9b1-1123-47e1-876d-5cef5e6414b9",
              "nodeType": "SelectIdPNode",
              "displayName": "Select Identity Provider"
            }
          ],
          "pageDescription": {
            "en": "Signing up is fast and easy.<br>Already have an account? <a href='#/service/CIAM Deep Fake - Authentication Main Journey'>Sign In</a>"
          },
          "pageHeader": {
            "en": "Sign Up"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "socialAuthentication",
              "displayName": "Social Authentication"
            },
            {
              "id": "localAuthentication",
              "displayName": "Local Authentication"
            }
          ]
        }
      },
      "innerNodes": {
        "0ad1a9b5-d517-4ba1-bb65-4be171218431": {
          "_id": "0ad1a9b5-d517-4ba1-bb65-4be171218431",
          "_rev": "1435191567",
          "attributesToCollect": [
            "userName",
            "givenName",
            "sn"
          ],
          "identityAttribute": "userName",
          "validateInputs": true,
          "required": true,
          "_type": {
            "_id": "AttributeCollectorNode",
            "name": "Attribute Collector",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "1c22a795-c3f1-4cba-821b-19ca2f699458": {
          "_id": "1c22a795-c3f1-4cba-821b-19ca2f699458",
          "_rev": "1481213153",
          "script": "17b6f601-d234-4a29-90be-45b9d46eeeb6",
          "outcomes": [
            "collected"
          ],
          "outputs": [
            "objectAttributes",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id",
            "username",
            "objectAttributes"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "collected",
              "displayName": "collected"
            }
          ]
        },
        "3462f51e-3dea-4c0b-a529-b318187b5ca4": {
          "_id": "3462f51e-3dea-4c0b-a529-b318187b5ca4",
          "_rev": "-693349233",
          "_type": {
            "_id": "AcceptTermsAndConditionsNode",
            "name": "Accept Terms and Conditions",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "c57c5ca9-64bd-4b65-96d0-c01cf9dc0a8a": {
          "_id": "c57c5ca9-64bd-4b65-96d0-c01cf9dc0a8a",
          "_rev": "1606647615",
          "attributesToCollect": [
            "givenName",
            "sn",
            "mail"
          ],
          "identityAttribute": "userName",
          "validateInputs": true,
          "required": true,
          "_type": {
            "_id": "AttributeCollectorNode",
            "name": "Attribute Collector",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "fec57f53-395c-4c7b-a0ad-2436d0fad947": {
          "_id": "fec57f53-395c-4c7b-a0ad-2436d0fad947",
          "_rev": "1433241585",
          "script": "5127eaff-3606-4ee4-b9cd-808d193ce838",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "f2c97d83-a382-4dbf-8373-257dafc887fc": {
          "_id": "f2c97d83-a382-4dbf-8373-257dafc887fc",
          "_rev": "-1375839800",
          "attributesToCollect": [
            "givenName",
            "sn",
            "mail",
            "telephoneNumber"
          ],
          "identityAttribute": "userName",
          "validateInputs": true,
          "required": true,
          "_type": {
            "_id": "AttributeCollectorNode",
            "name": "Attribute Collector",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "20d8ec86-c12a-407f-b15d-d0414ee08880": {
          "_id": "20d8ec86-c12a-407f-b15d-d0414ee08880",
          "_rev": "1942684171",
          "script": "17b6f601-d234-4a29-90be-45b9d46eeeb6",
          "outcomes": [
            "collected",
            "error"
          ],
          "outputs": [
            "objectAttributes",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id",
            "username",
            "objectAttributes"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "collected",
              "displayName": "collected"
            },
            {
              "id": "error",
              "displayName": "error"
            }
          ]
        },
        "5f755dd5-5107-47d9-867d-a62d11bf1206": {
          "_id": "5f755dd5-5107-47d9-867d-a62d11bf1206",
          "_rev": "-730965256",
          "attributesToCollect": [
            "givenName",
            "sn"
          ],
          "identityAttribute": "userName",
          "validateInputs": true,
          "required": true,
          "_type": {
            "_id": "AttributeCollectorNode",
            "name": "Attribute Collector",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "78769e50-faab-495f-aab7-ae4f46a6bfa1": {
          "_id": "78769e50-faab-495f-aab7-ae4f46a6bfa1",
          "_rev": "1536766107",
          "script": "17b6f601-d234-4a29-90be-45b9d46eeeb6",
          "outcomes": [
            "collected"
          ],
          "outputs": [
            "objectAttributes",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id",
            "username",
            "objectAttributes"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "collected",
              "displayName": "collected"
            }
          ]
        },
        "9a5b3c5d-a994-4a20-a53c-190e469b93d7": {
          "_id": "9a5b3c5d-a994-4a20-a53c-190e469b93d7",
          "_rev": "1443920568",
          "_type": {
            "_id": "AcceptTermsAndConditionsNode",
            "name": "Accept Terms and Conditions",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "21d7a390-7de0-407c-ab50-ea8a2558a574": {
          "_id": "21d7a390-7de0-407c-ab50-ea8a2558a574",
          "_rev": "2129072953",
          "messageYes": {
            "en": "Next"
          },
          "message": {
            "en": "<div>\n    <p>\n    <b>What you'll need to begin:</b>\n        <ol>\n        <li>Photo Identification</li>\n        <li>Email Address</li>\n        <li>Mobile Phone</li>\n        </ol>            \n    </p>\n    <p>\n    Please have your Driver's License or U.S. Passport ready to scan for verification.\n    <br/><br/>\n    Your email address and/or phone number may also be verified using a verification code.\n    </p>\n</div>"
          },
          "messageNo": {},
          "_type": {
            "_id": "MessageNode",
            "name": "Message Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "b62e18a1-2e24-40b8-9e15-92130190abc4": {
          "_id": "b62e18a1-2e24-40b8-9e15-92130190abc4",
          "_rev": "1809265362",
          "messageYes": {
            "en": "Next"
          },
          "message": {
            "en": "<div>\n    <p>\n    <b>What you'll need to begin:</b>\n        <ol>\n        <li>Photo Identification</li>\n        <li>Email Address</li>\n        <li>Mobile Phone</li>\n        </ol>            \n    </p>\n    <p>\n    Please have your Driver's License or U.S. Passport ready to scan for verification.\n    <br/><br/>\n    Your email address and/or phone number may also be verified using a verification code.\n    </p>\n</div>"
          },
          "messageNo": {},
          "_type": {
            "_id": "MessageNode",
            "name": "Message Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "5937c97f-4214-4273-b564-cbec65da4f46": {
          "_id": "5937c97f-4214-4273-b564-cbec65da4f46",
          "_rev": "-1599453923",
          "messageYes": {
            "en": "Go To Main Page"
          },
          "message": {
            "en": "The biographic match failed for the provided documents."
          },
          "messageNo": {},
          "_type": {
            "_id": "MessageNode",
            "name": "Message Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "3a4a63e6-0294-40ac-8096-cf194abc56df": {
          "_id": "3a4a63e6-0294-40ac-8096-cf194abc56df",
          "_rev": "-307205355",
          "passwordAttribute": "password",
          "validateInput": true,
          "_type": {
            "_id": "ValidatedPasswordNode",
            "name": "Platform Password",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "0f46a3bf-503c-4448-b40c-eca1eddad5f0": {
          "_id": "0f46a3bf-503c-4448-b40c-eca1eddad5f0",
          "_rev": "1610515515",
          "usernameAttribute": "userName",
          "validateInput": true,
          "_type": {
            "_id": "ValidatedUsernameNode",
            "name": "Platform Username",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "74795cd8-e961-40ba-a5bb-7e1cde6f8498": {
          "_id": "74795cd8-e961-40ba-a5bb-7e1cde6f8498",
          "_rev": "-468040272",
          "_type": {
            "_id": "AcceptTermsAndConditionsNode",
            "name": "Accept Terms and Conditions",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "8ce5e9b1-1123-47e1-876d-5cef5e6414b9": {
          "_id": "8ce5e9b1-1123-47e1-876d-5cef5e6414b9",
          "_rev": "-763966479",
          "includeLocalAuthentication": true,
          "filteredProviders": [
            "Google",
            "Facebook"
          ],
          "identityAttribute": "mail",
          "passwordAttribute": "password",
          "offerOnlyExisting": false,
          "_type": {
            "_id": "SelectIdPNode",
            "name": "Select Identity Provider",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "socialAuthentication",
              "displayName": "Social Authentication"
            },
            {
              "id": "localAuthentication",
              "displayName": "Local Authentication"
            }
          ]
        }
      },
      "scripts": {
        "5b4afaff-3938-45d6-a7aa-8a4ca3c033d7": {
          "_id": "5b4afaff-3938-45d6-a7aa-8a4ca3c033d7",
          "name": "OOTB - objAttributes From Transient To Shared state Script",
          "description": "Script to set objectAttributes state type to shared",
          "script": "\"/*\\n * Object Attributes Transfer Script\\n * \\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n * \\n * This script transfers the `objectAttributes` from the transient state to the shared state.\\n * \\n * Script Inputs:\\n *    - \\\"objectAttributes\\\" (Object) - Data passed by a prior node.\\n * \\n * Script Outputs:\\n *    - \\\"objectAttributes\\\" (Object) - Shared state variable for downstream nodes.\\n * \\n * Outcomes:\\n *    - \\\"true\\\"  - Attributes transferred successfully or no attributes present.\\n *    - \\\"Error\\\" - If an exception occurs during execution.\\n */\\n\\ntry {\\n    // Get objectAttributes from node state\\n    var objectAttributes = nodeState.getObject(\\\"objectAttributes\\\");\\n\\n    // Transfer to sharedState if present\\n    if (objectAttributes) {        \\n        nodeState.putShared(\\\"objectAttributes\\\", objectAttributes);\\n        nodeState.putTransient(\\\"objectAttributes\\\", null); // Clean up transient state\\n    }\\n\\n    // Set success outcome\\n    outcome = \\\"true\\\";\\n\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n\\n    // Set error outcome\\n    outcome = \\\"Error\\\";\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "creationDate": 1744015630657,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744224821621,
          "evaluatorVersion": "2.0"
        },
        "1dad0550-6205-45ee-84db-7f2b3cf80676": {
          "_id": "1dad0550-6205-45ee-84db-7f2b3cf80676",
          "name": "OOTB - Set Email Verification Status Script",
          "description": "Script to set email verification status in user's profile",
          "script": "\"/*\\n * Email Verification Status Updation & MFA Enrollment Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * This script marks emailVerified attribute and enrolls \\\"EMAIL\\\" as an MFA method if allowed.\\n *\\n * Script Inputs  : \\n *    - \\\"_id\\\" (String) - User ID  \\n *    - \\\"ciam_allowedMFATypes\\\" (Array) - List of allowed MFA methods  \\n *\\n * Script Outputs : \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       : \\n *    - \\\"true\\\"  (Email MFA enrollment successful)  \\n *    - \\\"Error\\\" (Unexpected execution failure)  \\n *\\n * Caution: This script may auto-enroll \\\"EMAIL\\\" as an MFA method in the user's profile.\\n */\\n\\ntry {\\n    // Get the user ID\\n    var userId = nodeState.get(\\\"_id\\\");\\n\\n    // Mark the emailVerified attribute as verified\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [\\n        { \\\"operation\\\": \\\"replace\\\", \\\"field\\\": \\\"/custom_emailVerified\\\", \\\"value\\\": \\\"true\\\" }\\n    ]);\\n\\n    // Retrieve allowed MFA methods\\n    var allowedMFAMethods = nodeState.get(\\\"ciam_allowedMFATypes\\\");\\n\\n    // Fetch user's existing MFA devices\\n    var mfaDevicesObj = openidm.read(\\\"managed/alpha_user/\\\" + userId, null, [\\\"custom_mfaDevices\\\"]);\\n    var mfaDevices = (mfaDevicesObj && mfaDevicesObj.custom_mfaDevices) ? mfaDevicesObj.custom_mfaDevices : [];\\n\\n    // Convert MFA devices to an array format\\n    var usableMFADevices = [];\\n   \\n    mfaDevices.forEach(device => {\\n        usableMFADevices.push(device);\\n    });\\n\\n    var emailMFAAllowed = false;\\n    for (var i = 0; i < allowedMFAMethods.length; i++) {\\n        if (allowedMFAMethods[i] === \\\"EMAIL\\\") {\\n            emailMFAAllowed = true;\\n            break;\\n        }\\n    }\\n\\n    // Add EMAIL to MFA devices if allowed and not already present\\n    if (emailMFAAllowed && usableMFADevices.indexOf(\\\"EMAIL\\\") === -1) {\\n        usableMFADevices.push(\\\"EMAIL\\\");\\n    }\\n\\n    // Update the MFA devices in the user profile\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [\\n        { \\\"operation\\\": \\\"replace\\\", \\\"field\\\": \\\"/custom_mfaDevices\\\", \\\"value\\\": usableMFADevices }\\n    ]);\\n\\n    // Proceed to success outcome\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141508893,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744092468033,
          "evaluatorVersion": "2.0"
        },
        "4a463a39-e743-499b-9923-61f7aaa6a0ef": {
          "_id": "4a463a39-e743-499b-9923-61f7aaa6a0ef",
          "name": "OOTB - P1 Neo Enabled Script",
          "description": "Script to check if P1 Neo is enabled or not",
          "script": "\"/*\\n * PingOne Neo Enablement Check\\n * \\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/28/2025  \\n * \\n * Determines if PingOne Neo is enabled based on environment or nodeState variables.\\n * \\n * Script Inputs  : \\n *    - \\\"ciam_p1NeoEnabled\\\" (Boolean/String) - PingOne Neo enablement flag  \\n * \\n * Script Outputs : \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n * \\n * Outcomes       : \\n *    - \\\"true\\\"  (Neo Enabled)  \\n *    - \\\"false\\\" (Neo Not Enabled)  \\n *    - \\\"Error\\\" (Unexpected execution failure)  \\n */\\n\\ntry {\\n    // Retrieve PingOne Neo enablement flag from the environment variable\\n    var p1NeoEnabled = systemEnv.getProperty(\\\"esv.p1.neo.enabled\\\");\\n\\n    // If the environment variable is not set, fall back to nodeState\\n    if (!p1NeoEnabled || !p1NeoEnabled.length) {\\n        p1NeoEnabled = nodeState.get(\\\"ciam_p1NeoEnabled\\\");\\n    }\\n\\n    // Determine the outcome based on the enablement flag\\n    if (p1NeoEnabled === \\\"true\\\" || p1NeoEnabled === true) {\\n        outcome = \\\"true\\\";\\n    } else {\\n        outcome = \\\"false\\\";\\n    }\\n\\n    // Proceed to the determined outcome\\n    action.goTo(outcome);\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141508931,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744092468018,
          "evaluatorVersion": "2.0"
        },
        "bf16588d-6e67-4cfe-83a9-c877de085710": {
          "_id": "bf16588d-6e67-4cfe-83a9-c877de085710",
          "name": "OOTB - Set Protect Action As Init Script",
          "description": "Script to set Protect action as Init, will be used in Threat Detection Journey to initialize Protect SDK",
          "script": "\"/*\\n * P1 Protect Action As Eval Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * This script sets the initial action for the P1 Protect child journey to begin threat evaluation.  \\n *\\n * Script Inputs  :  \\n *    - null  \\n *\\n * Script Outputs :  \\n *    - \\\"p1ProtectAction\\\" (String) - Defines the action to be taken in the threat detection journey  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Action successfully assigned)  \\n *    - \\\"Error\\\" (Unexpected execution failure)  \\n */\\n\\ntry {\\n    // Initialize the action for threat detection\\n    nodeState.putShared(\\\"p1ProtectAction\\\", \\\"init\\\");\\n\\n    // Proceed to the success path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // Store user-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Store detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Redirect to the error outcome\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141509219,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744092468052,
          "evaluatorVersion": "2.0"
        },
        "32a223c5-838f-4376-8223-ae9c16643dae": {
          "_id": "32a223c5-838f-4376-8223-ae9c16643dae",
          "name": "OOTB - Protect Analysis Required Script",
          "description": "Script to check if P1 Protect analysis is required or not",
          "script": "\"/*\\n * Protect Analysis Evaluation Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1 \\n * Date    : 03/28/2025  \\n *\\n * Determines if Protect analysis is required based on environment variables or node state.\\n *\\n * Script Inputs:\\n *    - \\\"ciam_protectAnalysisRequired\\\" (Boolean/String)  - Specifies if Protect analysis is needed.\\n * \\n * Script Outputs:\\n *    - \\\"errorMessage\\\"  (String)  - User-friendly error message.\\n *    - \\\"errorDetails\\\"  (String)  - Debugging details.\\n * \\n * Outcomes:\\n *    - \\\"true\\\"   - Protect analysis is required.\\n *    - \\\"false\\\"  - Protect analysis is not required.\\n *    - \\\"Error\\\"  - Failure during execution.\\n *\\n * Prerequisite: Ensure `esv.p1.protect.analysis.required` is set if needed.\\n */\\n\\ntry {\\n    // Retrieve Protect analysis requirement from the environment variable or node state\\n    var protectAnalysisRequired = systemEnv.getProperty(\\\"esv.p1.protect.analysis.required\\\");\\n\\n    // If the environment variable is not set, fall back to nodeState\\n    if (!protectAnalysisRequired || !protectAnalysisRequired.length) {\\n        protectAnalysisRequired = nodeState.get(\\\"ciam_protectAnalysisRequired\\\");\\n    }\\n\\n    // Determine the outcome based on the value of protectAnalysisRequired\\n    outcome = (protectAnalysisRequired === \\\"true\\\" || protectAnalysisRequired === true) ? \\\"true\\\" : \\\"false\\\";\\n\\n    // Proceed to the determined outcome\\n    action.goTo(outcome);\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n\\n    // Redirect to the error outcome\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "creationDate": 1743147019431,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744092468033,
          "evaluatorVersion": "2.0"
        },
        "40447d05-8335-4698-97a5-7be5edd6eb25": {
          "_id": "40447d05-8335-4698-97a5-7be5edd6eb25",
          "name": "OOTB - Delete User Entry Script",
          "description": "Script to delete a user's entry from directory service if they fail during registration process",
          "script": "\"/*\\n * User Deletion Script\\n * \\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n * \\n * Deletes a user from the data store using their ID.\\n * \\n * Script Inputs:\\n *    - \\\"_id\\\" (String) - User identifier.\\n * \\n * Script Outputs:\\n *    - \\\"errorMessage\\\" (String) - User-friendly error message if an error occurs.\\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging.\\n * \\n * Outcomes:\\n *    - \\\"true\\\"  (Success)\\n *    - \\\"Error\\\" (Failure)\\n */\\n\\ntry {\\n    var userId = nodeState.get(\\\"_id\\\");\\n    \\n    if (!userId) {\\n        throw new Error(\\\"User ID not found in shared state.\\\");\\n    }\\n    \\n    // Delete the user entry from the data store\\n    openidm.delete('managed/alpha_user/'+ userId, null);\\n    \\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141508988,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744092468034,
          "evaluatorVersion": "2.0"
        },
        "00f3eaed-ac1b-4737-b0f9-f2b0a825360f": {
          "_id": "00f3eaed-ac1b-4737-b0f9-f2b0a825360f",
          "name": "OOTB - Set Protect Action As Eval Script",
          "description": "Script to set Protect action as Eval, will be used in Threat Detection Journey to evaluate Risk",
          "script": "\"/*\\n * P1 Protect Action As Eval Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * This script assigns an action for the P1 Protect child journey to evaluate potential threats.  \\n *\\n * Script Inputs  :  \\n *    - null  \\n *\\n * Script Outputs :  \\n *    - \\\"p1ProtectAction\\\" (String) - Defines the action to be taken in the threat detection journey  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Action successfully assigned)  \\n *    - \\\"Error\\\" (Unexpected execution failure)  \\n */\\n\\ntry {  \\n    // Assign the action for threat detection evaluation  \\n    nodeState.putShared(\\\"p1ProtectAction\\\", \\\"eval\\\");\\n\\n    // Set the outcome to success\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // Store user-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Store detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Redirect to the error outcome\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141509261,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744092468034,
          "evaluatorVersion": "2.0"
        },
        "f402e7a4-22d6-4406-8faf-d92dc1e35db6": {
          "_id": "f402e7a4-22d6-4406-8faf-d92dc1e35db6",
          "name": "OOTB - Initialize Variables Script",
          "description": "Script to Initialize variables that will be used further in the Journey",
          "script": "\"/* Prerequisites for this Journey Pack\\n       -Create following custom attributes before proceeding:\\n           1. custom_emailVerified - string (To keep track that user has verified their emailAddress)\\n           2. custom_protectActivityCity - string (User's P1 Protect Activity City, used in notification template)\\n           3. custom_protectActivityState - string (User's P1 Protect Activity City, used in notification template)\\n           4. custom_protectDeviceOS - string (User's P1 Protect Activity City, used in notification template)\\n           5. custom_mfaDevices - array of string (To set, fetch and display user's registered MFA devices)\\n           6. custom_latestMFADevice - string (Recent MFA device registered by user, used in notification template)\\n           7. custom_legalFirstName - string (Legal First Name captured from Govt. Id)\\n           8. custom_legalLastName - string (Legal Last Name captured from Govt. Id)\\n           9. custom_legalFullName - string (Legal Full Name captured from Govt. Id)\\n       -Configuration Check\\n           1. Set the environment variable p1-protect-analysis-required & p1-neo-enabled. If it is not set, the value specified in the code below for \\\"protectAnalysisRequired\\\" var & \\\"p1NeoEnabled\\\" will be used respectively.\\n           2. Threat Detection Inner Journey (If Protect Analysis Is Required):\\n               a. Update the PingOne Worker Service ID (P1 Worker App), Risk Policy ID* in following nodes: (*Optional, if not provided default will be considered)\\n                   -- P1 Protect Initialize (1 instance)\\n                   -- P1 Protect Evaluation (2 instances)\\n           3. ID Verification & Issuance To Wallet Journey (If P1 Neo Is Enabled):\\n               a. Update the PingOne Worker Service ID (P1 Worker App), P1 Verify Policy ID & Credential Type ID from the P1 Environment in following nodes:\\n                   -- PingOne Identity Match Node: Link Worker App\\n                   -- PingOne Create User Node: Link Worker App\\n                   -- MITEK PingOne Verify Evaluation Config. Provider Node: Open script, add Worker App & Verify Policy ID supporting MITEK Doc Authn Provider. See documentation for the steps to create Verify Policy for registration.\\n                   -- VERIFF PingOne Verify Evaluation Config. Provider Node: Open script, add Worker App & Verify Policy ID supporting VERIFF Doc Authn Provider. See documentation for the steps to create Verify Policy for registration.\\n                   -- **PingOne Verify Completion Node: Link Worker App & the below attached Verify Completion Script, also mark the `Use a script to process Verify transactions` checkbox. \\n                       Note: Script needs to be created and updated in the native console\\n                   -- PingOne Credentials Pair Wallet Config. Provider Node: Open script, add Worker App & add Digital Wallet Application ID. See documentation for the steps to create Digital Wallet Application in PingOne. \\n                   -- PingOne Credentials Issue Node: Link Worker App & add Credential Card type ID. See documentation for the credential card to be used.\\n                   -- PingOne Delete User Node (2 instances): Link Worker App\\n           4. MFA Registration Inner Journey (If \\\"SMS\\\", or \\\"VOICE\\\" are opted in below \\\"allowedMFATyps\\\" array):\\n               a. Update the required fields in:\\n                   -- OTP SMS Sender Node\\n                   -- Twilio Verify Lookup\\n                   -- Twilio Verify Sender\\n           5. MFA Authenticaion Inner Journey (If \\\"EMAIL\\\", \\\"SMS\\\", or \\\"VOICE\\\" are opted in below \\\"allowedMFATyps\\\" array):\\n               a. Update the required fields in:\\n                   -- OTP Email Sender Node\\n                   -- OTP SMS Sender Node\\n                   -- Twilio Verify Lookup\\n                   -- Twilio Verify Sender\\n           6. Registration with Threat Detection and ID Verification Main Journey\\n               a. Update the current journey URL in Failure URL node.\\n           7. Email templates configuration\\n               a. Account Reset - Replace this <your-tenant-name> with your tenant name.\\n               b. Account Disabled Reset Pwd - Replace this <your-tenant-name> with your tenant name.\\n*/\\n\\n/*****\\n    **Verify Completion Script (Script Type: PingOne Verify Completion Decision Node)\\n    /** ******************************************************************\\n         *\\n         * Retrieves the most recent Verify transaction, extracts data from \\n         * the Government ID, and matches it with the user's profile data. \\n         * The extracted information is stored in shared state for further use \\n         * in the authentication journey.\\n         *\\n         * Note: The data is available for a short time (~30 minutes) after\\n         * verification decision.\\n         *\\n         * Global Variables:\\n         * - `nodeState`: Access to authentication tree state attributes.\\n         * - `verifyTransactionsHelper`: Helper for Verify transactions.\\n         * - `outcome`: Maps to auth tree node outcomes.\\n         *\\n         ********************************************************************* /\\n        \\n        try {\\n          var firstNameMatch = 'NA';\\n          var lastNameMatch = 'NA';\\n          var fullNameMatch = 'NA';\\n        \\n          /**\\n           * Processes biographic match results and updates match status.\\n           * @param {Object} matchResults - Biographic match results.\\n           * /\\n          function updateBiographicMatch(matchResults) {\\n            for (var key in matchResults) {\\n              var confidence = matchResults[key].confidence;\\n              // If `rawScore` is missing, assume a value of 1, meaning \\n              // the biographic match is determined solely by confidence level.\\n              var rawScore = matchResults[key].rawScore != null ? matchResults[key].rawScore : 1;\\n              if (confidence === 'NOT_APPLICABLE') continue;\\n        \\n              var isHighConfidence = confidence === 'HIGH';\\n              var isHighScore = rawScore > 0.9;\\n              var matched = isHighConfidence && isHighScore;\\n        \\n              if (key === 'given_name') firstNameMatch = matched ? 'true' : 'false';\\n              else if (key === 'last_name') lastNameMatch = matched ? 'true' : 'false';\\n              else fullNameMatch = matched ? 'true' : 'false';\\n            }\\n          }\\n        \\n          /**\\n           * Converts an array of biographic match results into an object.\\n           * @param {Array} matchResultsArr - Array of biographic match data.\\n           * @returns {Object} Mapped biographic match object.\\n           * /\\n          function mapBiographicMatchResults(matchResultsArr) {\\n            var acc = {};\\n            for (var i = 0; i < matchResultsArr.length; i++) {\\n              var obj = matchResultsArr[i];\\n              // Standardize the `match` key by mapping it to `confidence`.\\n              acc[obj.identifier] = { confidence: obj.match };\\n            }\\n            return acc;\\n          }\\n        \\n          // Retrieve the latest Verify transaction\\n          var transactionData = verifyTransactionsHelper.getLastVerifyTransaction();\\n          if (!transactionData) {\\n            outcome = 'notStartedOutcome';\\n          } else {\\n            var lastTransaction = JSON.parse(transactionData);\\n            if (!lastTransaction.id) {\\n              outcome = 'notStartedOutcome';\\n            } else if (lastTransaction.hasOwnProperty(\\\"transactionStatus\\\") && lastTransaction.transactionStatus.status === 'FAIL') {\\n                // Set `failureOutcome` if status is 'FAIL'\\n                outcome = 'failureOutcome';\\n            } else {\\n              // Retrieve verified Government ID and Selfie data\\n              var verifiedGovtIdData = verifyTransactionsHelper.getVerifiedDataByType(lastTransaction.id, 'GOVERNMENT_ID');\\n              var verifiedSelfieData = verifyTransactionsHelper.getVerifiedDataByType(lastTransaction.id, 'SELFIE');\\n              var allMetadataResult = verifyTransactionsHelper.getAllMetadata(lastTransaction.id);\\n        \\n              if (!verifiedGovtIdData || !verifiedSelfieData) {\\n                outcome = 'notCompletedOutcome';\\n              } else {\\n                var verifiedGovtId = JSON.parse(verifiedGovtIdData);\\n                var verifiedSelfie = JSON.parse(verifiedSelfieData);\\n        \\n                if (!verifiedGovtId._embedded.verifiedData.length || !verifiedSelfie._embedded.verifiedData.length) {\\n                  outcome = 'failureOutcome';\\n                } else {\\n                  // Process Biographic Match metadata\\n                  if (allMetadataResult) {\\n                    var allMetadata = JSON.parse(allMetadataResult)._embedded.metaData;\\n                    for (var i = 0; i < allMetadata.length; i++) {\\n                      var metadata = allMetadata[i];\\n                      if (metadata.type === 'BIOGRAPHIC_MATCH' && metadata.status === 'SUCCESS') {\\n                        var matchResults = metadata.provider === 'BABEL_STREET' \\n                          ? metadata.data.detailedResults \\n                          : mapBiographicMatchResults(metadata.data.biographic_match_results);\\n                        updateBiographicMatch(matchResults);\\n                      }\\n                    }\\n                  }\\n                  \\n                  // Store biographic match results in shared state\\n                  nodeState.putShared('biographicMatchResult', {\\n                    firstNameMatch: firstNameMatch,\\n                    lastNameMatch: lastNameMatch,\\n                    fullNameMatch: fullNameMatch\\n                  });\\n                  \\n                  // Store image and captured data\\n                  nodeState.putShared('imageData', verifiedSelfie._embedded.verifiedData[0].data.IMAGE);\\n                  nodeState.putShared('capturedData', verifiedGovtId._embedded.verifiedData[0].data);\\n        \\n                  // Store transaction metadata in shared state\\n                  nodeState.putShared('pingOneVerificationMetaData', {\\n                    pingOneVerifyTransactionId: lastTransaction.id,\\n                    pingOneVerifyTransactionStatus: lastTransaction.transactionStatus,\\n                    verifiedDocuments: lastTransaction.verifiedDocuments,\\n                    pingOneVerifyPolicyId: lastTransaction.verifyPolicy.id,\\n                    pingOneVerifyTransactionCreatedAt: lastTransaction.createdAt\\n                  });\\n                  \\n                  outcome = 'successOutcome';\\n                }\\n              }\\n            }\\n          }\\n        } catch (e) {\\n          // User-friendly error message\\n          nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n          // Detailed error information for debugging\\n          nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n        }\\n*****/\\n\\n// Allowed MFA device types by the Admin\\nvar allowedMFATypes = [\\\"FIDO2\\\", \\\"OATH\\\", \\\"PUSH\\\", \\\"EMAIL\\\", \\\"SMS\\\", \\\"VOICE\\\"];\\nnodeState.putShared(\\\"ciam_allowedMFATypes\\\", allowedMFATypes);\\n\\n// Check if Admin wants to enable/disable protectAnalysis\\n// This value may be overridden later based on the respective environment variable\\nvar protectAnalysisRequired = true;\\nnodeState.putShared(\\\"ciam_protectAnalysisRequired\\\", protectAnalysisRequired);\\n\\n// Check if Admin wants to enable/disable ID Verification & Issuance To Wallet process\\n// This value can not be overridden later based on the respective environment variable\\nvar p1NeoEnabled = true;\\nnodeState.putShared(\\\"ciam_p1NeoEnabled\\\", p1NeoEnabled);\\n\\n// Check if Admin wants to allow OOB Magic Link as an MFA authentication method\\nvar magicLinkEnabled = true;\\nnodeState.putShared(\\\"ciam_magicLinkEnabled\\\", magicLinkEnabled);\\n\\noutcome = \\\"true\\\";\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141509168,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744226503143,
          "evaluatorVersion": "2.0"
        },
        "98b8fa72-3274-4c77-af5f-3cceb8706c7f": {
          "_id": "98b8fa72-3274-4c77-af5f-3cceb8706c7f",
          "name": "OOTB - Set Flow Type As Registration Script",
          "description": "Script to set flowType as Registration",
          "script": "\"/*\\n * Flow Type Assignment Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * Assigns \\\"flowType\\\" as \\\"Registration\\\" to differentiate paths in the Threat Detection Journey.\\n *\\n * Script Inputs  : null  \\n *\\n * Script Outputs :  \\n *    - \\\"flowType\\\" (String) - Flow identifier  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message  \\n *    - \\\"errorDetails\\\" (String) - Debugging details  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Flow type assigned)  \\n *    - \\\"Error\\\" (Execution failure)  \\n */\\n\\ntry {\\n    // Setting the flowType as Registration, this will be used to differentiate paths in Threat Detection Journey\\n    nodeState.putShared(\\\"flowType\\\", \\\"Registration\\\");\\n    outcome = \\\"true\\\";\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141508858,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744092468018,
          "evaluatorVersion": "2.0"
        },
        "da0ba338-0780-4092-a606-95e78eb9e934": {
          "_id": "da0ba338-0780-4092-a606-95e78eb9e934",
          "name": "OOTB - objAttributes From Shared To Transient State",
          "description": "Script to set objectAttributes state type to transient",
          "script": "\"/*\\n * Object Attributes Restore Script\\n * \\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 04/07/2025  \\n * \\n * This script restores `objectAttributes` from shared state to transient state.\\n * \\n * Script Inputs:\\n *    - \\\"objectAttributes\\\" (Object) - Attributes retrieved from shared state.\\n * \\n * Script Outputs:\\n *    - \\\"objectAttributes\\\" (Object) - Available in transient state for current node processing.\\n * \\n * Outcomes:\\n *    - \\\"true\\\"  - Attributes restored successfully or not found (non-blocking).\\n *    - \\\"Error\\\" - If an exception occurs during execution.\\n */\\n\\ntry {\\n    // Get objectAttributes from shared state\\n    var objectAttributes = nodeState.get(\\\"objectAttributes\\\");\\n\\n    // Restore to transient state if present\\n    if (objectAttributes) {        \\n        nodeState.putTransient(\\\"objectAttributes\\\", objectAttributes);\\n    }\\n\\n    // Set success outcome\\n    outcome = \\\"true\\\";\\n\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n\\n    // Set error outcome\\n    outcome = \\\"Error\\\";\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "creationDate": 1744015630648,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744224835215,
          "evaluatorVersion": "2.0"
        },
        "ebec896d-7421-4733-bd81-7aadad89d45b": {
          "_id": "ebec896d-7421-4733-bd81-7aadad89d45b",
          "name": "OOTB - Inner Journey Outcome Script",
          "description": "Script to identify outcome from the inner journey",
          "script": "\"/*\\n * Neo Inner Journey Outcome Handler\\n * \\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/28/2025  \\n * \\n * This script retrieves the outcome of the Neo Inner Journey and directs the flow accordingly.\\n * \\n * Script Inputs:\\n *    - \\\"journeyOutcome\\\" (String) - Outcome from the inner journey.\\n * \\n * Script Outputs:\\n *    - null\\n * \\n * Outcomes:\\n *    - \\\"SUCCESS\\\"          (Journey completed successfully)\\n *    - \\\"BIO_MATCH_FAILED\\\" (Biometric match failure)\\n *    - \\\"CANCEL\\\"           (User canceled the journey)\\n *    - \\\"Error\\\"            (Failure)\\n */\\n\\ntry {\\n    // Retrieve the Neo Inner Journey outcome from shared state\\n    // (the outcome after the Success Node execution in the inner journey)\\n    // Default to \\\"SUCCESS\\\" if not present\\n    var journeyOutcome = nodeState.get('journeyOutcome') ? nodeState.get('journeyOutcome') : \\\"SUCCESS\\\";\\n\\n    // Proceed with the retrieved outcome\\n    action.goTo(journeyOutcome);\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141508960,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744092468021,
          "evaluatorVersion": "2.0"
        },
        "17b6f601-d234-4a29-90be-45b9d46eeeb6": {
          "_id": "17b6f601-d234-4a29-90be-45b9d46eeeb6",
          "name": "OOTB - Country Collector Script",
          "description": "Script to select country from dropdown list",
          "script": "\"/* Country Collector\\n *\\n * Author: Ping Identity\\n * Version: 1.0\\n * Date: 03/28/2025\\n * \\n * Render a dropdown list with countries.\\n * \\n * Script Inputs:\\n *    - \\\"_id\\\" (String) - User ID.\\n *    - \\\"username\\\" (String) - Username.\\n *    - \\\"objectAttributes\\\" (Object) - Existing attributes associated with the user.\\n *\\n * Script Outputs:\\n *    - \\\"objectAttributes\\\" (Object) - Updated attributes with selected country.\\n *    - \\\"errorMessage\\\" (String) - User-friendly error message if an error occurs.\\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging.\\n *\\n * Outcomes:\\n *    - \\\"collected\\\" (Country successfully selected and stored).\\n *    - \\\"error\\\" (Unexpected failure).\\n */\\n\\ntry {\\n    /**\\n     * Returns a JavaScript string that:\\n     *  - Sets max length (255) for input fields.\\n     *  - Disables the submit button until all fields are filled.\\n     *  - Ensures max length is enforced, even if modified in the browser.\\n     */\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n            const firstName = document.querySelector('input[data-vv-as=\\\\\\\"First Name\\\\\\\"]'); \\\\n\\\\\\n            const lastName = document.querySelector('input[data-vv-as=\\\\\\\"Last Name\\\\\\\"]'); \\\\n\\\\\\n            const emailAddress = document.querySelector('input[data-vv-as=\\\\\\\"Email Address\\\\\\\"]'); \\\\n\\\\\\n            const telephoneNumber = document.querySelector('input[data-vv-as=\\\\\\\"Telephone Number\\\\\\\"]'); \\\\n\\\\\\n            const submitBtn = document.querySelector('button[type=\\\\\\\"submit\\\\\\\"]'); \\\\n\\\\\\n            \\\\n\\\\\\n            if (firstName) firstName.setAttribute('maxlength', '255'); \\\\n\\\\\\n            if (lastName) lastName.setAttribute('maxlength', '255'); \\\\n\\\\\\n            if (emailAddress) emailAddress.setAttribute('maxlength', '255'); \\\\n\\\\\\n            if (telephoneNumber) telephoneNumber.setAttribute('maxlength', '15'); \\\\n\\\\\\n            \\\\n\\\\\\n            const hasFields = firstName || lastName || emailAddress || telephoneNumber; \\\\n\\\\\\n            if (hasFields && submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n            \\\\n\\\\\\n            function validateFields() { \\\\n\\\\\\n                const phoneRegex = /^\\\\\\\\+?([0-9\\\\\\\\- \\\\\\\\(\\\\\\\\)])*$/; \\\\n\\\\\\n                const isFirstNameValid = firstName ? firstName.value.trim().length > 0 : true; \\\\n\\\\\\n                const isLastNameValid = lastName ? lastName.value.trim().length > 0 : true; \\\\n\\\\\\n                const isEmailValid = emailAddress ? emailAddress.value.trim().length > 0 : true; \\\\n\\\\\\n                const isPhoneValid = telephoneNumber ? (telephoneNumber.value.trim().length > 0 && phoneRegex.test(telephoneNumber.value.trim())) : true; \\\\n\\\\\\n                \\\\n\\\\\\n                if (submitBtn) submitBtn.disabled = !(isFirstNameValid && isLastNameValid && isEmailValid && isPhoneValid); \\\\n\\\\\\n            } \\\\n\\\\\\n            \\\\n\\\\\\n            if (submitBtn) { \\\\n\\\\\\n                submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                    if (firstName && firstName.value.length > 255 || \\\\n\\\\\\n                        lastName && lastName.value.length > 255 || \\\\n\\\\\\n                        emailAddress && emailAddress.value.length > 255 || \\\\n\\\\\\n                        telephoneNumber && (telephoneNumber.value.length > 15 || !/^\\\\\\\\+?([0-9\\\\\\\\- \\\\\\\\(\\\\\\\\)])*$/.test(telephoneNumber.value.trim()))) { \\\\n\\\\\\n                        event.preventDefault(); \\\\n\\\\\\n                        submitBtn.disabled = true; \\\\n\\\\\\n                    } \\\\n\\\\\\n                    validateFields(); \\\\n\\\\\\n                }); \\\\n\\\\\\n            } \\\\n\\\\\\n            \\\\n\\\\\\n            if (firstName) firstName.addEventListener('input', validateFields); \\\\n\\\\\\n            if (lastName) lastName.addEventListener('input', validateFields); \\\\n\\\\\\n            if (emailAddress) emailAddress.addEventListener('input', validateFields); \\\\n\\\\\\n            if (telephoneNumber) telephoneNumber.addEventListener('input', validateFields); \\\\n\\\\\\n        \\\");\\n    }\\n    \\n    var label = 'Country';\\n    var countryAmAttr = 'co';\\n    var countryIdmAttr = 'country';\\n    var countries = {\\n        '--': 'Other',\\n        'BM': 'Bermuda 🇧🇲',\\n        'BR': 'Brazil 🇧🇷',\\n        'IN': 'India 🇮🇳',\\n        'IE': 'Ireland 🇮🇪',\\n        'JP': 'Japan 🇯🇵',\\n        'MX': 'Mexico 🇲🇽',\\n        'PH': 'Philippines 🇵🇭',\\n        'PL': 'Poland 🇵🇱',\\n        'GB': 'United Kingdom 🇬🇧',\\n        'US': 'United States 🇺🇸',\\n    };\\n    var countryNames = [];\\n    var countryCodes = Object.keys(countries);\\n    countryCodes.forEach(function(code) {\\n        countryNames.push(countries[code]);\\n    });\\n    var userid = nodeState.get('_id');\\n    var username = nodeState.get('username');\\n    var currentCountry = '';\\n    var selectedCountry = 10;\\n    var objectAttributes = nodeState.get('objectAttributes');\\n    \\n    if (userid) {\\n      var identity = idRepository.getIdentity(userid);\\n    \\n      if (objectAttributes && objectAttributes.get(countryIdmAttr)) {\\n        currentCountry = objectAttributes.get(countryIdmAttr);\\n      }\\n      else if (identity && identity.getAttributeValues(countryAmAttr)[0]) {\\n        currentCountry = identity.getAttributeValues(countryAmAttr)[0]\\n      }\\n      if (countryCodes.indexOf(currentCountry) != -1) {\\n        selectedCountry = countryCodes.indexOf(currentCountry);\\n      }\\n    }\\n    logger.info('Country Collector: Current country: {}', currentCountry);\\n    \\n    if (callbacks.isEmpty()) {\\n      callbacksBuilder.scriptTextOutputCallback(validateInput());  \\n      callbacksBuilder.choiceCallback(label, countryNames, selectedCountry, false);\\n    }\\n    else {\\n      var i = callbacks.getChoiceCallbacks().get(0)[0];\\n      var collectedCountry = countryCodes[i];\\n      if (objectAttributes) {\\n        objectAttributes.put(countryIdmAttr, collectedCountry);\\n      } else {\\n        nodeState.putShared(\\\"objectAttributes\\\", { countryIdmAttr: collectedCountry } );\\n      }\\n      logger.info('Country Collector: Collected country: {}', countryCodes[i]);\\n      action.goTo('collected');\\n    }\\n} catch (e) {\\n    logger.error('Country Collector: Error: {}', e.message);\\n    \\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error\\n    action.goTo('error');\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "creationDate": 1744092381056,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744092468035,
          "evaluatorVersion": "2.0"
        },
        "5127eaff-3606-4ee4-b9cd-808d193ce838": {
          "_id": "5127eaff-3606-4ee4-b9cd-808d193ce838",
          "name": "OOTB - Validate Name, Email Address, and Telephone Number Script",
          "description": "Script to validate name and email address, sets constraints",
          "script": "\"/*\\n * Form Input Validation Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * This script injects JavaScript to enforce input validation and length constraints\\n * on First Name, Last Name, and Email Address fields before submission.\\n *\\n * Script Inputs  : null  \\n *\\n * Script Outputs :  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Validation script injected successfully)  \\n *    - \\\"Error\\\" (Unexpected execution failure)  \\n */\\n\\ntry {\\n    /**\\n     * Returns a JavaScript string that:\\n     *  - Sets max length (255) for input fields.\\n     *  - Disables the submit button until all fields are filled.\\n     *  - Ensures max length is enforced, even if modified in the browser.\\n     */\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n            const firstName = document.querySelector('input[data-vv-as=\\\\\\\"First Name\\\\\\\"]'); \\\\n\\\\\\n            const lastName = document.querySelector('input[data-vv-as=\\\\\\\"Last Name\\\\\\\"]'); \\\\n\\\\\\n            const emailAddress = document.querySelector('input[data-vv-as=\\\\\\\"Email Address\\\\\\\"]'); \\\\n\\\\\\n            const telephoneNumber = document.querySelector('input[data-vv-as=\\\\\\\"Telephone Number\\\\\\\"]'); \\\\n\\\\\\n            const submitBtn = document.querySelector('button[type=\\\\\\\"submit\\\\\\\"]'); \\\\n\\\\\\n            \\\\n\\\\\\n            if (firstName) firstName.setAttribute('maxlength', '255'); \\\\n\\\\\\n            if (lastName) lastName.setAttribute('maxlength', '255'); \\\\n\\\\\\n            if (emailAddress) emailAddress.setAttribute('maxlength', '255'); \\\\n\\\\\\n            if (telephoneNumber) telephoneNumber.setAttribute('maxlength', '15'); \\\\n\\\\\\n            \\\\n\\\\\\n            const hasFields = firstName || lastName || emailAddress || telephoneNumber; \\\\n\\\\\\n            if (hasFields && submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n            \\\\n\\\\\\n            function validateFields() { \\\\n\\\\\\n                const phoneRegex = /^\\\\\\\\+?([0-9\\\\\\\\- \\\\\\\\(\\\\\\\\)])*$/; \\\\n\\\\\\n                const isFirstNameValid = firstName ? firstName.value.trim().length > 0 : true; \\\\n\\\\\\n                const isLastNameValid = lastName ? lastName.value.trim().length > 0 : true; \\\\n\\\\\\n                const isEmailValid = emailAddress ? emailAddress.value.trim().length > 0 : true; \\\\n\\\\\\n                const isPhoneValid = telephoneNumber ? (telephoneNumber.value.trim().length > 0 && phoneRegex.test(telephoneNumber.value.trim())) : true; \\\\n\\\\\\n                \\\\n\\\\\\n                if (submitBtn) submitBtn.disabled = !(isFirstNameValid && isLastNameValid && isEmailValid && isPhoneValid); \\\\n\\\\\\n            } \\\\n\\\\\\n            \\\\n\\\\\\n            if (submitBtn) { \\\\n\\\\\\n                submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                    if (firstName && firstName.value.length > 255 || \\\\n\\\\\\n                        lastName && lastName.value.length > 255 || \\\\n\\\\\\n                        emailAddress && emailAddress.value.length > 255 || \\\\n\\\\\\n                        telephoneNumber && (telephoneNumber.value.length > 15 || !/^\\\\\\\\+?([0-9\\\\\\\\- \\\\\\\\(\\\\\\\\)])*$/.test(telephoneNumber.value.trim()))) { \\\\n\\\\\\n                        event.preventDefault(); \\\\n\\\\\\n                        submitBtn.disabled = true; \\\\n\\\\\\n                    } \\\\n\\\\\\n                    validateFields(); \\\\n\\\\\\n                }); \\\\n\\\\\\n            } \\\\n\\\\\\n            \\\\n\\\\\\n            if (firstName) firstName.addEventListener('input', validateFields); \\\\n\\\\\\n            if (lastName) lastName.addEventListener('input', validateFields); \\\\n\\\\\\n            if (emailAddress) emailAddress.addEventListener('input', validateFields); \\\\n\\\\\\n            if (telephoneNumber) telephoneNumber.addEventListener('input', validateFields); \\\\n\\\\\\n        \\\");\\n    }\\n    \\n    if (callbacks.isEmpty()) {                \\n        // Inject the validation script if no callbacks have been executed\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n\\n    // Proceed to success path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141508224,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744092468045,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {
        "registration": {
          "_id": "emailTemplate/registration",
          "defaultLocale": "en",
          "enabled": true,
          "from": "",
          "html": {
            "en": "<html><body><h3>This is your registration email.</h3><p><a href=\"{{object.resumeURI}}\">Email verification link</a></p></body></html>",
            "fr": "<html><body><h3>Ceci est votre mail d'inscription.</h3><p><a href=\"{{object.resumeURI}}\">Lien de vérification email</a></p></body></html>"
          },
          "message": {
            "en": "<html><head></head><body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\"><div class=\"content\" style=\"background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;\"><h3>This is your registration email.</h3><p><a href=\"{{object.resumeURI}}\" style=\"text-decoration: none; color: #109cf1;\">Email verification link</a></p></div></body></html>",
            "fr": "<html><head></head><body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\"><div class=\"content\" style=\"background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;\"><h3>Ceci est votre mail d'inscription.</h3><p><a href=\"{{object.resumeURI}}\" style=\"text-decoration: none; color: #109cf1;\">Lien de vérification email</a></p></div></body></html>"
          },
          "mimeType": "text/html",
          "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
          "subject": {
            "en": "Register new account",
            "fr": "Créer un nouveau compte"
          }
        },
        "welcome": {
          "_id": "emailTemplate/welcome",
          "defaultLocale": "en",
          "enabled": true,
          "from": "",
          "html": {
            "en": "<html><body><p>Welcome. Your username is '{{object.userName}}'.</p></body></html>"
          },
          "message": {
            "en": "<html><head></head><body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\"><div class=\"content\" style=\"background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;\"><p>Welcome. Your username is '{{object.userName}}'.</p></div></body></html>"
          },
          "mimeType": "text/html",
          "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
          "subject": {
            "en": "Your account has been created"
          }
        }
      },
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "CIAM Deep Fake - Account Reset Main Journey": {
      "tree": {
        "_id": "CIAM Deep Fake - Account Reset Main Journey",
        "_rev": "-1494224555",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Deep Fake\"]"
        },
        "entryNodeId": "09d073cd-194b-473f-932c-793cdc2743c9",
        "innerTreeOnly": false,
        "nodes": {
          "05817cfc-f3ee-4b54-9ef7-ac7867eace59": {
            "x": 864,
            "y": 509.515625,
            "connections": {
              "error": "23b6a6aa-7f26-48a0-b869-1c45e7b1fae6",
              "noMail": "23b6a6aa-7f26-48a0-b869-1c45e7b1fae6",
              "sent": "0a869ec5-d5c8-4cd6-9bf7-c4201bd74a48"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Email OTP Sender"
          },
          "05e194ad-cf74-4750-b9b2-78ad3794dafc": {
            "x": 1218,
            "y": 515.515625,
            "connections": {
              "Reject": "23b6a6aa-7f26-48a0-b869-1c45e7b1fae6",
              "Retry": "c773704c-9afd-46f2-89d6-72b11958da8b"
            },
            "nodeType": "RetryLimitDecisionNode",
            "displayName": "Retry OTP Retry Limit Decision"
          },
          "09d073cd-194b-473f-932c-793cdc2743c9": {
            "x": 151,
            "y": 17.515625,
            "connections": {
              "DONE": "e8dae1ad-c2fd-4424-b64b-fa41db8355c7"
            },
            "nodeType": "PollingWaitNode",
            "displayName": "Polling Wait Node"
          },
          "09d91077-6ee4-4aae-a784-2037e37fa183": {
            "x": 1670,
            "y": 552.515625,
            "connections": {
              "true": "0a869ec5-d5c8-4cd6-9bf7-c4201bd74a48"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set Invalid Code Error Message"
          },
          "23b6a6aa-7f26-48a0-b869-1c45e7b1fae6": {
            "x": 2024.5,
            "y": 1037.515625,
            "connections": {
              "outcome": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "nodeType": "product-PingOneProtectResultNode",
            "displayName": "Update P1 Protect Eval Failure"
          },
          "24b8073f-d919-4bf7-ac25-ffa14f39d4c3": {
            "x": 130,
            "y": 409.515625,
            "connections": {
              "false": "ad09d938-b2ac-4e20-95af-555faa01533f",
              "true": "f53468ca-5b7f-4ef3-a8fc-d6769a1a2ac5"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Is Protect Analysis Required?"
          },
          "2b7bf103-c40f-4b08-a15d-5a6d42cd75d1": {
            "x": 1610,
            "y": 266.515625,
            "connections": {
              "Reject": "23b6a6aa-7f26-48a0-b869-1c45e7b1fae6",
              "Retry": "09d91077-6ee4-4aae-a784-2037e37fa183"
            },
            "nodeType": "RetryLimitDecisionNode",
            "displayName": "Invalid OTP Retry Limit Decision"
          },
          "47e29221-bd65-4bc9-b738-08ecf14539b0": {
            "x": 2187,
            "y": 306.515625,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "Authentication Journey"
          },
          "6ecc05e2-1a15-439b-bcbd-ce1fc3d7e793": {
            "x": 1928,
            "y": 30.015625,
            "connections": {
              "FAILURE": "23b6a6aa-7f26-48a0-b869-1c45e7b1fae6",
              "PATCHED": "3af6bbbf-561e-4307-978a-29d27f78e026"
            },
            "nodeType": "PatchObjectNode",
            "displayName": "Patch Object"
          },
          "78007318-a6e6-4762-a57e-1c2e73adcc7d": {
            "x": 894,
            "y": 915.015625,
            "connections": {
              "outcome": "fc389511-c07b-4610-acf1-36e44aabb9a2"
            },
            "nodeType": "AccountLockoutNode",
            "displayName": "Account Lockout"
          },
          "8539b5f6-7fbe-470a-af3c-dfb62af1049a": {
            "x": 1610,
            "y": 18,
            "connections": {
              "outcome": "6ecc05e2-1a15-439b-bcbd-ce1fc3d7e793"
            },
            "nodeType": "PageNode",
            "displayName": "Password page"
          },
          "95140b2f-f888-4ca1-bc9c-9cd80a2c5537": {
            "x": 821,
            "y": 0,
            "connections": {
              "false": "23b6a6aa-7f26-48a0-b869-1c45e7b1fae6",
              "true": "8539b5f6-7fbe-470a-af3c-dfb62af1049a"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "Selfie Verification"
          },
          "9a6273cd-bbc1-49c2-bd99-38165878a809": {
            "x": 502,
            "y": 508.515625,
            "connections": {
              "true": "9cdef4a6-a290-4c81-9a2a-3494c1674c74"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set p1ProtectAction As Eval"
          },
          "9cdef4a6-a290-4c81-9a2a-3494c1674c74": {
            "x": 499,
            "y": 342.515625,
            "connections": {
              "false": "c773704c-9afd-46f2-89d6-72b11958da8b",
              "true": "d8c3cf32-a7d0-4017-a7df-5d2dbddfbcd1"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Is Protect Analysis Required?"
          },
          "a9374bc7-3b58-42c2-bb9c-388815ff9742": {
            "x": 507,
            "y": 613.515625,
            "connections": {
              "true": "9a6273cd-bbc1-49c2-bd99-38165878a809"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set flow type As Authentication"
          },
          "ad09d938-b2ac-4e20-95af-555faa01533f": {
            "x": 119,
            "y": 753.515625,
            "connections": {
              "true": "ff9168b0-0674-4abd-813b-1d9a3ef1e8a8"
            },
            "nodeType": "PageNode",
            "displayName": "Page Node"
          },
          "c329787c-0d6b-4bad-a290-e5529e7a1567": {
            "x": 132,
            "y": 294.515625,
            "connections": {
              "true": "24b8073f-d919-4bf7-ac25-ffa14f39d4c3"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set p1ProtectAction As Init"
          },
          "c773704c-9afd-46f2-89d6-72b11958da8b": {
            "x": 865,
            "y": 232.515625,
            "connections": {
              "outcome": "05817cfc-f3ee-4b54-9ef7-ac7867eace59"
            },
            "nodeType": "OneTimePasswordGeneratorNode",
            "displayName": "HOTP Generator"
          },
          "d8c3cf32-a7d0-4017-a7df-5d2dbddfbcd1": {
            "x": 486,
            "y": 188.515625,
            "connections": {
              "false": "23b6a6aa-7f26-48a0-b869-1c45e7b1fae6",
              "true": "fc2dd37c-b4e0-498f-80a9-8f3e4831615f"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "Protect Evaluation & Mitigation"
          },
          "e8dae1ad-c2fd-4424-b64b-fa41db8355c7": {
            "x": 130,
            "y": 144.515625,
            "connections": {
              "true": "c329787c-0d6b-4bad-a290-e5529e7a1567"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Prerequisites & Init Variables"
          },
          "f53468ca-5b7f-4ef3-a8fc-d6769a1a2ac5": {
            "x": 136,
            "y": 569.515625,
            "connections": {
              "false": "23b6a6aa-7f26-48a0-b869-1c45e7b1fae6",
              "true": "ad09d938-b2ac-4e20-95af-555faa01533f"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "Initialize P1 Protect"
          },
          "fc2dd37c-b4e0-498f-80a9-8f3e4831615f": {
            "x": 478,
            "y": 4.515625,
            "connections": {
              "highRisk": "95140b2f-f888-4ca1-bc9c-9cd80a2c5537",
              "lowRisk": "c773704c-9afd-46f2-89d6-72b11958da8b",
              "mediumRisk": "95140b2f-f888-4ca1-bc9c-9cd80a2c5537"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Extract Protect Activity Params"
          },
          "ff9168b0-0674-4abd-813b-1d9a3ef1e8a8": {
            "x": 553,
            "y": 875.015625,
            "connections": {
              "false": "78007318-a6e6-4762-a57e-1c2e73adcc7d",
              "true": "fc389511-c07b-4610-acf1-36e44aabb9a2"
            },
            "nodeType": "AccountActiveDecisionNode",
            "displayName": "Account Active Decision"
          },
          "fc389511-c07b-4610-acf1-36e44aabb9a2": {
            "x": 539,
            "y": 721.015625,
            "connections": {
              "true": "a9374bc7-3b58-42c2-bb9c-388815ff9742",
              "false": "23b6a6aa-7f26-48a0-b869-1c45e7b1fae6"
            },
            "nodeType": "IdentifyExistingUserNode",
            "displayName": "Identify Existing User"
          },
          "3af6bbbf-561e-4307-978a-29d27f78e026": {
            "x": 2199.090909090909,
            "y": 69.83238636363637,
            "connections": {
              "true": "76a73820-8f7d-46e5-b819-62d26b75beab"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Account Reset Success Message"
          },
          "0a869ec5-d5c8-4cd6-9bf7-c4201bd74a48": {
            "x": 1172,
            "y": 192.515625,
            "connections": {
              "true": "8539b5f6-7fbe-470a-af3c-dfb62af1049a",
              "false": "2b7bf103-c40f-4b08-a15d-5a6d42cd75d1",
              "resend": "05e194ad-cf74-4750-b9b2-78ad3794dafc"
            },
            "nodeType": "PageNode",
            "displayName": "One-Time Passcode Collector."
          },
          "76a73820-8f7d-46e5-b819-62d26b75beab": {
            "x": 2200,
            "y": 198.015625,
            "connections": {
              "outcome": "47e29221-bd65-4bc9-b738-08ecf14539b0"
            },
            "nodeType": "product-PingOneProtectResultNode",
            "displayName": "Success: Update P1 Protect Eval"
          }
        },
        "staticNodes": {
          "startNode": {
            "x": 22,
            "y": 39
          },
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 2456,
            "y": 597
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 2243,
            "y": 784
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "05817cfc-f3ee-4b54-9ef7-ac7867eace59": {
          "_id": "05817cfc-f3ee-4b54-9ef7-ac7867eace59",
          "_rev": "-891774998",
          "script": "e1781e83-6188-4647-ac44-95718fe949b6",
          "outcomes": [
            "sent",
            "noMail",
            "error"
          ],
          "outputs": [
            "*"
          ],
          "inputs": [
            "*"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "sent",
              "displayName": "sent"
            },
            {
              "id": "noMail",
              "displayName": "noMail"
            },
            {
              "id": "error",
              "displayName": "error"
            }
          ]
        },
        "05e194ad-cf74-4750-b9b2-78ad3794dafc": {
          "_id": "05e194ad-cf74-4750-b9b2-78ad3794dafc",
          "_rev": "-104495270",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "09d073cd-194b-473f-932c-793cdc2743c9": {
          "_id": "09d073cd-194b-473f-932c-793cdc2743c9",
          "_rev": "590675969",
          "spamDetectionTolerance": 3,
          "spamDetectionEnabled": false,
          "exitMessage": {},
          "waitingMessage": {
            "en": "Loading..."
          },
          "secondsToWait": 2,
          "exitable": false,
          "_type": {
            "_id": "PollingWaitNode",
            "name": "Polling Wait Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "DONE",
              "displayName": "Done"
            }
          ]
        },
        "09d91077-6ee4-4aae-a784-2037e37fa183": {
          "_id": "09d91077-6ee4-4aae-a784-2037e37fa183",
          "_rev": "690716589",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "23b6a6aa-7f26-48a0-b869-1c45e7b1fae6": {
          "_id": "23b6a6aa-7f26-48a0-b869-1c45e7b1fae6",
          "_rev": "-1985656819",
          "status": "FAILED",
          "_type": {
            "_id": "product-PingOneProtectResultNode",
            "name": "PingOne Protect Result",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "24b8073f-d919-4bf7-ac25-ffa14f39d4c3": {
          "_id": "24b8073f-d919-4bf7-ac25-ffa14f39d4c3",
          "_rev": "-922331448",
          "script": "32a223c5-838f-4376-8223-ae9c16643dae",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_protectAnalysisRequired"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "2b7bf103-c40f-4b08-a15d-5a6d42cd75d1": {
          "_id": "2b7bf103-c40f-4b08-a15d-5a6d42cd75d1",
          "_rev": "1540258632",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "47e29221-bd65-4bc9-b738-08ecf14539b0": {
          "_id": "47e29221-bd65-4bc9-b738-08ecf14539b0",
          "_rev": "509328063",
          "tree": "CIAM Deep Fake - Authentication Main Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "6ecc05e2-1a15-439b-bcbd-ce1fc3d7e793": {
          "_id": "6ecc05e2-1a15-439b-bcbd-ce1fc3d7e793",
          "_rev": "1111423628",
          "identityResource": "managed/alpha_user",
          "patchAsObject": true,
          "ignoredFields": [],
          "identityAttribute": "userName",
          "_type": {
            "_id": "PatchObjectNode",
            "name": "Patch Object",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "PATCHED",
              "displayName": "Patched"
            },
            {
              "id": "FAILURE",
              "displayName": "Failed"
            }
          ]
        },
        "78007318-a6e6-4762-a57e-1c2e73adcc7d": {
          "_id": "78007318-a6e6-4762-a57e-1c2e73adcc7d",
          "_rev": "1906486444",
          "lockAction": "UNLOCK",
          "_type": {
            "_id": "AccountLockoutNode",
            "name": "Account Lockout",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "8539b5f6-7fbe-470a-af3c-dfb62af1049a": {
          "_id": "8539b5f6-7fbe-470a-af3c-dfb62af1049a",
          "_rev": "-468676551",
          "nodes": [
            {
              "_id": "063a6686-6ca1-4005-84c2-a9ec0111b42b",
              "nodeType": "ValidatedPasswordNode",
              "displayName": "Platform Password"
            }
          ],
          "pageDescription": {},
          "stage": "{\"submitButtonText\":{\"en\":\"Next\"},\"ValidatedCreatePasswordCallback\":[{\"id\":\"063a6686-6ca1-4005-84c2-a9ec0111b42b\",\"confirmPassword\":true,\"policyDisplayCheckmark\":true}]}",
          "pageHeader": {
            "en": "Enter new password"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "95140b2f-f888-4ca1-bc9c-9cd80a2c5537": {
          "_id": "95140b2f-f888-4ca1-bc9c-9cd80a2c5537",
          "_rev": "-560602213",
          "tree": "CIAM Deep Fake - Selfie Verification Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "9a6273cd-bbc1-49c2-bd99-38165878a809": {
          "_id": "9a6273cd-bbc1-49c2-bd99-38165878a809",
          "_rev": "-1752837386",
          "script": "00f3eaed-ac1b-4737-b0f9-f2b0a825360f",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "9cdef4a6-a290-4c81-9a2a-3494c1674c74": {
          "_id": "9cdef4a6-a290-4c81-9a2a-3494c1674c74",
          "_rev": "27042959",
          "script": "32a223c5-838f-4376-8223-ae9c16643dae",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_protectAnalysisRequired"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "a9374bc7-3b58-42c2-bb9c-388815ff9742": {
          "_id": "a9374bc7-3b58-42c2-bb9c-388815ff9742",
          "_rev": "-416300286",
          "script": "55994140-f9d1-4b3b-8922-87de6ebd71a2",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "flowType"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "ad09d938-b2ac-4e20-95af-555faa01533f": {
          "_id": "ad09d938-b2ac-4e20-95af-555faa01533f",
          "_rev": "1062356090",
          "nodes": [
            {
              "_id": "991db155-41f0-4ab6-bad5-566a5ee73529",
              "nodeType": "ValidatedUsernameNode",
              "displayName": "Platform Username"
            },
            {
              "_id": "bf057593-5446-4231-9348-5ef0a8fd42cf",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Empty Username?"
            }
          ],
          "pageDescription": {
            "en": "Signing up is fast and easy.<br>Already have an account? <a href='#/service/CIAM Deep Fake - Authentication Main Journey'>Sign In</a>"
          },
          "stage": "{\"submitButtonText\":{\"en\":\"Next\"},\"themeId\":\"52dd1952-09b4-4cca-aeb1-7b6b15b2b455\"}",
          "pageHeader": {
            "en": "Account Reset"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "c329787c-0d6b-4bad-a290-e5529e7a1567": {
          "_id": "c329787c-0d6b-4bad-a290-e5529e7a1567",
          "_rev": "376534496",
          "script": "bf16588d-6e67-4cfe-83a9-c877de085710",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "p1ProtectAction",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "c773704c-9afd-46f2-89d6-72b11958da8b": {
          "_id": "c773704c-9afd-46f2-89d6-72b11958da8b",
          "_rev": "160630358",
          "length": 6,
          "_type": {
            "_id": "OneTimePasswordGeneratorNode",
            "name": "HOTP Generator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "d8c3cf32-a7d0-4017-a7df-5d2dbddfbcd1": {
          "_id": "d8c3cf32-a7d0-4017-a7df-5d2dbddfbcd1",
          "_rev": "2025079817",
          "tree": "CIAM Deep Fake - Threat Detection Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "e8dae1ad-c2fd-4424-b64b-fa41db8355c7": {
          "_id": "e8dae1ad-c2fd-4424-b64b-fa41db8355c7",
          "_rev": "-1387968953",
          "script": "f402e7a4-22d6-4406-8faf-d92dc1e35db6",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "ciam_allowedMFATypes",
            "ciam_protectAnalysisRequired",
            "ciam_magicLinkEnabled"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "f53468ca-5b7f-4ef3-a8fc-d6769a1a2ac5": {
          "_id": "f53468ca-5b7f-4ef3-a8fc-d6769a1a2ac5",
          "_rev": "325341408",
          "tree": "CIAM Deep Fake - Threat Detection Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "fc2dd37c-b4e0-498f-80a9-8f3e4831615f": {
          "_id": "fc2dd37c-b4e0-498f-80a9-8f3e4831615f",
          "_rev": "595414033",
          "script": "3ef74e41-015a-4659-80ef-566a5668296f",
          "outcomes": [
            "highRisk",
            "lowRisk",
            "mediumRisk"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id",
            "PingOneProtectEvaluationNode.RISK"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "highRisk",
              "displayName": "highRisk"
            },
            {
              "id": "lowRisk",
              "displayName": "lowRisk"
            },
            {
              "id": "mediumRisk",
              "displayName": "mediumRisk"
            }
          ]
        },
        "ff9168b0-0674-4abd-813b-1d9a3ef1e8a8": {
          "_id": "ff9168b0-0674-4abd-813b-1d9a3ef1e8a8",
          "_rev": "805867897",
          "_type": {
            "_id": "AccountActiveDecisionNode",
            "name": "Account Active Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "fc389511-c07b-4610-acf1-36e44aabb9a2": {
          "_id": "fc389511-c07b-4610-acf1-36e44aabb9a2",
          "_rev": "-686880856",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "3af6bbbf-561e-4307-978a-29d27f78e026": {
          "_id": "3af6bbbf-561e-4307-978a-29d27f78e026",
          "_rev": "1465451594",
          "script": "0fe9f66e-55f3-4c3c-bdb0-87b5e289c10b",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "null"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "0a869ec5-d5c8-4cd6-9bf7-c4201bd74a48": {
          "_id": "0a869ec5-d5c8-4cd6-9bf7-c4201bd74a48",
          "_rev": "-1470221246",
          "nodes": [
            {
              "_id": "82c9ac2f-103a-48ef-9cfb-ab85dfb9bc03",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "OTP Collector and Decision Node"
            }
          ],
          "pageDescription": {
            "en": "Enter the one-time passcode received via email."
          },
          "pageHeader": {
            "en": "Enter The Passcode"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            },
            {
              "id": "resend",
              "displayName": "resend"
            }
          ]
        },
        "76a73820-8f7d-46e5-b819-62d26b75beab": {
          "_id": "76a73820-8f7d-46e5-b819-62d26b75beab",
          "_rev": "-898265801",
          "status": "SUCCESS",
          "_type": {
            "_id": "product-PingOneProtectResultNode",
            "name": "PingOne Protect Result",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        }
      },
      "innerNodes": {
        "063a6686-6ca1-4005-84c2-a9ec0111b42b": {
          "_id": "063a6686-6ca1-4005-84c2-a9ec0111b42b",
          "_rev": "-610334456",
          "passwordAttribute": "password",
          "validateInput": true,
          "_type": {
            "_id": "ValidatedPasswordNode",
            "name": "Platform Password",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "991db155-41f0-4ab6-bad5-566a5ee73529": {
          "_id": "991db155-41f0-4ab6-bad5-566a5ee73529",
          "_rev": "-166880835",
          "usernameAttribute": "userName",
          "validateInput": false,
          "_type": {
            "_id": "ValidatedUsernameNode",
            "name": "Platform Username",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "bf057593-5446-4231-9348-5ef0a8fd42cf": {
          "_id": "bf057593-5446-4231-9348-5ef0a8fd42cf",
          "_rev": "-252409675",
          "script": "27db6653-04bd-4338-ad88-4e2b7dbfcee1",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "82c9ac2f-103a-48ef-9cfb-ab85dfb9bc03": {
          "_id": "82c9ac2f-103a-48ef-9cfb-ab85dfb9bc03",
          "_rev": "319004221",
          "script": "b64332d2-6b9d-4361-ab54-6847178ca99a",
          "outcomes": [
            "true",
            "false",
            "resend"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "oneTimePassword",
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            },
            {
              "id": "resend",
              "displayName": "resend"
            }
          ]
        }
      },
      "scripts": {
        "e1781e83-6188-4647-ac44-95718fe949b6": {
          "_id": "e1781e83-6188-4647-ac44-95718fe949b6",
          "name": "OOTB - Send Email OTP Script",
          "description": "Script to send OTP to registered email",
          "script": "\"/* OTP Email Sender\\n *\\n * Author: Ping Identity\\n * Version: 1.0\\n * Date: 03/28/2025\\n * \\n * This script sends an email containing a one-time password (HOTP) to a user's email address.\\n * It is used within a journey that requires sending an OTP for verification or authentication purposes.\\n * \\n * This script does not need to be parametrized. It will work properly as is, assuming the necessary inputs are available in the shared or node state.\\n * \\n * Script Inputs:\\n *    - \\\"_id\\\" (String) - User ID. Retrieved from nodeState.\\n *    - \\\"oneTimePassword\\\" (String) - The generated OTP to be sent to the user. Retrieved from nodeState.\\n *\\n * Outcomes:\\n *    - \\\"sent\\\" (PASS) - Email successfully sent.\\n *    - \\\"noMail\\\" (FAIL) - No email address found, email not sent.\\n *    - \\\"error\\\" (ERROR) - An error occurred while processing the email sending.\\n *\\n * Notes:\\n *    - The script uses the IDM Email Service openidm binding for sending templated emails.\\n *    - Ensure the necessary attributes are available in sharedState or nodeState for successful execution.\\n */\\n/**\\n * Script configuration\\n*/\\nvar config = {\\n    /**\\n     * @property {string} templateID - Identifier of email template\\n     * @property {string} idmEndpoint - IDM Endpoint used to send templated emails\\n     * @property {string} idmAction - IDM action executed against the idmEndpoint\\n     */\\n    templateID: \\\"otp\\\",\\n    idmEndpoint: \\\"external/email\\\",\\n    idmAction: \\\"sendTemplate\\\"\\n};\\n/**\\n * Node outcomes\\n*/\\nvar nodeOutcome = {\\n    PASS: \\\"sent\\\",\\n    FAIL: \\\"noMail\\\",\\n    ERROR: \\\"error\\\"\\n};\\n/**\\n * Send email via the IDM Email Service openidm binding in next-gen scripting\\n *\\n * @param {string} hotp - HOTP retrieved from transientState\\n * @param {string} mail - mail attribute retrieved from the idRepository. Note if this is a registration journey acquire mail from sharedState\\n * @param {string} givenName - givenName attribute retrieved from the idRepository. Note if this is a registration journey acquire givenName from sharedState\\n */\\nfunction sendMail(hotp, mail, givenName) {\\n    try {\\n        var params = new Object();\\n        params.templateName = config.templateID;\\n        params.to = mail;\\n        params.object = {\\n            \\\"givenName\\\": givenName,\\n            \\\"otp\\\": hotp\\n        };\\n        openidm.action(config.idmEndpoint, config.idmAction, params);\\n        //Email send successfully\\n        return nodeOutcome.PASS;\\n    }\\n    catch (e) {\\n       // Failed to call IDM Email endpoint using template.\\n        return nodeOutcome.ERROR;\\n    }\\n};\\n/**\\n * Main function\\n */\\n(function () {\\n   // Node execution started\\n    var id;\\n    var hotp;\\n    var mail;\\n    if (!(id = nodeState.get(\\\"_id\\\"))) {\\n       // Unable to retrieve Identity\\n        action.goTo(nodeOutcome.ERROR);\\n        return;\\n    } else {\\n        var identity = idRepository.getIdentity(id);\\n    }\\n    if (!(hotp = nodeState.get(\\\"oneTimePassword\\\"))) {\\n       // Unable to retrieve HOTP from state\\n        action.goTo(nodeOutcome.ERROR);\\n        return;\\n    }\\n    //If this is a registration journey adapt the following to try retrieve from nodeState\\n    if (!(mail = identity.getAttributeValues(\\\"mail\\\").toArray()[0])) {\\n     //   Unable to retrieve mail attribute from the idRepository\\n        action.goTo(nodeOutcome.FAIL);\\n        return;\\n    }\\n    //If this is a registration journey adapt the following to try retrieve from nodeState\\n    //Be sure to set givenName against the user\\n    if (!(givenName = identity.getAttributeValues(\\\"givenName\\\").toArray()[0])) {\\n      // Unable to retrieve givenName attribute from the idRepository\\n        action.goTo(nodeOutcome.FAIL);\\n        return;\\n    }\\n    //Execute function to send mail\\n    outcome = sendMail(hotp, mail, givenName);\\n})();\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743151896104,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744225064768,
          "evaluatorVersion": "2.0"
        },
        "86e5bf13-4882-4032-8fb7-f75dd7fa7b82": {
          "_id": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "name": "OOTB - Set Invalid Code Error Message Script",
          "description": "Script to set invalid code error message",
          "script": "\"/*\\n * Invalid Code Error Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * Sets an \\\"Invalid Code\\\" error message in shared state, which can be displayed on the last UI Node.\\n *\\n * Script Inputs  : null  \\n *\\n * Script Outputs :  \\n *    - \\\"invalidCodeErrorMessage\\\" (String) - Error message for invalid code  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message  \\n *    - \\\"errorDetails\\\" (String) - Debugging details  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Error message set)  \\n *    - \\\"Error\\\" (Execution failure)  \\n */\\n\\ntry {\\n    // Set the below error message in shared state, to display on the last UI Node\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"Invalid Code\\\");\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507163,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090711974,
          "evaluatorVersion": "2.0"
        },
        "32a223c5-838f-4376-8223-ae9c16643dae": {
          "_id": "32a223c5-838f-4376-8223-ae9c16643dae",
          "name": "OOTB - Protect Analysis Required Script",
          "description": "Script to check if P1 Protect analysis is required or not",
          "script": "\"/*\\n * Protect Analysis Evaluation Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1 \\n * Date    : 03/28/2025  \\n *\\n * Determines if Protect analysis is required based on environment variables or node state.\\n *\\n * Script Inputs:\\n *    - \\\"ciam_protectAnalysisRequired\\\" (Boolean/String)  - Specifies if Protect analysis is needed.\\n * \\n * Script Outputs:\\n *    - \\\"errorMessage\\\"  (String)  - User-friendly error message.\\n *    - \\\"errorDetails\\\"  (String)  - Debugging details.\\n * \\n * Outcomes:\\n *    - \\\"true\\\"   - Protect analysis is required.\\n *    - \\\"false\\\"  - Protect analysis is not required.\\n *    - \\\"Error\\\"  - Failure during execution.\\n *\\n * Prerequisite: Ensure `esv.p1.protect.analysis.required` is set if needed.\\n */\\n\\ntry {\\n    // Retrieve Protect analysis requirement from the environment variable or node state\\n    var protectAnalysisRequired = systemEnv.getProperty(\\\"esv.p1.protect.analysis.required\\\");\\n\\n    // If the environment variable is not set, fall back to nodeState\\n    if (!protectAnalysisRequired || !protectAnalysisRequired.length) {\\n        protectAnalysisRequired = nodeState.get(\\\"ciam_protectAnalysisRequired\\\");\\n    }\\n\\n    // Determine the outcome based on the value of protectAnalysisRequired\\n    outcome = (protectAnalysisRequired === \\\"true\\\" || protectAnalysisRequired === true) ? \\\"true\\\" : \\\"false\\\";\\n\\n    // Proceed to the determined outcome\\n    action.goTo(outcome);\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n\\n    // Redirect to the error outcome\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "creationDate": 1743147019431,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744092468033,
          "evaluatorVersion": "2.0"
        },
        "00f3eaed-ac1b-4737-b0f9-f2b0a825360f": {
          "_id": "00f3eaed-ac1b-4737-b0f9-f2b0a825360f",
          "name": "OOTB - Set Protect Action As Eval Script",
          "description": "Script to set Protect action as Eval, will be used in Threat Detection Journey to evaluate Risk",
          "script": "\"/*\\n * P1 Protect Action As Eval Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * This script assigns an action for the P1 Protect child journey to evaluate potential threats.  \\n *\\n * Script Inputs  :  \\n *    - null  \\n *\\n * Script Outputs :  \\n *    - \\\"p1ProtectAction\\\" (String) - Defines the action to be taken in the threat detection journey  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Action successfully assigned)  \\n *    - \\\"Error\\\" (Unexpected execution failure)  \\n */\\n\\ntry {  \\n    // Assign the action for threat detection evaluation  \\n    nodeState.putShared(\\\"p1ProtectAction\\\", \\\"eval\\\");\\n\\n    // Set the outcome to success\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // Store user-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Store detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Redirect to the error outcome\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141509261,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744092468034,
          "evaluatorVersion": "2.0"
        },
        "55994140-f9d1-4b3b-8922-87de6ebd71a2": {
          "_id": "55994140-f9d1-4b3b-8922-87de6ebd71a2",
          "name": "OOTB - Set Flow Type As Authentication Script",
          "description": "Script to set flowType as Authentication",
          "script": "\"/*\\n * CIAM Protect Analysis Requirement Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * Script Inputs  :  \\n *    - null  \\n *\\n * Script Outputs :  \\n *    - \\\"flowType\\\" (String) - Stores the flow type as \\\"Authentication\\\"  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Successfully set flowType and moved forward)  \\n *    - \\\"Error\\\" (An error occurred during execution)  \\n */\\n\\ntry {\\n    // Setting the flowType as Authentication, this will be used to differentiate paths in Threat Detection Journey\\n    nodeState.putShared(\\\"flowType\\\", \\\"Authentication\\\");\\n    // Go to true\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\\n\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743151896771,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744090712192,
          "evaluatorVersion": "2.0"
        },
        "bf16588d-6e67-4cfe-83a9-c877de085710": {
          "_id": "bf16588d-6e67-4cfe-83a9-c877de085710",
          "name": "OOTB - Set Protect Action As Init Script",
          "description": "Script to set Protect action as Init, will be used in Threat Detection Journey to initialize Protect SDK",
          "script": "\"/*\\n * P1 Protect Action As Eval Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * This script sets the initial action for the P1 Protect child journey to begin threat evaluation.  \\n *\\n * Script Inputs  :  \\n *    - null  \\n *\\n * Script Outputs :  \\n *    - \\\"p1ProtectAction\\\" (String) - Defines the action to be taken in the threat detection journey  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Action successfully assigned)  \\n *    - \\\"Error\\\" (Unexpected execution failure)  \\n */\\n\\ntry {\\n    // Initialize the action for threat detection\\n    nodeState.putShared(\\\"p1ProtectAction\\\", \\\"init\\\");\\n\\n    // Proceed to the success path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // Store user-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    \\n    // Store detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    \\n    // Redirect to the error outcome\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141509219,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744092468052,
          "evaluatorVersion": "2.0"
        },
        "f402e7a4-22d6-4406-8faf-d92dc1e35db6": {
          "_id": "f402e7a4-22d6-4406-8faf-d92dc1e35db6",
          "name": "OOTB - Initialize Variables Script",
          "description": "Script to Initialize variables that will be used further in the Journey",
          "script": "\"/* Prerequisites for this Journey Pack\\n       -Create following custom attributes before proceeding:\\n           1. custom_emailVerified - string (To keep track that user has verified their emailAddress)\\n           2. custom_protectActivityCity - string (User's P1 Protect Activity City, used in notification template)\\n           3. custom_protectActivityState - string (User's P1 Protect Activity City, used in notification template)\\n           4. custom_protectDeviceOS - string (User's P1 Protect Activity City, used in notification template)\\n           5. custom_mfaDevices - array of string (To set, fetch and display user's registered MFA devices)\\n           6. custom_latestMFADevice - string (Recent MFA device registered by user, used in notification template)\\n           7. custom_legalFirstName - string (Legal First Name captured from Govt. Id)\\n           8. custom_legalLastName - string (Legal Last Name captured from Govt. Id)\\n           9. custom_legalFullName - string (Legal Full Name captured from Govt. Id)\\n       -Configuration Check\\n           1. Set the environment variable p1-protect-analysis-required & p1-neo-enabled. If it is not set, the value specified in the code below for \\\"protectAnalysisRequired\\\" var & \\\"p1NeoEnabled\\\" will be used respectively.\\n           2. Threat Detection Inner Journey (If Protect Analysis Is Required):\\n               a. Update the PingOne Worker Service ID (P1 Worker App), Risk Policy ID* in following nodes: (*Optional, if not provided default will be considered)\\n                   -- P1 Protect Initialize (1 instance)\\n                   -- P1 Protect Evaluation (2 instances)\\n           3. ID Verification & Issuance To Wallet Journey (If P1 Neo Is Enabled):\\n               a. Update the PingOne Worker Service ID (P1 Worker App), P1 Verify Policy ID & Credential Type ID from the P1 Environment in following nodes:\\n                   -- PingOne Identity Match Node: Link Worker App\\n                   -- PingOne Create User Node: Link Worker App\\n                   -- MITEK PingOne Verify Evaluation Config. Provider Node: Open script, add Worker App & Verify Policy ID supporting MITEK Doc Authn Provider. See documentation for the steps to create Verify Policy for registration.\\n                   -- VERIFF PingOne Verify Evaluation Config. Provider Node: Open script, add Worker App & Verify Policy ID supporting VERIFF Doc Authn Provider. See documentation for the steps to create Verify Policy for registration.\\n                   -- **PingOne Verify Completion Node: Link Worker App & the below attached Verify Completion Script, also mark the `Use a script to process Verify transactions` checkbox. \\n                       Note: Script needs to be created and updated in the native console\\n                   -- PingOne Credentials Pair Wallet Config. Provider Node: Open script, add Worker App & add Digital Wallet Application ID. See documentation for the steps to create Digital Wallet Application in PingOne. \\n                   -- PingOne Credentials Issue Node: Link Worker App & add Credential Card type ID. See documentation for the credential card to be used.\\n                   -- PingOne Delete User Node (2 instances): Link Worker App\\n           4. MFA Registration Inner Journey (If \\\"SMS\\\", or \\\"VOICE\\\" are opted in below \\\"allowedMFATyps\\\" array):\\n               a. Update the required fields in:\\n                   -- OTP SMS Sender Node\\n                   -- Twilio Verify Lookup\\n                   -- Twilio Verify Sender\\n           5. MFA Authenticaion Inner Journey (If \\\"EMAIL\\\", \\\"SMS\\\", or \\\"VOICE\\\" are opted in below \\\"allowedMFATyps\\\" array):\\n               a. Update the required fields in:\\n                   -- OTP Email Sender Node\\n                   -- OTP SMS Sender Node\\n                   -- Twilio Verify Lookup\\n                   -- Twilio Verify Sender\\n           6. Registration with Threat Detection and ID Verification Main Journey\\n               a. Update the current journey URL in Failure URL node.\\n           7. Email templates configuration\\n               a. Account Reset - Replace this <your-tenant-name> with your tenant name.\\n               b. Account Disabled Reset Pwd - Replace this <your-tenant-name> with your tenant name.\\n*/\\n\\n/*****\\n    **Verify Completion Script (Script Type: PingOne Verify Completion Decision Node)\\n    /** ******************************************************************\\n         *\\n         * Retrieves the most recent Verify transaction, extracts data from \\n         * the Government ID, and matches it with the user's profile data. \\n         * The extracted information is stored in shared state for further use \\n         * in the authentication journey.\\n         *\\n         * Note: The data is available for a short time (~30 minutes) after\\n         * verification decision.\\n         *\\n         * Global Variables:\\n         * - `nodeState`: Access to authentication tree state attributes.\\n         * - `verifyTransactionsHelper`: Helper for Verify transactions.\\n         * - `outcome`: Maps to auth tree node outcomes.\\n         *\\n         ********************************************************************* /\\n        \\n        try {\\n          var firstNameMatch = 'NA';\\n          var lastNameMatch = 'NA';\\n          var fullNameMatch = 'NA';\\n        \\n          /**\\n           * Processes biographic match results and updates match status.\\n           * @param {Object} matchResults - Biographic match results.\\n           * /\\n          function updateBiographicMatch(matchResults) {\\n            for (var key in matchResults) {\\n              var confidence = matchResults[key].confidence;\\n              // If `rawScore` is missing, assume a value of 1, meaning \\n              // the biographic match is determined solely by confidence level.\\n              var rawScore = matchResults[key].rawScore != null ? matchResults[key].rawScore : 1;\\n              if (confidence === 'NOT_APPLICABLE') continue;\\n        \\n              var isHighConfidence = confidence === 'HIGH';\\n              var isHighScore = rawScore > 0.9;\\n              var matched = isHighConfidence && isHighScore;\\n        \\n              if (key === 'given_name') firstNameMatch = matched ? 'true' : 'false';\\n              else if (key === 'last_name') lastNameMatch = matched ? 'true' : 'false';\\n              else fullNameMatch = matched ? 'true' : 'false';\\n            }\\n          }\\n        \\n          /**\\n           * Converts an array of biographic match results into an object.\\n           * @param {Array} matchResultsArr - Array of biographic match data.\\n           * @returns {Object} Mapped biographic match object.\\n           * /\\n          function mapBiographicMatchResults(matchResultsArr) {\\n            var acc = {};\\n            for (var i = 0; i < matchResultsArr.length; i++) {\\n              var obj = matchResultsArr[i];\\n              // Standardize the `match` key by mapping it to `confidence`.\\n              acc[obj.identifier] = { confidence: obj.match };\\n            }\\n            return acc;\\n          }\\n        \\n          // Retrieve the latest Verify transaction\\n          var transactionData = verifyTransactionsHelper.getLastVerifyTransaction();\\n          if (!transactionData) {\\n            outcome = 'notStartedOutcome';\\n          } else {\\n            var lastTransaction = JSON.parse(transactionData);\\n            if (!lastTransaction.id) {\\n              outcome = 'notStartedOutcome';\\n            } else if (lastTransaction.hasOwnProperty(\\\"transactionStatus\\\") && lastTransaction.transactionStatus.status === 'FAIL') {\\n                // Set `failureOutcome` if status is 'FAIL'\\n                outcome = 'failureOutcome';\\n            } else {\\n              // Retrieve verified Government ID and Selfie data\\n              var verifiedGovtIdData = verifyTransactionsHelper.getVerifiedDataByType(lastTransaction.id, 'GOVERNMENT_ID');\\n              var verifiedSelfieData = verifyTransactionsHelper.getVerifiedDataByType(lastTransaction.id, 'SELFIE');\\n              var allMetadataResult = verifyTransactionsHelper.getAllMetadata(lastTransaction.id);\\n        \\n              if (!verifiedGovtIdData || !verifiedSelfieData) {\\n                outcome = 'notCompletedOutcome';\\n              } else {\\n                var verifiedGovtId = JSON.parse(verifiedGovtIdData);\\n                var verifiedSelfie = JSON.parse(verifiedSelfieData);\\n        \\n                if (!verifiedGovtId._embedded.verifiedData.length || !verifiedSelfie._embedded.verifiedData.length) {\\n                  outcome = 'failureOutcome';\\n                } else {\\n                  // Process Biographic Match metadata\\n                  if (allMetadataResult) {\\n                    var allMetadata = JSON.parse(allMetadataResult)._embedded.metaData;\\n                    for (var i = 0; i < allMetadata.length; i++) {\\n                      var metadata = allMetadata[i];\\n                      if (metadata.type === 'BIOGRAPHIC_MATCH' && metadata.status === 'SUCCESS') {\\n                        var matchResults = metadata.provider === 'BABEL_STREET' \\n                          ? metadata.data.detailedResults \\n                          : mapBiographicMatchResults(metadata.data.biographic_match_results);\\n                        updateBiographicMatch(matchResults);\\n                      }\\n                    }\\n                  }\\n                  \\n                  // Store biographic match results in shared state\\n                  nodeState.putShared('biographicMatchResult', {\\n                    firstNameMatch: firstNameMatch,\\n                    lastNameMatch: lastNameMatch,\\n                    fullNameMatch: fullNameMatch\\n                  });\\n                  \\n                  // Store image and captured data\\n                  nodeState.putShared('imageData', verifiedSelfie._embedded.verifiedData[0].data.IMAGE);\\n                  nodeState.putShared('capturedData', verifiedGovtId._embedded.verifiedData[0].data);\\n        \\n                  // Store transaction metadata in shared state\\n                  nodeState.putShared('pingOneVerificationMetaData', {\\n                    pingOneVerifyTransactionId: lastTransaction.id,\\n                    pingOneVerifyTransactionStatus: lastTransaction.transactionStatus,\\n                    verifiedDocuments: lastTransaction.verifiedDocuments,\\n                    pingOneVerifyPolicyId: lastTransaction.verifyPolicy.id,\\n                    pingOneVerifyTransactionCreatedAt: lastTransaction.createdAt\\n                  });\\n                  \\n                  outcome = 'successOutcome';\\n                }\\n              }\\n            }\\n          }\\n        } catch (e) {\\n          // User-friendly error message\\n          nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n          // Detailed error information for debugging\\n          nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n        }\\n*****/\\n\\n// Allowed MFA device types by the Admin\\nvar allowedMFATypes = [\\\"FIDO2\\\", \\\"OATH\\\", \\\"PUSH\\\", \\\"EMAIL\\\", \\\"SMS\\\", \\\"VOICE\\\"];\\nnodeState.putShared(\\\"ciam_allowedMFATypes\\\", allowedMFATypes);\\n\\n// Check if Admin wants to enable/disable protectAnalysis\\n// This value may be overridden later based on the respective environment variable\\nvar protectAnalysisRequired = true;\\nnodeState.putShared(\\\"ciam_protectAnalysisRequired\\\", protectAnalysisRequired);\\n\\n// Check if Admin wants to enable/disable ID Verification & Issuance To Wallet process\\n// This value can not be overridden later based on the respective environment variable\\nvar p1NeoEnabled = true;\\nnodeState.putShared(\\\"ciam_p1NeoEnabled\\\", p1NeoEnabled);\\n\\n// Check if Admin wants to allow OOB Magic Link as an MFA authentication method\\nvar magicLinkEnabled = true;\\nnodeState.putShared(\\\"ciam_magicLinkEnabled\\\", magicLinkEnabled);\\n\\noutcome = \\\"true\\\";\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141509168,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744226503143,
          "evaluatorVersion": "2.0"
        },
        "3ef74e41-015a-4659-80ef-566a5668296f": {
          "_id": "3ef74e41-015a-4659-80ef-566a5668296f",
          "name": "OOTB - P1 Protect Extract Parameters From Risk Evaluation Script",
          "description": "Script to extract parameters from P1 Protect Risk Evaluation",
          "script": "\"/*\\n * Extract Parameters From Risk Evaluation\\n * \\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n * \\n * This script analyzes the risk level from PingOne Protect's evaluation response and updates user attributes accordingly.\\n * \\n * Script Inputs:\\n *    - \\\"PingOneProtectEvaluationNode.RISK\\\" (Object) - Risk evaluation details from PingOne Protect.\\n *    - \\\"_id\\\" (String) - User identifier.\\n * \\n * Script Outputs:\\n *    - \\\"errorMessage\\\"  (String) - Error message on failure.\\n *    - \\\"errorDetails\\\"  (String) - Detailed error information.\\n * \\n * Outcomes:\\n *    - \\\"highRisk\\\"     (High-risk detected)\\n *    - \\\"newDevice\\\"    (New device identified)\\n *    - \\\"lowRisk\\\"      (Low  risk detected)\\n *    - \\\"mediumRisk\\\"   (Medium risk detected)\\n */\\n\\ntry {\\n    function capitalizeFirstLetter(string) {\\n        return string\\n            .split(' ')                   // Split the string into an array of words\\n            .map(word =>\\n                word.charAt(0).toUpperCase() + word.slice(1)\\n            )                             // Capitalize the first letter of each word\\n            .join(' ');                   // Join the array back into a single string\\n    }\\n\\n    var rawResponse = nodeState.getObject(\\\"PingOneProtectEvaluationNode.RISK\\\");\\n\\n    var riskLevel = rawResponse.result.level;\\n    nodeState.putShared(\\\"riskLevel\\\", riskLevel);\\n\\n    // Get & Set the protect activity variables in user's profile (to be used in notification templates)\\n    var protectActivityCity = rawResponse.details.city;\\n    var protectActivityState = rawResponse.details.state;\\n    var protectDeviceOS = rawResponse.details.device.os.name;\\n\\n    protectActivityCity = capitalizeFirstLetter(protectActivityCity);\\n    protectActivityState = capitalizeFirstLetter(protectActivityState);\\n\\n\\n    // Get the userId from nodestate\\n    var userId = nodeState.get(\\\"_id\\\");\\n\\n    //Update the protectActvityCity attribute of user\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{ \\\"operation\\\": \\\"replace\\\", \\\"field\\\": \\\"/custom_protectActivityCity\\\", \\\"value\\\": protectActivityCity }]);\\n\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{ \\\"operation\\\": \\\"replace\\\", \\\"field\\\": \\\"/custom_protectActivityState\\\", \\\"value\\\": protectActivityState }]);\\n\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{ \\\"operation\\\": \\\"replace\\\", \\\"field\\\": \\\"/custom_protectDeviceOS\\\", \\\"value\\\": protectDeviceOS }]);\\n\\n    if (riskLevel === \\\"LOW\\\") {\\n        outcome = \\\"lowRisk\\\";\\n    }\\n    else if (riskLevel === \\\"MEDIUM\\\") {\\n        outcome = \\\"mediumRisk\\\";\\n    }\\n    else if (riskLevel === \\\"HIGH\\\") {\\n        outcome = \\\"highRisk\\\";\\n    }\\n\\n    // Check if new device is found\\n    if (rawResponse.details.newDevice.status === \\\"UNKNOWN_DEVICE\\\") {\\n        nodeState.putShared(\\\"newDevice\\\", \\\"true\\\");\\n    }\\n\\n    // Go to outcome\\n    action.goTo(outcome);\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743141507794,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1744091681285,
          "evaluatorVersion": "2.0"
        },
        "0fe9f66e-55f3-4c3c-bdb0-87b5e289c10b": {
          "_id": "0fe9f66e-55f3-4c3c-bdb0-87b5e289c10b",
          "name": "OOTB - Account Reset Success Message",
          "description": null,
          "script": "\"/*\\n * Account Reset Success Message\\n *\\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/28/2025  \\n *\\n * Script Inputs  :  \\n *    - null\\n *\\n * Script Outputs :  \\n *    - null\\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"   (User Clicked Next)\\n *    - \\\"Error\\\"  (An error occurred during execution)  \\n */\\n\\ntry {\\n\\n    if (callbacks.isEmpty()) {\\n\\n        callbacksBuilder.textOutputCallback(0, \\\"Account Reset Successful.\\\");\\n        \\n    } else {\\n\\n        action.goTo(\\\"true\\\");\\n\\n    }\\n\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error message for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1745310034983,
          "lastModifiedBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "lastModifiedDate": 1745311028531,
          "evaluatorVersion": "2.0"
        },
        "27db6653-04bd-4338-ad88-4e2b7dbfcee1": {
          "_id": "27db6653-04bd-4338-ad88-4e2b7dbfcee1",
          "name": "OOTB - Validate Username Script",
          "description": "Script to validate username",
          "script": "\"/*\\n * Username Input Validation Script\\n *\\n * Author  : Ping Identity  \\n * Version : 1.1  \\n * Date    : 03/28/2025  \\n *\\n * Description:  \\n *    - This script ensures that the \\\"Next\\\" button remains disabled until the user provides a valid input.  \\n *    - The script dynamically observes changes in the input field and enables the button once the input is non-empty.  \\n *    - Prevents form submission if the input is empty at the time of submission.  \\n *\\n * Script Inputs  :  \\n *    - null  \\n *\\n * Script Outputs :  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"  (Successfully enabled button for valid input)  \\n *    - \\\"Error\\\" (An error occurred during execution)  \\n */\\n\\ntry {\\n    // Disable next button, if input is empty\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                    if(submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        const username = document.querySelectorAll('input[data-vv-as=\\\\\\\"User Name\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (username && submitBtn) { \\\\n\\\\\\n                            const enableSubmitBtn = () => { \\\\n\\\\\\n                                // Check input validity before enabling submit button \\\\n\\\\\\n                                const isValidInput = username.value.length > 0; \\\\n\\\\\\n                                if (isValidInput) { \\\\n\\\\\\n                                    submitBtn.disabled = false; \\\\n\\\\\\n                                } else { \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }; \\\\n\\\\\\n                            // Revalidate before form submission \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                const isValidInput = username.value.length > 0; \\\\n\\\\\\n                                if (!isValidInput) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            username.addEventListener('input', enableSubmitBtn); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                       } \\\\n\\\\\\n                      } \\\\n\\\\\\n                      if (document.querySelectorAll('input[data-vv-as=\\\\\\\"User Name\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                      else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                      } \\\\n\\\\\\n        \\\");\\n    }\\n    \\n    if (callbacks.isEmpty()) {                \\n        // Request callbacks\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n    // Go to true\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error \\n    action.goTo(\\\"Error\\\");\\n}\\n\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743151896978,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744224858077,
          "evaluatorVersion": "2.0"
        },
        "b64332d2-6b9d-4361-ab54-6847178ca99a": {
          "_id": "b64332d2-6b9d-4361-ab54-6847178ca99a",
          "name": "OOTB - OTP Collector and Decision Script",
          "description": "Script to collect the OTP received and make decision",
          "script": "\"/*\\n * OTP Collector Decision With Resend Option\\n *\\n * Author  : Ping Identity  \\n * Version : 1.0  \\n * Date    : 03/28/2025  \\n *\\n * Script Inputs  :  \\n *    - \\\"oneTimePassword\\\" (String) - OTP retrieved from transient state  \\n *    - \\\"invalidOrExpiredCode\\\" (String) - Error message for invalid OTP attempts  \\n *\\n * Script Outputs :  \\n *    - \\\"errorMessage\\\" (String) - User-friendly error message in case of failure  \\n *    - \\\"errorDetails\\\" (String) - Detailed error message for debugging  \\n *\\n * Outcomes       :  \\n *    - \\\"true\\\"   (OTP is valid)  \\n *    - \\\"false\\\"  (OTP is invalid)  \\n *    - \\\"resend\\\" (User selected the resend option)  \\n *    - \\\"Error\\\"  (An error occurred during execution)  \\n */\\n\\ntry {\\n    // Delay before the \\\"resend\\\" button becomes enabled (in seconds)\\n    var DELAY = 5;\\n\\n    /**\\n     * Generates the client-side script for OTP validation and resend timer.\\n     * @returns {string} JavaScript code for handling OTP validation and resend functionality.\\n     */\\n    function createScript() {\\n        return String(\\\" \\\\n\\\\\\n            var otpLength = \\\" + otpLength + \\\"; \\\\n\\\\\\n            var COUNT = \\\" + DELAY + \\\"; \\\\n\\\\\\n            const submitBtn = document.querySelector('button[type=\\\\\\\"submit\\\\\\\"]'); \\\\n\\\\\\n            const resendTrigger = document.querySelector('input[data-vv-as=\\\\\\\"resendTrigger\\\\\\\"]'); \\\\n\\\\\\n            resendTrigger.style.display = \\\\\\\"none\\\\\\\"; \\\\n\\\\\\n            const label = document.querySelector('label[for=\\\\\\\"' + resendTrigger.id + '\\\\\\\"]'); \\\\n\\\\\\n            if (label) label.style.display = \\\\\\\"none\\\\\\\"; \\\\n\\\\\\n            const passcode = document.querySelector('input[data-vv-as=\\\\\\\"One Time Passcode\\\\\\\"]') || document.querySelector('input[data-vv-as=\\\\\\\"Code\\\\\\\"]'); \\\\n\\\\\\n            if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n            \\\\n\\\\\\n            function validateCode() { \\\\n\\\\\\n                if (passcode) { \\\\n\\\\\\n                    passcode.setAttribute('maxlength', otpLength); \\\\n\\\\\\n                    passcode.setAttribute('pattern', '[0-9]{' + otpLength + '}'); \\\\n\\\\\\n                    passcode.setAttribute('inputmode', 'numeric'); \\\\n\\\\\\n                    const isValidCode = new RegExp('^[0-9]{' + otpLength + '}$').test(passcode.value); \\\\n\\\\\\n                    submitBtn.disabled = !isValidCode; \\\\n\\\\\\n                    return isValidCode; \\\\n\\\\\\n                } \\\\n\\\\\\n                return false; \\\\n\\\\\\n            }; \\\\n\\\\\\n            \\\\n\\\\\\n            function initResendButton(observer) { \\\\n\\\\\\n                if (passcode && submitBtn) { \\\\n\\\\\\n                    var btn = document.createElement('button'); \\\\n\\\\\\n                    btn.id = 'resendButton'; \\\\n\\\\\\n                    btn.classList.add(\\\\\\\"btn\\\\\\\", \\\\\\\"mt-3\\\\\\\", \\\\\\\"btn-secondary\\\\\\\", \\\\\\\"btn-sm\\\\\\\"); \\\\n\\\\\\n                    btn.onclick = function() { \\\\n\\\\\\n                        resendTrigger.value = '__RESEND__'; \\\\n\\\\\\n                        resendTrigger.dispatchEvent(new Event('input')); \\\\n\\\\\\n                    }; \\\\n\\\\\\n                    btn.innerHTML = 'Resend Code ... ' + COUNT + 's'; \\\\n\\\\\\n                    btn.disabled = true; \\\\n\\\\\\n                    passcode.parentNode.insertBefore(btn, passcode.nextSibling); \\\\n\\\\\\n                    \\\\n\\\\\\n                    var timer = setInterval(function() { \\\\n\\\\\\n                        if (COUNT == 1) { \\\\n\\\\\\n                            clearInterval(timer); \\\\n\\\\\\n                            btn.disabled = false; \\\\n\\\\\\n                            btn.innerHTML = 'Resend Code'; \\\\n\\\\\\n                        } else { \\\\n\\\\\\n                            COUNT--; \\\\n\\\\\\n                            btn.innerHTML = 'Resend Code ... ' + COUNT + 's'; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    }, 1000); \\\\n\\\\\\n                    \\\\n\\\\\\n                    passcode.addEventListener('input', validateCode); \\\\n\\\\\\n                    submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                        if (!validateCode()) { \\\\n\\\\\\n                            event.preventDefault(); \\\\n\\\\\\n                            submitBtn.disabled = true; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    }); \\\\n\\\\\\n                    \\\\n\\\\\\n                    if (observer) observer.disconnect(); \\\\n\\\\\\n                } \\\\n\\\\\\n            } \\\\n\\\\\\n            \\\\n\\\\\\n            if (document.querySelector('input[data-vv-as=\\\\\\\"One Time Passcode\\\\\\\"]')) { \\\\n\\\\\\n                initResendButton(); \\\\n\\\\\\n            } else { \\\\n\\\\\\n                const observer = new MutationObserver((mutations, obs) => { \\\\n\\\\\\n                    initResendButton(obs); \\\\n\\\\\\n                }); \\\\n\\\\\\n                observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n            } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    // Retrieve invalid OTP error message and reset it\\n    var invalidOrExpiredCode = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n\\n    // Determine OTP length (default to 6 if not set)\\n    var otpLength = nodeState.get(\\\"oneTimePassword\\\") ? nodeState.get(\\\"oneTimePassword\\\").length : 6;\\n\\n    if (callbacks.isEmpty()) {\\n        // Display error message if an invalid OTP was previously entered\\n        if (invalidOrExpiredCode && invalidOrExpiredCode.length) {\\n            callbacksBuilder.textOutputCallback(2, invalidOrExpiredCode);\\n        }\\n        callbacksBuilder.scriptTextOutputCallback(createScript());\\n        callbacksBuilder.nameCallback(\\\"One Time Passcode\\\");\\n        callbacksBuilder.nameCallback(\\\"resendTrigger\\\");\\n    } else {\\n        var otp = callbacks.getNameCallbacks().get(0);\\n        var resend = callbacks.getNameCallbacks().get(1);\\n\\n        if (resend === '__RESEND__') {\\n            action.goTo(\\\"resend\\\");\\n        } else {\\n            var sentOtp = nodeState.get(\\\"oneTimePassword\\\");\\n            var isValid = sentOtp === otp;\\n\\n            if (isValid) {\\n                action.goTo(\\\"true\\\");\\n            } else {\\n                action.goTo(\\\"false\\\");\\n            }\\n        }\\n    }\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error message for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\\n\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=55418224-b274-45df-aa87-a466d87a4373,ou=user,ou=am-config",
          "creationDate": 1743151896978,
          "lastModifiedBy": "id=3849fc60-e0fe-4a6b-86b2-1746e332f84b,ou=user,ou=am-config",
          "lastModifiedDate": 1744225129420,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {},
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    }
  }
}