{
  "meta": {
    "origin": "",
    "exportedBy": "",
    "exportDate": "",
    "exportTool": "platform-admin ui tree export",
    "exportToolVersion": "1.0",
    "treesSelectedForExport": [
      "CIAM Passwordless - Registration Main Journey"
    ],
    "innerTreesIncluded": [
      "CIAM Passwordless - Push MFA Method Registration Inner Journey",
      "CIAM Passwordless - OATH MFA Method Registration Inner Journey",
      "CIAM Passwordless - Combined OATH And PUSH MFA Methods Registration Inner Journey",
      "CIAM Passwordless - WebAuthn MFA Method Registration Inner Journey",
      "CIAM Passwordless - MFA Device Registration Inner Journey",
      "CIAM Passwordless - MFA Authentication Inner Journey",
      "CIAM Passwordless - Threat Detection Inner Journey",
      "CIAM Passwordless - Authentication Main Journey"
    ]
  },
  "trees": {
    "CIAM Passwordless - WebAuthn MFA Method Registration Inner Journey": {
      "tree": {
        "_id": "CIAM Passwordless - WebAuthn MFA Method Registration Inner Journey",
        "_rev": "-91537535",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Passwordless\"]"
        },
        "entryNodeId": "923aff81-c7ff-46e4-adea-412484edca1a",
        "innerTreeOnly": true,
        "nodes": {
          "1c232a98-017d-4230-8c27-ddb935c9078d": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Recovery Code Display Node",
            "nodeType": "RecoveryCodeDisplayNode",
            "x": 251,
            "y": 79.015625
          },
          "923aff81-c7ff-46e4-adea-412484edca1a": {
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "failure": "e301438c-0bd0-429c-ab0c-66126501069a",
              "success": "1c232a98-017d-4230-8c27-ddb935c9078d",
              "unsupported": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "displayName": "WebAuthn Registration Node",
            "nodeType": "WebAuthnRegistrationNode",
            "x": 249,
            "y": 210.015625
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 817,
            "y": 82
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 814,
            "y": 291
          },
          "startNode": {
            "x": 50,
            "y": 250
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "1c232a98-017d-4230-8c27-ddb935c9078d": {
          "_id": "1c232a98-017d-4230-8c27-ddb935c9078d",
          "_rev": "783686509",
          "_type": {
            "_id": "RecoveryCodeDisplayNode",
            "name": "Recovery Code Display Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "923aff81-c7ff-46e4-adea-412484edca1a": {
          "_id": "923aff81-c7ff-46e4-adea-412484edca1a",
          "_rev": "-1782165559",
          "trustStoreAlias": "trustalias",
          "relyingPartyName": "ForgeRock",
          "maxSavedDevices": 0,
          "generateRecoveryCodes": true,
          "storeAttestationDataInTransientState": false,
          "origins": [],
          "userVerificationRequirement": "PREFERRED",
          "postponeDeviceProfileStorage": false,
          "excludeCredentials": false,
          "requiresResidentKey": false,
          "authenticatorAttachment": "UNSPECIFIED",
          "asScript": true,
          "acceptedSigningAlgorithms": [
            "ES256",
            "RS256"
          ],
          "attestationPreference": "NONE",
          "enforceRevocationCheck": false,
          "timeout": 60,
          "_type": {
            "_id": "WebAuthnRegistrationNode",
            "name": "WebAuthn Registration Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "unsupported",
              "displayName": "Unsupported"
            },
            {
              "id": "success",
              "displayName": "Success"
            },
            {
              "id": "failure",
              "displayName": "Failure"
            },
            {
              "id": "error",
              "displayName": "Client Error"
            }
          ]
        }
      },
      "innerNodes": {},
      "scripts": {},
      "emailTemplates": {},
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "CIAM Passwordless - Combined OATH And PUSH MFA Methods Registration Inner Journey": {
      "tree": {
        "_id": "CIAM Passwordless - Combined OATH And PUSH MFA Methods Registration Inner Journey",
        "_rev": "-244833509",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Passwordless\"]"
        },
        "entryNodeId": "905e8dd9-9d51-4ae8-9767-6e7c6bbe6630",
        "innerTreeOnly": true,
        "nodes": {
          "000c6824-0130-4777-a0b7-4a58fa833d46": {
            "connections": {
              "true": "f625e769-5f10-4d51-a17f-f8b679be6024"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 940,
            "y": 104.015625
          },
          "0986fc7b-b729-44bb-b3fe-228950cab470": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "80f77fdf-12da-4469-af04-4e659406607a"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 1018,
            "y": 1434.03125
          },
          "18064fd6-2ee2-4300-80c8-41582ca6c361": {
            "connections": {
              "outcome": "1d04467e-65a2-43fc-88cd-fc50419d28fa"
            },
            "displayName": "Recovery Code Display Node",
            "nodeType": "RecoveryCodeDisplayNode",
            "x": 573.8888888888889,
            "y": 1437.5729166666667
          },
          "1d04467e-65a2-43fc-88cd-fc50419d28fa": {
            "connections": {
              "NOT_REGISTERED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "SENT": "e5406f61-31f4-470f-9d4a-9f79e4636425"
            },
            "displayName": "Push Sender",
            "nodeType": "PushAuthenticationSenderNode",
            "x": 601,
            "y": 1163.5729166666667
          },
          "39d75cea-252d-48ee-bd10-5df47c557b59": {
            "connections": {
              "false": "ca93d5fa-5658-444a-93b8-5806ce1b7de7",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Recovery Code Page Node",
            "nodeType": "PageNode",
            "x": 609.1666666666667,
            "y": 638.6927083333334
          },
          "492793bf-5e8a-41bb-ba64-affd54e72041": {
            "connections": {
              "FALSE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "TRUE": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "WAITING": "ef6ee886-7eb5-4e15-9cc7-64868ff67a79",
              "EXPIRED": "f625e769-5f10-4d51-a17f-f8b679be6024"
            },
            "displayName": "Push Result Verifier Node",
            "nodeType": "PushResultVerifierNode",
            "x": 200,
            "y": 87
          },
          "498da641-1095-4c05-9d3e-7c210bc1f2fa": {
            "connections": {
              "FALSE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "TRUE": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "WAITING": "e5406f61-31f4-470f-9d4a-9f79e4636425",
              "EXPIRED": "ae08ddfb-8d45-41f7-8233-f8b658841391"
            },
            "displayName": "Push Result Verifier Node",
            "nodeType": "PushResultVerifierNode",
            "x": 976.5,
            "y": 934.1927083333334
          },
          "4e42b5b3-526c-46c0-8b10-acb1a08cd308": {
            "connections": {
              "failureOutcome": "e301438c-0bd0-429c-ab0c-66126501069a",
              "successOutcome": "18064fd6-2ee2-4300-80c8-41582ca6c361",
              "timeoutOutcome": "e2aa08d4-08a2-4ba1-8a80-d0aa27021384"
            },
            "displayName": "Combined MFA Registration",
            "nodeType": "CombinedMultiFactorRegistrationNode",
            "x": 211,
            "y": 1163
          },
          "6708405a-9775-49ec-9baf-21838700a4e3": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "000c6824-0130-4777-a0b7-4a58fa833d46"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 609,
            "y": 73.015625
          },
          "712c0d92-ad61-4de9-835a-e0b65aa0ef8b": {
            "connections": {
              "outcome": "4e42b5b3-526c-46c0-8b10-acb1a08cd308"
            },
            "displayName": "Get Authenticator App",
            "nodeType": "GetAuthenticatorAppNode",
            "x": 224,
            "y": 964.421875
          },
          "80f77fdf-12da-4469-af04-4e659406607a": {
            "connections": {
              "true": "ae08ddfb-8d45-41f7-8233-f8b658841391"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 1375,
            "y": 1458.015625
          },
          "905e8dd9-9d51-4ae8-9767-6e7c6bbe6630": {
            "connections": {
              "NOT_REGISTERED": "712c0d92-ad61-4de9-835a-e0b65aa0ef8b",
              "SENT": "ef6ee886-7eb5-4e15-9cc7-64868ff67a79"
            },
            "displayName": "Push Sender",
            "nodeType": "PushAuthenticationSenderNode",
            "x": 239,
            "y": 674
          },
          "ae08ddfb-8d45-41f7-8233-f8b658841391": {
            "connections": {
              "failureOutcome": "0986fc7b-b729-44bb-b3fe-228950cab470",
              "successOutcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Enter Verification Code",
            "nodeType": "PageNode",
            "x": 996,
            "y": 1128.015625
          },
          "b86fcb50-3df3-46a8-a086-2539c1ba6613": {
            "connections": {
              "true": "39d75cea-252d-48ee-bd10-5df47c557b59"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 947,
            "y": 647.015625
          },
          "ca93d5fa-5658-444a-93b8-5806ce1b7de7": {
            "connections": {
              "Retry": "b86fcb50-3df3-46a8-a086-2539c1ba6613"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 990,
            "y": 780.015625
          },
          "e2aa08d4-08a2-4ba1-8a80-d0aa27021384": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "4e42b5b3-526c-46c0-8b10-acb1a08cd308"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 259,
            "y": 1450
          },
          "e5406f61-31f4-470f-9d4a-9f79e4636425": {
            "connections": {
              "DONE": "498da641-1095-4c05-9d3e-7c210bc1f2fa",
              "EXITED": "ae08ddfb-8d45-41f7-8233-f8b658841391"
            },
            "displayName": "Push Wait Node",
            "nodeType": "PushWaitNode",
            "x": 596.5,
            "y": 954.1927083333334
          },
          "ef6ee886-7eb5-4e15-9cc7-64868ff67a79": {
            "connections": {
              "DONE": "492793bf-5e8a-41bb-ba64-affd54e72041",
              "EXITED": "f625e769-5f10-4d51-a17f-f8b679be6024"
            },
            "displayName": "Push Wait Node",
            "nodeType": "PushWaitNode",
            "x": 236,
            "y": 405
          },
          "f625e769-5f10-4d51-a17f-f8b679be6024": {
            "connections": {
              "failureOutcome": "6708405a-9775-49ec-9baf-21838700a4e3",
              "notRegisteredOutcome": "e301438c-0bd0-429c-ab0c-66126501069a",
              "recoveryCodeOutcome": "39d75cea-252d-48ee-bd10-5df47c557b59",
              "successOutcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Enter Verification Code",
            "nodeType": "PageNode",
            "x": 609,
            "y": 307.015625
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 2334,
            "y": 817.3333333333333
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 2363,
            "y": 1506.6666666666667
          },
          "startNode": {
            "x": 70,
            "y": 347.5
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "000c6824-0130-4777-a0b7-4a58fa833d46": {
          "_id": "000c6824-0130-4777-a0b7-4a58fa833d46",
          "_rev": "-112559744",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "0986fc7b-b729-44bb-b3fe-228950cab470": {
          "_id": "0986fc7b-b729-44bb-b3fe-228950cab470",
          "_rev": "1100095443",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "18064fd6-2ee2-4300-80c8-41582ca6c361": {
          "_id": "18064fd6-2ee2-4300-80c8-41582ca6c361",
          "_rev": "1988110241",
          "_type": {
            "_id": "RecoveryCodeDisplayNode",
            "name": "Recovery Code Display Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "1d04467e-65a2-43fc-88cd-fc50419d28fa": {
          "_id": "1d04467e-65a2-43fc-88cd-fc50419d28fa",
          "_rev": "1373123313",
          "captureFailure": false,
          "contextInfo": false,
          "userMessage": {},
          "pushType": "DEFAULT",
          "customPayload": [],
          "mandatory": true,
          "messageTimeout": 120000,
          "_type": {
            "_id": "PushAuthenticationSenderNode",
            "name": "Push Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "SENT",
              "displayName": "Sent"
            },
            {
              "id": "NOT_REGISTERED",
              "displayName": "Not Registered"
            }
          ]
        },
        "39d75cea-252d-48ee-bd10-5df47c557b59": {
          "_id": "39d75cea-252d-48ee-bd10-5df47c557b59",
          "_rev": "-2135474439",
          "nodes": [
            {
              "_id": "adc8ee0b-211b-4f1d-bd98-043b07effb37",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Recovery Code"
            },
            {
              "_id": "457adfaa-dcb7-4c02-98bb-04f38aa38339",
              "nodeType": "RecoveryCodeCollectorDecisionNode",
              "displayName": "Recovery Code Collector Decision"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Recovery Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "492793bf-5e8a-41bb-ba64-affd54e72041": {
          "_id": "492793bf-5e8a-41bb-ba64-affd54e72041",
          "_rev": "1316050107",
          "_type": {
            "_id": "PushResultVerifierNode",
            "name": "Push Result Verifier Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "TRUE",
              "displayName": "Success"
            },
            {
              "id": "FALSE",
              "displayName": "Failure"
            },
            {
              "id": "EXPIRED",
              "displayName": "Expired"
            },
            {
              "id": "WAITING",
              "displayName": "Waiting"
            }
          ]
        },
        "498da641-1095-4c05-9d3e-7c210bc1f2fa": {
          "_id": "498da641-1095-4c05-9d3e-7c210bc1f2fa",
          "_rev": "-417464670",
          "_type": {
            "_id": "PushResultVerifierNode",
            "name": "Push Result Verifier Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "TRUE",
              "displayName": "Success"
            },
            {
              "id": "FALSE",
              "displayName": "Failure"
            },
            {
              "id": "EXPIRED",
              "displayName": "Expired"
            },
            {
              "id": "WAITING",
              "displayName": "Waiting"
            }
          ]
        },
        "4e42b5b3-526c-46c0-8b10-acb1a08cd308": {
          "_id": "4e42b5b3-526c-46c0-8b10-acb1a08cd308",
          "_rev": "138373903",
          "addChecksum": false,
          "bgColor": "032b75",
          "generateRecoveryCodes": true,
          "truncationOffset": -1,
          "algorithm": "TOTP",
          "passwordLength": "SIX_DIGITS",
          "totpTimeInterval": 30,
          "scanQRCodeMessage": {},
          "accountName": "USERNAME",
          "issuer": "ForgeRock",
          "minSharedSecretLength": 32,
          "totpHashAlgorithm": "HMAC_SHA1",
          "timeout": 60,
          "_type": {
            "_id": "CombinedMultiFactorRegistrationNode",
            "name": "Combined MFA Registration",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "timeoutOutcome",
              "displayName": "Time Out"
            }
          ]
        },
        "6708405a-9775-49ec-9baf-21838700a4e3": {
          "_id": "6708405a-9775-49ec-9baf-21838700a4e3",
          "_rev": "1827774143",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "712c0d92-ad61-4de9-835a-e0b65aa0ef8b": {
          "_id": "712c0d92-ad61-4de9-835a-e0b65aa0ef8b",
          "_rev": "-1420298430",
          "continueLabel": {},
          "message": {},
          "googleLink": "https://play.google.com/store/apps/details?id=com.forgerock.authenticator",
          "appleLink": "https://itunes.apple.com/app/forgerock-authenticator/id1038442926",
          "_type": {
            "_id": "GetAuthenticatorAppNode",
            "name": "Get Authenticator App",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "80f77fdf-12da-4469-af04-4e659406607a": {
          "_id": "80f77fdf-12da-4469-af04-4e659406607a",
          "_rev": "-5161210",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "905e8dd9-9d51-4ae8-9767-6e7c6bbe6630": {
          "_id": "905e8dd9-9d51-4ae8-9767-6e7c6bbe6630",
          "_rev": "-1379886469",
          "captureFailure": false,
          "contextInfo": false,
          "userMessage": {},
          "pushType": "DEFAULT",
          "customPayload": [],
          "mandatory": true,
          "messageTimeout": 120000,
          "_type": {
            "_id": "PushAuthenticationSenderNode",
            "name": "Push Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "SENT",
              "displayName": "Sent"
            },
            {
              "id": "NOT_REGISTERED",
              "displayName": "Not Registered"
            }
          ]
        },
        "ae08ddfb-8d45-41f7-8233-f8b658841391": {
          "_id": "ae08ddfb-8d45-41f7-8233-f8b658841391",
          "_rev": "1926552083",
          "nodes": [
            {
              "_id": "06f5679e-ee6e-49d6-abc3-784f0173a9ae",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Verification Code"
            },
            {
              "_id": "2ba68e52-c3ac-4364-b1cd-b29efd7756aa",
              "nodeType": "OathTokenVerifierNode",
              "displayName": "OATH Token Verifier"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Verification Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            }
          ]
        },
        "b86fcb50-3df3-46a8-a086-2539c1ba6613": {
          "_id": "b86fcb50-3df3-46a8-a086-2539c1ba6613",
          "_rev": "707438801",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "ca93d5fa-5658-444a-93b8-5806ce1b7de7": {
          "_id": "ca93d5fa-5658-444a-93b8-5806ce1b7de7",
          "_rev": "-368435517",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "e2aa08d4-08a2-4ba1-8a80-d0aa27021384": {
          "_id": "e2aa08d4-08a2-4ba1-8a80-d0aa27021384",
          "_rev": "-97610591",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "e5406f61-31f4-470f-9d4a-9f79e4636425": {
          "_id": "e5406f61-31f4-470f-9d4a-9f79e4636425",
          "_rev": "903137511",
          "challengeMessage": {},
          "exitMessage": {},
          "waitingMessage": {},
          "secondsToWait": 5,
          "_type": {
            "_id": "PushWaitNode",
            "name": "Push Wait Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "DONE",
              "displayName": "Done"
            },
            {
              "id": "EXITED",
              "displayName": "Exit"
            }
          ]
        },
        "ef6ee886-7eb5-4e15-9cc7-64868ff67a79": {
          "_id": "ef6ee886-7eb5-4e15-9cc7-64868ff67a79",
          "_rev": "2044511932",
          "challengeMessage": {},
          "exitMessage": {},
          "waitingMessage": {},
          "secondsToWait": 5,
          "_type": {
            "_id": "PushWaitNode",
            "name": "Push Wait Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "DONE",
              "displayName": "Done"
            },
            {
              "id": "EXITED",
              "displayName": "Exit"
            }
          ]
        },
        "f625e769-5f10-4d51-a17f-f8b679be6024": {
          "_id": "f625e769-5f10-4d51-a17f-f8b679be6024",
          "_rev": "-1776028557",
          "nodes": [
            {
              "_id": "ce1059e1-d910-4978-ae3d-03b7d0a492bc",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Verification Code"
            },
            {
              "_id": "60ad28eb-35d0-4ab0-8761-3279f36ff011",
              "nodeType": "OathTokenVerifierNode",
              "displayName": "OATH Token Verifier"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Verification Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            },
            {
              "id": "recoveryCodeOutcome",
              "displayName": "Recovery Code"
            }
          ]
        }
      },
      "innerNodes": {
        "adc8ee0b-211b-4f1d-bd98-043b07effb37": {
          "_id": "adc8ee0b-211b-4f1d-bd98-043b07effb37",
          "_rev": "1284153527",
          "script": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "457adfaa-dcb7-4c02-98bb-04f38aa38339": {
          "_id": "457adfaa-dcb7-4c02-98bb-04f38aa38339",
          "_rev": "-1556270623",
          "recoveryCodeType": "OATH",
          "_type": {
            "_id": "RecoveryCodeCollectorDecisionNode",
            "name": "Recovery Code Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "06f5679e-ee6e-49d6-abc3-784f0173a9ae": {
          "_id": "06f5679e-ee6e-49d6-abc3-784f0173a9ae",
          "_rev": "334638116",
          "script": "07e3c04a-1cf0-42e9-ab80-c9c06634c530",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "2ba68e52-c3ac-4364-b1cd-b29efd7756aa": {
          "_id": "2ba68e52-c3ac-4364-b1cd-b29efd7756aa",
          "_rev": "-2050241144",
          "totpTimeInterval": 30,
          "maximumAllowedClockDrift": 5,
          "totpTimeSteps": 2,
          "totpHashAlgorithm": "HMAC_SHA1",
          "isRecoveryCodeAllowed": false,
          "algorithm": "TOTP",
          "hotpWindowSize": 100,
          "_type": {
            "_id": "OathTokenVerifierNode",
            "name": "OATH Token Verifier",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            }
          ]
        },
        "ce1059e1-d910-4978-ae3d-03b7d0a492bc": {
          "_id": "ce1059e1-d910-4978-ae3d-03b7d0a492bc",
          "_rev": "-1234924054",
          "script": "07e3c04a-1cf0-42e9-ab80-c9c06634c530",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "60ad28eb-35d0-4ab0-8761-3279f36ff011": {
          "_id": "60ad28eb-35d0-4ab0-8761-3279f36ff011",
          "_rev": "2055944438",
          "totpTimeInterval": 30,
          "maximumAllowedClockDrift": 5,
          "totpTimeSteps": 2,
          "totpHashAlgorithm": "HMAC_SHA1",
          "isRecoveryCodeAllowed": true,
          "algorithm": "TOTP",
          "hotpWindowSize": 100,
          "_type": {
            "_id": "OathTokenVerifierNode",
            "name": "OATH Token Verifier",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            },
            {
              "id": "recoveryCodeOutcome",
              "displayName": "Recovery Code"
            }
          ]
        }
      },
      "scripts": {
        "86e5bf13-4882-4032-8fb7-f75dd7fa7b82": {
          "_id": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "name": "OOTB Passwordless - Set Invalid Code Error Message Script",
          "description": "Script to set invalid code error message",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: null\\n    - Script Outputs: \\\"invalidCodeErrorMessage\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\n// Set the below error message in shared state, can be displayed on the last UI Node\\n\\ntry {\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"Invalid Code\\\");\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "be50351b-c077-4827-b9aa-3a61a08b30f9": {
          "_id": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "name": "OOTB Passwordless - Validate Recovery Code Input Script",
          "description": "Script to validate Recovery code input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"// /*\\n//   - Data made available by nodes that have already executed are available in the sharedState variable.\\n//   - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n//  */\\n\\n/*\\n    - Script Inputs: \\\"invalidCodeErrorMessage\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\", \\\"invalidCodeErrorMessage\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                    if(submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        const recoveryCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Recovery Code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (recoveryCode && submitBtn) { \\\\n\\\\\\n                            // Set the maxlength attribute to 10 \\\\n\\\\\\n                            recoveryCode.setAttribute('maxlength', 10); \\\\n\\\\\\n                            const enableSubmitBtn = () => { \\\\n\\\\\\n                                // Check input validity before enabling submit button \\\\n\\\\\\n                                const isValidInput = recoveryCode.value.length === 10; \\\\n\\\\\\n                                if (isValidInput) { \\\\n\\\\\\n                                    submitBtn.disabled = false; \\\\n\\\\\\n                                } else { \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }; \\\\n\\\\\\n                            // Revalidate before form submission \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                const isValidInput = recoveryCode.value.length === 10; \\\\n\\\\\\n                                if (!isValidInput) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            recoveryCode.addEventListener('input', enableSubmitBtn); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                       } \\\\n\\\\\\n                      } \\\\n\\\\\\n                      if (document.querySelectorAll('input[data-vv-as=\\\\\\\"Recovery Code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                      else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                      } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n    \\n    if (callbacks.isEmpty()) {                \\n        // Display error message if invalid code entered by user\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        // Request callbacks\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "07e3c04a-1cf0-42e9-ab80-c9c06634c530": {
          "_id": "07e3c04a-1cf0-42e9-ab80-c9c06634c530",
          "name": "OOTB Passwordless - Validate Verification Code Input Script",
          "description": "Script to validate verification code input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n*/\\n\\n/*\\n    - Script Inputs: \\\"invalidCodeErrorMessage\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\", \\\"invalidCodeErrorMessage\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    // Validate the verification code \\\\n\\\\\\n                    function validateCode() { \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        const verificationCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (verificationCode) { \\\\n\\\\\\n                            // Set input properties to prevent user tampering \\\\n\\\\\\n                            verificationCode.setAttribute('maxlength', '6'); \\\\n\\\\\\n                            verificationCode.setAttribute('pattern', '[0-9]{6}'); \\\\n\\\\\\n                            verificationCode.setAttribute('inputmode', 'numeric'); \\\\n\\\\\\n                            // Check if the input is exactly 6 digits long and numeric \\\\n\\\\\\n                            const isValidCode = /^[0-9]{6}$/.test(verificationCode.value); \\\\n\\\\\\n                            submitBtn.disabled = !isValidCode; \\\\n\\\\\\n                            return isValidCode; \\\\n\\\\\\n                        } \\\\n\\\\\\n                        return false; \\\\n\\\\\\n                    }; \\\\n\\\\\\n                    \\\\n\\\\\\n                    function preventEnterKeyDefault(event) { \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (event.key === 'Enter' && !validateCode()) { \\\\n\\\\\\n                            event.preventDefault(); \\\\n\\\\\\n                            if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        // Auto-submit and go to 'Not Registered' path if method is not registered for the user, in that case it is assumed that button will be of type submit from Page Node \\\\n\\\\\\n                        const nextBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (nextBtn) { \\\\n\\\\\\n                            nextBtn.style.visibility='hidden'; \\\\n\\\\\\n                            nextBtn.click(); \\\\n\\\\\\n                        } \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                        const verificationCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (verificationCode && submitBtn) { \\\\n\\\\\\n                            verificationCode.addEventListener('input', validateCode); \\\\n\\\\\\n                            verificationCode.addEventListener('keypress', preventEnterKeyDefault); \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                if (!validateCode()) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    // If both elements are present, initialize validation \\\\n\\\\\\n                    if (document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0] && document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                    else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                    } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n    \\n    if (callbacks.isEmpty()) {\\n        // Display error message if invalid code entered by user\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        // Request callbacks\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {},
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "CIAM Passwordless - OATH MFA Method Registration Inner Journey": {
      "tree": {
        "_id": "CIAM Passwordless - OATH MFA Method Registration Inner Journey",
        "_rev": "1019191621",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Passwordless\"]"
        },
        "entryNodeId": "864098a0-fadf-49df-a715-481e298e120f",
        "innerTreeOnly": true,
        "nodes": {
          "0f390437-9261-49fd-b105-3cbac366100a": {
            "x": 879,
            "y": 418.015625,
            "connections": {
              "true": "dec7dc75-5b56-4c36-9a9e-79b1416df31a"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set Invalid Code Error Message"
          },
          "180e6a10-cbe3-4722-b395-86d2efcea91e": {
            "x": 908,
            "y": 536.015625,
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "0f390437-9261-49fd-b105-3cbac366100a"
            },
            "nodeType": "RetryLimitDecisionNode",
            "displayName": "Retry Limit Decision"
          },
          "264b128c-317f-4096-8fdc-62f0dcff98f4": {
            "x": 537,
            "y": 81.015625,
            "connections": {
              "outcome": "c76589d9-6f86-4ae9-98ae-d534df4ce026"
            },
            "nodeType": "RecoveryCodeDisplayNode",
            "displayName": "Recovery Code Display Node"
          },
          "6c7fe15c-42cc-4e48-9880-3854d6c139ec": {
            "x": 874,
            "y": 282.015625,
            "connections": {
              "true": "c76589d9-6f86-4ae9-98ae-d534df4ce026"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set Invalid Code Error Message"
          },
          "730fb844-a024-4ae2-830f-98769760490b": {
            "x": 1283,
            "y": 74.015625,
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "6c7fe15c-42cc-4e48-9880-3854d6c139ec"
            },
            "nodeType": "RetryLimitDecisionNode",
            "displayName": "Retry Limit Decision"
          },
          "73e5caf9-1db6-4afe-8b84-73da17ff57ac": {
            "x": 577,
            "y": 739.015625,
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "864098a0-fadf-49df-a715-481e298e120f"
            },
            "nodeType": "RetryLimitDecisionNode",
            "displayName": "Retry Limit Decision"
          },
          "864098a0-fadf-49df-a715-481e298e120f": {
            "x": 568,
            "y": 482.015625,
            "connections": {
              "failureOutcome": "73e5caf9-1db6-4afe-8b84-73da17ff57ac",
              "notRegisteredOutcome": "e198e8bb-07ef-474a-9f79-9bc160e14e75",
              "recoveryCodeOutcome": "dec7dc75-5b56-4c36-9a9e-79b1416df31a",
              "successOutcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "OathTokenVerifierNode",
            "displayName": "OATH Token Verifier"
          },
          "c76589d9-6f86-4ae9-98ae-d534df4ce026": {
            "x": 909,
            "y": 0,
            "connections": {
              "failureOutcome": "730fb844-a024-4ae2-830f-98769760490b",
              "notRegisteredOutcome": "e301438c-0bd0-429c-ab0c-66126501069a",
              "successOutcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "PageNode",
            "displayName": "Collect Verification Code"
          },
          "dec7dc75-5b56-4c36-9a9e-79b1416df31a": {
            "x": 909,
            "y": 704.015625,
            "connections": {
              "false": "180e6a10-cbe3-4722-b395-86d2efcea91e",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "PageNode",
            "displayName": "Collect Recovery Code"
          },
          "def0200c-28d6-4a90-883e-d920a99e3f80": {
            "x": 569,
            "y": 222.015625,
            "connections": {
              "failureOutcome": "e301438c-0bd0-429c-ab0c-66126501069a",
              "successOutcome": "264b128c-317f-4096-8fdc-62f0dcff98f4"
            },
            "nodeType": "OathRegistrationNode",
            "displayName": "OATH Registration"
          },
          "e198e8bb-07ef-474a-9f79-9bc160e14e75": {
            "x": 560.5714285714286,
            "y": 374.59375,
            "connections": {
              "outcome": "def0200c-28d6-4a90-883e-d920a99e3f80"
            },
            "nodeType": "GetAuthenticatorAppNode",
            "displayName": "Get Authenticator App"
          }
        },
        "staticNodes": {
          "startNode": {
            "x": 50,
            "y": 250
          },
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1908,
            "y": 504
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1910,
            "y": 801
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "0f390437-9261-49fd-b105-3cbac366100a": {
          "_id": "0f390437-9261-49fd-b105-3cbac366100a",
          "_rev": "21920425",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "180e6a10-cbe3-4722-b395-86d2efcea91e": {
          "_id": "180e6a10-cbe3-4722-b395-86d2efcea91e",
          "_rev": "-1001224047",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "264b128c-317f-4096-8fdc-62f0dcff98f4": {
          "_id": "264b128c-317f-4096-8fdc-62f0dcff98f4",
          "_rev": "302243048",
          "_type": {
            "_id": "RecoveryCodeDisplayNode",
            "name": "Recovery Code Display Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "6c7fe15c-42cc-4e48-9880-3854d6c139ec": {
          "_id": "6c7fe15c-42cc-4e48-9880-3854d6c139ec",
          "_rev": "-2035674503",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "730fb844-a024-4ae2-830f-98769760490b": {
          "_id": "730fb844-a024-4ae2-830f-98769760490b",
          "_rev": "1159110776",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "73e5caf9-1db6-4afe-8b84-73da17ff57ac": {
          "_id": "73e5caf9-1db6-4afe-8b84-73da17ff57ac",
          "_rev": "-60025562",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "864098a0-fadf-49df-a715-481e298e120f": {
          "_id": "864098a0-fadf-49df-a715-481e298e120f",
          "_rev": "1615205558",
          "totpTimeInterval": 30,
          "maximumAllowedClockDrift": 5,
          "totpTimeSteps": 2,
          "totpHashAlgorithm": "HMAC_SHA1",
          "isRecoveryCodeAllowed": true,
          "algorithm": "TOTP",
          "hotpWindowSize": 100,
          "_type": {
            "_id": "OathTokenVerifierNode",
            "name": "OATH Token Verifier",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            },
            {
              "id": "recoveryCodeOutcome",
              "displayName": "Recovery Code"
            }
          ]
        },
        "c76589d9-6f86-4ae9-98ae-d534df4ce026": {
          "_id": "c76589d9-6f86-4ae9-98ae-d534df4ce026",
          "_rev": "1010612701",
          "nodes": [
            {
              "_id": "a4f72117-a3cd-47cf-82be-c12b4f4352a2",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Verification Code"
            },
            {
              "_id": "d7d09788-5784-4c7c-ac25-36d0a601d159",
              "nodeType": "OathTokenVerifierNode",
              "displayName": "OATH Token Verifier"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Verification Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            }
          ]
        },
        "dec7dc75-5b56-4c36-9a9e-79b1416df31a": {
          "_id": "dec7dc75-5b56-4c36-9a9e-79b1416df31a",
          "_rev": "1054152348",
          "nodes": [
            {
              "_id": "082d98d4-fc77-4b75-8e2c-a99d87da41a7",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Recovery Code"
            },
            {
              "_id": "2ed235dd-4de9-4860-b5ec-4340fbda37f8",
              "nodeType": "RecoveryCodeCollectorDecisionNode",
              "displayName": "Recovery Code Collector Decision"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Recovery Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "def0200c-28d6-4a90-883e-d920a99e3f80": {
          "_id": "def0200c-28d6-4a90-883e-d920a99e3f80",
          "_rev": "517582014",
          "addChecksum": false,
          "bgColor": "032b75",
          "generateRecoveryCodes": true,
          "truncationOffset": -1,
          "algorithm": "TOTP",
          "postponeDeviceProfileStorage": false,
          "passwordLength": "SIX_DIGITS",
          "totpTimeInterval": 30,
          "scanQRCodeMessage": {},
          "accountName": "USERNAME",
          "issuer": "ForgeRock",
          "minSharedSecretLength": 32,
          "totpHashAlgorithm": "HMAC_SHA1",
          "_type": {
            "_id": "OathRegistrationNode",
            "name": "OATH Registration",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            }
          ]
        },
        "e198e8bb-07ef-474a-9f79-9bc160e14e75": {
          "_id": "e198e8bb-07ef-474a-9f79-9bc160e14e75",
          "_rev": "279432405",
          "continueLabel": {},
          "message": {},
          "googleLink": "https://play.google.com/store/apps/details?id=com.forgerock.authenticator",
          "appleLink": "https://itunes.apple.com/app/forgerock-authenticator/id1038442926",
          "_type": {
            "_id": "GetAuthenticatorAppNode",
            "name": "Get Authenticator App",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        }
      },
      "innerNodes": {
        "a4f72117-a3cd-47cf-82be-c12b4f4352a2": {
          "_id": "a4f72117-a3cd-47cf-82be-c12b4f4352a2",
          "_rev": "1222082983",
          "script": "07e3c04a-1cf0-42e9-ab80-c9c06634c530",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "d7d09788-5784-4c7c-ac25-36d0a601d159": {
          "_id": "d7d09788-5784-4c7c-ac25-36d0a601d159",
          "_rev": "-2013527814",
          "totpTimeInterval": 30,
          "maximumAllowedClockDrift": 5,
          "totpTimeSteps": 2,
          "totpHashAlgorithm": "HMAC_SHA1",
          "isRecoveryCodeAllowed": false,
          "algorithm": "TOTP",
          "hotpWindowSize": 100,
          "_type": {
            "_id": "OathTokenVerifierNode",
            "name": "OATH Token Verifier",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            }
          ]
        },
        "082d98d4-fc77-4b75-8e2c-a99d87da41a7": {
          "_id": "082d98d4-fc77-4b75-8e2c-a99d87da41a7",
          "_rev": "-157767898",
          "script": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "2ed235dd-4de9-4860-b5ec-4340fbda37f8": {
          "_id": "2ed235dd-4de9-4860-b5ec-4340fbda37f8",
          "_rev": "-1020067605",
          "recoveryCodeType": "OATH",
          "_type": {
            "_id": "RecoveryCodeCollectorDecisionNode",
            "name": "Recovery Code Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        }
      },
      "scripts": {
        "86e5bf13-4882-4032-8fb7-f75dd7fa7b82": {
          "_id": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "name": "OOTB Passwordless - Set Invalid Code Error Message Script",
          "description": "Script to set invalid code error message",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: null\\n    - Script Outputs: \\\"invalidCodeErrorMessage\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\n// Set the below error message in shared state, can be displayed on the last UI Node\\n\\ntry {\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"Invalid Code\\\");\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "07e3c04a-1cf0-42e9-ab80-c9c06634c530": {
          "_id": "07e3c04a-1cf0-42e9-ab80-c9c06634c530",
          "name": "OOTB Passwordless - Validate Verification Code Input Script",
          "description": "Script to validate verification code input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n*/\\n\\n/*\\n    - Script Inputs: \\\"invalidCodeErrorMessage\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\", \\\"invalidCodeErrorMessage\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    // Validate the verification code \\\\n\\\\\\n                    function validateCode() { \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        const verificationCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (verificationCode) { \\\\n\\\\\\n                            // Set input properties to prevent user tampering \\\\n\\\\\\n                            verificationCode.setAttribute('maxlength', '6'); \\\\n\\\\\\n                            verificationCode.setAttribute('pattern', '[0-9]{6}'); \\\\n\\\\\\n                            verificationCode.setAttribute('inputmode', 'numeric'); \\\\n\\\\\\n                            // Check if the input is exactly 6 digits long and numeric \\\\n\\\\\\n                            const isValidCode = /^[0-9]{6}$/.test(verificationCode.value); \\\\n\\\\\\n                            submitBtn.disabled = !isValidCode; \\\\n\\\\\\n                            return isValidCode; \\\\n\\\\\\n                        } \\\\n\\\\\\n                        return false; \\\\n\\\\\\n                    }; \\\\n\\\\\\n                    \\\\n\\\\\\n                    function preventEnterKeyDefault(event) { \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (event.key === 'Enter' && !validateCode()) { \\\\n\\\\\\n                            event.preventDefault(); \\\\n\\\\\\n                            if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        // Auto-submit and go to 'Not Registered' path if method is not registered for the user, in that case it is assumed that button will be of type submit from Page Node \\\\n\\\\\\n                        const nextBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (nextBtn) { \\\\n\\\\\\n                            nextBtn.style.visibility='hidden'; \\\\n\\\\\\n                            nextBtn.click(); \\\\n\\\\\\n                        } \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                        const verificationCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (verificationCode && submitBtn) { \\\\n\\\\\\n                            verificationCode.addEventListener('input', validateCode); \\\\n\\\\\\n                            verificationCode.addEventListener('keypress', preventEnterKeyDefault); \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                if (!validateCode()) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    // If both elements are present, initialize validation \\\\n\\\\\\n                    if (document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0] && document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                    else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                    } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n    \\n    if (callbacks.isEmpty()) {\\n        // Display error message if invalid code entered by user\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        // Request callbacks\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "be50351b-c077-4827-b9aa-3a61a08b30f9": {
          "_id": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "name": "OOTB Passwordless - Validate Recovery Code Input Script",
          "description": "Script to validate Recovery code input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"// /*\\n//   - Data made available by nodes that have already executed are available in the sharedState variable.\\n//   - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n//  */\\n\\n/*\\n    - Script Inputs: \\\"invalidCodeErrorMessage\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\", \\\"invalidCodeErrorMessage\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                    if(submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        const recoveryCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Recovery Code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (recoveryCode && submitBtn) { \\\\n\\\\\\n                            // Set the maxlength attribute to 10 \\\\n\\\\\\n                            recoveryCode.setAttribute('maxlength', 10); \\\\n\\\\\\n                            const enableSubmitBtn = () => { \\\\n\\\\\\n                                // Check input validity before enabling submit button \\\\n\\\\\\n                                const isValidInput = recoveryCode.value.length === 10; \\\\n\\\\\\n                                if (isValidInput) { \\\\n\\\\\\n                                    submitBtn.disabled = false; \\\\n\\\\\\n                                } else { \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }; \\\\n\\\\\\n                            // Revalidate before form submission \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                const isValidInput = recoveryCode.value.length === 10; \\\\n\\\\\\n                                if (!isValidInput) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            recoveryCode.addEventListener('input', enableSubmitBtn); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                       } \\\\n\\\\\\n                      } \\\\n\\\\\\n                      if (document.querySelectorAll('input[data-vv-as=\\\\\\\"Recovery Code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                      else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                      } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n    \\n    if (callbacks.isEmpty()) {                \\n        // Display error message if invalid code entered by user\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        // Request callbacks\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {},
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "CIAM Passwordless - Push MFA Method Registration Inner Journey": {
      "tree": {
        "_id": "CIAM Passwordless - Push MFA Method Registration Inner Journey",
        "_rev": "-1497564626",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Passwordless\"]"
        },
        "entryNodeId": "a86952b8-e5e9-48e9-b17d-a555d8d41886",
        "innerTreeOnly": true,
        "nodes": {
          "065d73ad-0124-4141-b355-f6f3c897dc0e": {
            "connections": {
              "true": "ed5d5c70-c8bc-4abc-ae32-bf2a4a268431"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 778,
            "y": 997.015625
          },
          "12e3c42e-e1e7-48b2-9ed7-f95e94049def": {
            "connections": {
              "outcome": "7c1bc12f-3755-47f8-b4bd-e1ab9ece64d8"
            },
            "displayName": "Recovery Code Display Node",
            "nodeType": "RecoveryCodeDisplayNode",
            "x": 352,
            "y": 996.015625
          },
          "2e9ca26b-1ed0-4afd-aae1-b56d90f08c9f": {
            "connections": {
              "EXPIRED": "3248493b-5d9e-4b2e-aa95-dabb9f362687",
              "FALSE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "TRUE": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "WAITING": "741463a3-6689-4297-ad35-e77ab0198ff6"
            },
            "displayName": "Push Result Verifier Node",
            "nodeType": "PushResultVerifierNode",
            "x": 803.3333333333335,
            "y": 1346.359375
          },
          "3248493b-5d9e-4b2e-aa95-dabb9f362687": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "7c1bc12f-3755-47f8-b4bd-e1ab9ece64d8"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 827,
            "y": 1167.515625
          },
          "741463a3-6689-4297-ad35-e77ab0198ff6": {
            "connections": {
              "DONE": "2e9ca26b-1ed0-4afd-aae1-b56d90f08c9f",
              "EXITED": "3248493b-5d9e-4b2e-aa95-dabb9f362687"
            },
            "displayName": "Push Wait Node",
            "nodeType": "PushWaitNode",
            "x": 387,
            "y": 1386.015625
          },
          "7c1bc12f-3755-47f8-b4bd-e1ab9ece64d8": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "NOT_REGISTERED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "SENT": "741463a3-6689-4297-ad35-e77ab0198ff6"
            },
            "displayName": "Push Sender",
            "nodeType": "PushAuthenticationSenderNode",
            "x": 380,
            "y": 1173.015625
          },
          "7c72f519-4d59-486d-ade5-31852c68e5fe": {
            "connections": {
              "EXPIRED": "87be086b-a54a-47b9-b519-7785e75ea4a6",
              "FALSE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "TRUE": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "WAITING": "fe9db53a-4869-4578-b95e-b57c5a8b517d"
            },
            "displayName": "Push Result Verifier Node",
            "nodeType": "PushResultVerifierNode",
            "x": 788,
            "y": 93.015625
          },
          "84e309c2-5f4b-44eb-a330-6c61fe576e85": {
            "connections": {
              "failureOutcome": "e301438c-0bd0-429c-ab0c-66126501069a",
              "successOutcome": "12e3c42e-e1e7-48b2-9ed7-f95e94049def",
              "timeoutOutcome": "a89b1cbb-add4-4bb3-9643-dff0b952d4fd"
            },
            "displayName": "Push Registration",
            "nodeType": "PushRegistrationNode",
            "x": 378,
            "y": 780.015625
          },
          "87be086b-a54a-47b9-b519-7785e75ea4a6": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "a86952b8-e5e9-48e9-b17d-a555d8d41886"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 805,
            "y": 322
          },
          "a86952b8-e5e9-48e9-b17d-a555d8d41886": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "NOT_REGISTERED": "a89b1cbb-add4-4bb3-9643-dff0b952d4fd",
              "SENT": "fe9db53a-4869-4578-b95e-b57c5a8b517d"
            },
            "displayName": "Push Sender",
            "nodeType": "PushAuthenticationSenderNode",
            "x": 374,
            "y": 316.015625
          },
          "a89b1cbb-add4-4bb3-9643-dff0b952d4fd": {
            "connections": {
              "outcome": "84e309c2-5f4b-44eb-a330-6c61fe576e85"
            },
            "displayName": "Get Authenticator App",
            "nodeType": "GetAuthenticatorAppNode",
            "x": 360,
            "y": 592.015625
          },
          "ed5d5c70-c8bc-4abc-ae32-bf2a4a268431": {
            "connections": {
              "false": "f5a816bf-9453-4eac-9026-a537b69b675d",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Collect Recovery Code",
            "nodeType": "PageNode",
            "x": 815,
            "y": 473.015625
          },
          "f5a816bf-9453-4eac-9026-a537b69b675d": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "065d73ad-0124-4141-b355-f6f3c897dc0e"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 815,
            "y": 769.015625
          },
          "fe9db53a-4869-4578-b95e-b57c5a8b517d": {
            "connections": {
              "DONE": "7c72f519-4d59-486d-ade5-31852c68e5fe",
              "EXITED": "ed5d5c70-c8bc-4abc-ae32-bf2a4a268431"
            },
            "displayName": "Push Wait Node",
            "nodeType": "PushWaitNode",
            "x": 377,
            "y": 107.015625
          }
        },
        "description": "A login journey with MFA using push notifications. This is for the implementation guide.",
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1275,
            "y": 117
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1173,
            "y": 846
          },
          "startNode": {
            "x": 50,
            "y": 250
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "065d73ad-0124-4141-b355-f6f3c897dc0e": {
          "_id": "065d73ad-0124-4141-b355-f6f3c897dc0e",
          "_rev": "-1172708391",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "12e3c42e-e1e7-48b2-9ed7-f95e94049def": {
          "_id": "12e3c42e-e1e7-48b2-9ed7-f95e94049def",
          "_rev": "714495541",
          "_type": {
            "_id": "RecoveryCodeDisplayNode",
            "name": "Recovery Code Display Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "2e9ca26b-1ed0-4afd-aae1-b56d90f08c9f": {
          "_id": "2e9ca26b-1ed0-4afd-aae1-b56d90f08c9f",
          "_rev": "227622816",
          "_type": {
            "_id": "PushResultVerifierNode",
            "name": "Push Result Verifier Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "TRUE",
              "displayName": "Success"
            },
            {
              "id": "FALSE",
              "displayName": "Failure"
            },
            {
              "id": "EXPIRED",
              "displayName": "Expired"
            },
            {
              "id": "WAITING",
              "displayName": "Waiting"
            }
          ]
        },
        "3248493b-5d9e-4b2e-aa95-dabb9f362687": {
          "_id": "3248493b-5d9e-4b2e-aa95-dabb9f362687",
          "_rev": "1723934348",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "741463a3-6689-4297-ad35-e77ab0198ff6": {
          "_id": "741463a3-6689-4297-ad35-e77ab0198ff6",
          "_rev": "-147418556",
          "challengeMessage": {},
          "exitMessage": {},
          "waitingMessage": {},
          "secondsToWait": 5,
          "_type": {
            "_id": "PushWaitNode",
            "name": "Push Wait Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "DONE",
              "displayName": "Done"
            },
            {
              "id": "EXITED",
              "displayName": "Exit"
            }
          ]
        },
        "7c1bc12f-3755-47f8-b4bd-e1ab9ece64d8": {
          "_id": "7c1bc12f-3755-47f8-b4bd-e1ab9ece64d8",
          "_rev": "1756925805",
          "captureFailure": true,
          "contextInfo": false,
          "userMessage": {},
          "pushType": "DEFAULT",
          "customPayload": [],
          "mandatory": true,
          "messageTimeout": 120000,
          "_type": {
            "_id": "PushAuthenticationSenderNode",
            "name": "Push Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "SENT",
              "displayName": "Sent"
            },
            {
              "id": "NOT_REGISTERED",
              "displayName": "Not Registered"
            },
            {
              "id": "FAILURE",
              "displayName": "Failure"
            }
          ]
        },
        "7c72f519-4d59-486d-ade5-31852c68e5fe": {
          "_id": "7c72f519-4d59-486d-ade5-31852c68e5fe",
          "_rev": "-1982548781",
          "_type": {
            "_id": "PushResultVerifierNode",
            "name": "Push Result Verifier Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "TRUE",
              "displayName": "Success"
            },
            {
              "id": "FALSE",
              "displayName": "Failure"
            },
            {
              "id": "EXPIRED",
              "displayName": "Expired"
            },
            {
              "id": "WAITING",
              "displayName": "Waiting"
            }
          ]
        },
        "84e309c2-5f4b-44eb-a330-6c61fe576e85": {
          "_id": "84e309c2-5f4b-44eb-a330-6c61fe576e85",
          "_rev": "1054244499",
          "bgColor": "032b75",
          "generateRecoveryCodes": true,
          "scanQRCodeMessage": {},
          "accountName": "USERNAME",
          "issuer": "ForgeRock",
          "timeout": 60,
          "_type": {
            "_id": "PushRegistrationNode",
            "name": "Push Registration",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "timeoutOutcome",
              "displayName": "Time Out"
            }
          ]
        },
        "87be086b-a54a-47b9-b519-7785e75ea4a6": {
          "_id": "87be086b-a54a-47b9-b519-7785e75ea4a6",
          "_rev": "226973794",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "a86952b8-e5e9-48e9-b17d-a555d8d41886": {
          "_id": "a86952b8-e5e9-48e9-b17d-a555d8d41886",
          "_rev": "-104237774",
          "captureFailure": true,
          "contextInfo": false,
          "userMessage": {},
          "pushType": "DEFAULT",
          "customPayload": [],
          "mandatory": true,
          "messageTimeout": 120000,
          "_type": {
            "_id": "PushAuthenticationSenderNode",
            "name": "Push Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "SENT",
              "displayName": "Sent"
            },
            {
              "id": "NOT_REGISTERED",
              "displayName": "Not Registered"
            },
            {
              "id": "FAILURE",
              "displayName": "Failure"
            }
          ]
        },
        "a89b1cbb-add4-4bb3-9643-dff0b952d4fd": {
          "_id": "a89b1cbb-add4-4bb3-9643-dff0b952d4fd",
          "_rev": "-1919761594",
          "continueLabel": {},
          "message": {},
          "googleLink": "https://play.google.com/store/apps/details?id=com.forgerock.authenticator",
          "appleLink": "https://itunes.apple.com/app/forgerock-authenticator/id1038442926",
          "_type": {
            "_id": "GetAuthenticatorAppNode",
            "name": "Get Authenticator App",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "ed5d5c70-c8bc-4abc-ae32-bf2a4a268431": {
          "_id": "ed5d5c70-c8bc-4abc-ae32-bf2a4a268431",
          "_rev": "-1405242798",
          "nodes": [
            {
              "_id": "cb905a27-5742-46c7-b45d-d951ca8272ad",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Recovery Code"
            },
            {
              "_id": "61c43805-dc91-4396-9a95-f4587c6e6836",
              "nodeType": "RecoveryCodeCollectorDecisionNode",
              "displayName": "Recovery Code Collector Decision"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Recovery Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "f5a816bf-9453-4eac-9026-a537b69b675d": {
          "_id": "f5a816bf-9453-4eac-9026-a537b69b675d",
          "_rev": "-1084461270",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "fe9db53a-4869-4578-b95e-b57c5a8b517d": {
          "_id": "fe9db53a-4869-4578-b95e-b57c5a8b517d",
          "_rev": "1508057244",
          "challengeMessage": {},
          "exitMessage": {},
          "waitingMessage": {},
          "secondsToWait": 5,
          "_type": {
            "_id": "PushWaitNode",
            "name": "Push Wait Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "DONE",
              "displayName": "Done"
            },
            {
              "id": "EXITED",
              "displayName": "Exit"
            }
          ]
        }
      },
      "innerNodes": {
        "cb905a27-5742-46c7-b45d-d951ca8272ad": {
          "_id": "cb905a27-5742-46c7-b45d-d951ca8272ad",
          "_rev": "-1842272243",
          "script": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "61c43805-dc91-4396-9a95-f4587c6e6836": {
          "_id": "61c43805-dc91-4396-9a95-f4587c6e6836",
          "_rev": "-1237830723",
          "recoveryCodeType": "PUSH",
          "_type": {
            "_id": "RecoveryCodeCollectorDecisionNode",
            "name": "Recovery Code Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        }
      },
      "scripts": {
        "86e5bf13-4882-4032-8fb7-f75dd7fa7b82": {
          "_id": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "name": "OOTB Passwordless - Set Invalid Code Error Message Script",
          "description": "Script to set invalid code error message",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: null\\n    - Script Outputs: \\\"invalidCodeErrorMessage\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\n// Set the below error message in shared state, can be displayed on the last UI Node\\n\\ntry {\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"Invalid Code\\\");\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "be50351b-c077-4827-b9aa-3a61a08b30f9": {
          "_id": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "name": "OOTB Passwordless - Validate Recovery Code Input Script",
          "description": "Script to validate Recovery code input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"// /*\\n//   - Data made available by nodes that have already executed are available in the sharedState variable.\\n//   - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n//  */\\n\\n/*\\n    - Script Inputs: \\\"invalidCodeErrorMessage\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\", \\\"invalidCodeErrorMessage\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                    if(submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        const recoveryCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Recovery Code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (recoveryCode && submitBtn) { \\\\n\\\\\\n                            // Set the maxlength attribute to 10 \\\\n\\\\\\n                            recoveryCode.setAttribute('maxlength', 10); \\\\n\\\\\\n                            const enableSubmitBtn = () => { \\\\n\\\\\\n                                // Check input validity before enabling submit button \\\\n\\\\\\n                                const isValidInput = recoveryCode.value.length === 10; \\\\n\\\\\\n                                if (isValidInput) { \\\\n\\\\\\n                                    submitBtn.disabled = false; \\\\n\\\\\\n                                } else { \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }; \\\\n\\\\\\n                            // Revalidate before form submission \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                const isValidInput = recoveryCode.value.length === 10; \\\\n\\\\\\n                                if (!isValidInput) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            recoveryCode.addEventListener('input', enableSubmitBtn); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                       } \\\\n\\\\\\n                      } \\\\n\\\\\\n                      if (document.querySelectorAll('input[data-vv-as=\\\\\\\"Recovery Code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                      else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                      } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n    \\n    if (callbacks.isEmpty()) {                \\n        // Display error message if invalid code entered by user\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        // Request callbacks\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {},
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "CIAM Passwordless - Threat Detection Inner Journey": {
      "tree": {
        "_id": "CIAM Passwordless - Threat Detection Inner Journey",
        "_rev": "-1558879646",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Passwordless\"]"
        },
        "entryNodeId": "45bdca24-8922-4ac8-a986-4b889942ca2b",
        "innerTreeOnly": true,
        "nodes": {
          "0215de41-0769-44f8-beee-41f576b24454": {
            "connections": {
              "EMAIL_NOT_SENT": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "EMAIL_SENT": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Send Suspicious Activity Mail",
            "nodeType": "EmailTemplateNode",
            "x": 1041,
            "y": 319.03125
          },
          "21650fcf-3ea0-4eef-9857-c619b12b3a46": {
            "connections": {
              "false": "3c9b41f2-11e0-4fcb-996e-0929a41a3e5c",
              "true": "75686615-a1c0-47db-8835-faf1dbd14539"
            },
            "displayName": "Account Active Decision",
            "nodeType": "AccountActiveDecisionNode",
            "x": 1067,
            "y": 543.015625
          },
          "3c9b41f2-11e0-4fcb-996e-0929a41a3e5c": {
            "connections": {
              "outcome": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "displayName": "Update P1 Protect Eval Failure",
            "nodeType": "product-PingOneProtectResultNode",
            "x": 1561,
            "y": 999.03125
          },
          "41527a68-2723-472f-81fb-227cbd05437b": {
            "connections": {
              "true": "a7bf6f10-71ed-4392-bb6d-64be0961d267"
            },
            "displayName": "Set UserId and Username For Protect",
            "nodeType": "ScriptedDecisionNode",
            "x": 147,
            "y": 878.015625
          },
          "451f1312-20f9-4833-bb05-d92f41f2256d": {
            "connections": {
              "outcome": "21650fcf-3ea0-4eef-9857-c619b12b3a46"
            },
            "displayName": "Increase Auth Level",
            "nodeType": "ModifyAuthLevelNode",
            "x": 1095,
            "y": 685.015625
          },
          "45bdca24-8922-4ac8-a986-4b889942ca2b": {
            "connections": {
              "eval": "738a0f63-390a-4292-a91e-27583caaf315",
              "init": "5aed8a2f-01c8-420e-91ab-8b99d701a11b"
            },
            "displayName": "P1 Protect Action?",
            "nodeType": "ScriptedDecisionNode",
            "x": 174,
            "y": 456.03125
          },
          "5aed8a2f-01c8-420e-91ab-8b99d701a11b": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "PingOne Protect Initialize",
            "nodeType": "product-PingOneProtectInitializeNode",
            "x": 559,
            "y": 123.03125
          },
          "7208d0f1-591f-48a7-97eb-d7e9991653e6": {
            "connections": {
              "AITM_MITIGATION": "3c9b41f2-11e0-4fcb-996e-0929a41a3e5c",
              "BOT_MITIGATION": "3c9b41f2-11e0-4fcb-996e-0929a41a3e5c",
              "TEMP_EMAIL_MITIGATION": "3c9b41f2-11e0-4fcb-996e-0929a41a3e5c",
              "clientError": "3c9b41f2-11e0-4fcb-996e-0929a41a3e5c",
              "exceed": "3c9b41f2-11e0-4fcb-996e-0929a41a3e5c",
              "failure": "3c9b41f2-11e0-4fcb-996e-0929a41a3e5c",
              "high": "3c9b41f2-11e0-4fcb-996e-0929a41a3e5c",
              "low": "c860a922-c8db-4d89-adf1-d46ddef759e5",
              "medium": "c860a922-c8db-4d89-adf1-d46ddef759e5"
            },
            "displayName": "Reg: PingOne Protect Evaluation",
            "nodeType": "product-PingOneProtectEvaluationNode",
            "x": 573,
            "y": 1180.03125
          },
          "738a0f63-390a-4292-a91e-27583caaf315": {
            "connections": {
              "false": "41527a68-2723-472f-81fb-227cbd05437b",
              "true": "41527a68-2723-472f-81fb-227cbd05437b"
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 176.15625,
            "y": 686.015625
          },
          "75686615-a1c0-47db-8835-faf1dbd14539": {
            "connections": {
              "highRisk": "0215de41-0769-44f8-beee-41f576b24454",
              "low/medRisk": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "newDevice": "bc61a18e-002e-4903-b1fc-efe601cd205f"
            },
            "displayName": "Extract Protect Activity Params",
            "nodeType": "ScriptedDecisionNode",
            "x": 546.7777777777778,
            "y": 317
          },
          "7c07f74e-2ec0-4480-8142-9e912a98e00b": {
            "connections": {
              "outcome": "afe1500d-e027-46b8-b0c5-02d70d1fde7f"
            },
            "displayName": "Disable Account",
            "nodeType": "AccountLockoutNode",
            "x": 582,
            "y": 975.03125
          },
          "a6425374-e86b-4318-8e2d-6fb2b88f30f9": {
            "connections": {
              "false": "3c9b41f2-11e0-4fcb-996e-0929a41a3e5c",
              "true": "7c07f74e-2ec0-4480-8142-9e912a98e00b"
            },
            "displayName": "Account Active Decision",
            "nodeType": "AccountActiveDecisionNode",
            "x": 570,
            "y": 818.015625
          },
          "a7bf6f10-71ed-4392-bb6d-64be0961d267": {
            "connections": {
              "Authentication": "ede49646-49f8-41d9-8f8e-ec559f9cdf91",
              "Registration": "7208d0f1-591f-48a7-97eb-d7e9991653e6"
            },
            "displayName": "Determine Flow Type",
            "nodeType": "ScriptedDecisionNode",
            "x": 172.14285714285714,
            "y": 1043.236607142857
          },
          "afe1500d-e027-46b8-b0c5-02d70d1fde7f": {
            "connections": {
              "EMAIL_NOT_SENT": "3c9b41f2-11e0-4fcb-996e-0929a41a3e5c",
              "EMAIL_SENT": "3c9b41f2-11e0-4fcb-996e-0929a41a3e5c"
            },
            "displayName": "Send Account Disabled Email",
            "nodeType": "EmailTemplateNode",
            "x": 822,
            "y": 959.03125
          },
          "bc61a18e-002e-4903-b1fc-efe601cd205f": {
            "connections": {
              "EMAIL_NOT_SENT": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "EMAIL_SENT": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Notify New Device Detected",
            "nodeType": "EmailTemplateNode",
            "x": 1445.111111111111,
            "y": 499.90625
          },
          "c860a922-c8db-4d89-adf1-d46ddef759e5": {
            "connections": {
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Set Protect Params In Shared State",
            "nodeType": "ScriptedDecisionNode",
            "x": 1728,
            "y": 701.921875
          },
          "ede49646-49f8-41d9-8f8e-ec559f9cdf91": {
            "connections": {
              "AITM_MITIGATION": "a6425374-e86b-4318-8e2d-6fb2b88f30f9",
              "BOT_MITIGATION": "a6425374-e86b-4318-8e2d-6fb2b88f30f9",
              "TEMP_EMAIL_MITIGATION": "a6425374-e86b-4318-8e2d-6fb2b88f30f9",
              "clientError": "3c9b41f2-11e0-4fcb-996e-0929a41a3e5c",
              "exceed": "3c9b41f2-11e0-4fcb-996e-0929a41a3e5c",
              "failure": "3c9b41f2-11e0-4fcb-996e-0929a41a3e5c",
              "high": "451f1312-20f9-4833-bb05-d92f41f2256d",
              "low": "21650fcf-3ea0-4eef-9857-c619b12b3a46",
              "medium": "451f1312-20f9-4833-bb05-d92f41f2256d"
            },
            "displayName": "Auth: PingOne Protect Evaluation",
            "nodeType": "product-PingOneProtectEvaluationNode",
            "x": 554,
            "y": 485.03125
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 2115,
            "y": 547
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 2123,
            "y": 1004
          },
          "startNode": {
            "x": 32,
            "y": 210
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "0215de41-0769-44f8-beee-41f576b24454": {
          "_id": "0215de41-0769-44f8-beee-41f576b24454",
          "_rev": "1190174889",
          "emailTemplateName": "suspiciousActivity",
          "identityAttribute": "userName",
          "emailAttribute": "mail",
          "_type": {
            "_id": "EmailTemplateNode",
            "name": "Email Template Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "EMAIL_SENT",
              "displayName": "Email Sent"
            },
            {
              "id": "EMAIL_NOT_SENT",
              "displayName": "Email Not Sent"
            }
          ]
        },
        "21650fcf-3ea0-4eef-9857-c619b12b3a46": {
          "_id": "21650fcf-3ea0-4eef-9857-c619b12b3a46",
          "_rev": "1192624208",
          "_type": {
            "_id": "AccountActiveDecisionNode",
            "name": "Account Active Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "3c9b41f2-11e0-4fcb-996e-0929a41a3e5c": {
          "_id": "3c9b41f2-11e0-4fcb-996e-0929a41a3e5c",
          "_rev": "1349158008",
          "status": "FAILED",
          "_type": {
            "_id": "product-PingOneProtectResultNode",
            "name": "PingOne Protect Result",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "41527a68-2723-472f-81fb-227cbd05437b": {
          "_id": "41527a68-2723-472f-81fb-227cbd05437b",
          "_rev": "179723004",
          "script": "277c173b-7473-4609-a31a-f0631ae9df4d",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "protectUserId",
            "protectUsername",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id",
            "username"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "451f1312-20f9-4833-bb05-d92f41f2256d": {
          "_id": "451f1312-20f9-4833-bb05-d92f41f2256d",
          "_rev": "1178567741",
          "authLevelIncrement": 1,
          "_type": {
            "_id": "ModifyAuthLevelNode",
            "name": "Modify Auth Level",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "45bdca24-8922-4ac8-a986-4b889942ca2b": {
          "_id": "45bdca24-8922-4ac8-a986-4b889942ca2b",
          "_rev": "-1707708176",
          "script": "26f094e4-9f4b-4f01-8759-28ee8c7cbb8b",
          "outcomes": [
            "init",
            "eval"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "p1ProtectAction"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "init",
              "displayName": "init"
            },
            {
              "id": "eval",
              "displayName": "eval"
            }
          ]
        },
        "5aed8a2f-01c8-420e-91ab-8b99d701a11b": {
          "_id": "5aed8a2f-01c8-420e-91ab-8b99d701a11b",
          "_rev": "-1095193872",
          "deviceAttributesToIgnore": [],
          "enableTrust": false,
          "disableTags": false,
          "behavioralDataCollection": true,
          "consoleLogEnabled": false,
          "deviceKeyRsyncIntervals": 14,
          "disableHub": false,
          "lazyMetadata": false,
          "_type": {
            "_id": "product-PingOneProtectInitializeNode",
            "name": "PingOne Protect Initialize",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "7208d0f1-591f-48a7-97eb-d7e9991653e6": {
          "_id": "7208d0f1-591f-48a7-97eb-d7e9991653e6",
          "_rev": "-1018886824",
          "flowType": "REGISTRATION",
          "pauseBehavioralData": true,
          "storeEvaluateResult": true,
          "deviceSharingType": "SHARED",
          "scoreThreshold": "300",
          "userId": "protectUserId",
          "username": "protectUsername",
          "userType": "EXTERNAL",
          "recommendedActions": [
            "BOT_MITIGATION",
            "AITM_MITIGATION",
            "TEMP_EMAIL_MITIGATION"
          ],
          "_type": {
            "_id": "product-PingOneProtectEvaluationNode",
            "name": "PingOne Protect Evaluation",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "high",
              "displayName": "High"
            },
            {
              "id": "medium",
              "displayName": "Medium"
            },
            {
              "id": "low",
              "displayName": "Low"
            },
            {
              "id": "exceed",
              "displayName": "Exceeds Score Threshold"
            },
            {
              "id": "failure",
              "displayName": "Failure"
            },
            {
              "id": "BOT_MITIGATION",
              "displayName": "BOT_MITIGATION"
            },
            {
              "id": "AITM_MITIGATION",
              "displayName": "AITM_MITIGATION"
            },
            {
              "id": "TEMP_EMAIL_MITIGATION",
              "displayName": "TEMP_EMAIL_MITIGATION"
            },
            {
              "id": "clientError",
              "displayName": "ClientError"
            }
          ]
        },
        "738a0f63-390a-4292-a91e-27583caaf315": {
          "_id": "738a0f63-390a-4292-a91e-27583caaf315",
          "_rev": "-771535809",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "75686615-a1c0-47db-8835-faf1dbd14539": {
          "_id": "75686615-a1c0-47db-8835-faf1dbd14539",
          "_rev": "-1185749770",
          "script": "3ef74e41-015a-4659-80ef-566a5668296f",
          "outcomes": [
            "highRisk",
            "newDevice",
            "low/medRisk"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "PingOneProtectEvaluationNode.RISK",
            "_id"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "highRisk",
              "displayName": "highRisk"
            },
            {
              "id": "newDevice",
              "displayName": "newDevice"
            },
            {
              "id": "low/medRisk",
              "displayName": "low/medRisk"
            }
          ]
        },
        "7c07f74e-2ec0-4480-8142-9e912a98e00b": {
          "_id": "7c07f74e-2ec0-4480-8142-9e912a98e00b",
          "_rev": "-227115878",
          "lockAction": "LOCK",
          "_type": {
            "_id": "AccountLockoutNode",
            "name": "Account Lockout",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "a6425374-e86b-4318-8e2d-6fb2b88f30f9": {
          "_id": "a6425374-e86b-4318-8e2d-6fb2b88f30f9",
          "_rev": "635637013",
          "_type": {
            "_id": "AccountActiveDecisionNode",
            "name": "Account Active Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "a7bf6f10-71ed-4392-bb6d-64be0961d267": {
          "_id": "a7bf6f10-71ed-4392-bb6d-64be0961d267",
          "_rev": "1955106945",
          "script": "26be214b-1567-4632-a3c9-b64437c8fafd",
          "outcomes": [
            "Authentication",
            "Registration"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "flowType"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Authentication",
              "displayName": "Authentication"
            },
            {
              "id": "Registration",
              "displayName": "Registration"
            }
          ]
        },
        "afe1500d-e027-46b8-b0c5-02d70d1fde7f": {
          "_id": "afe1500d-e027-46b8-b0c5-02d70d1fde7f",
          "_rev": "1628179319",
          "emailTemplateName": "accountDisabled",
          "identityAttribute": "userName",
          "emailAttribute": "mail",
          "_type": {
            "_id": "EmailTemplateNode",
            "name": "Email Template Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "EMAIL_SENT",
              "displayName": "Email Sent"
            },
            {
              "id": "EMAIL_NOT_SENT",
              "displayName": "Email Not Sent"
            }
          ]
        },
        "bc61a18e-002e-4903-b1fc-efe601cd205f": {
          "_id": "bc61a18e-002e-4903-b1fc-efe601cd205f",
          "_rev": "-623768721",
          "emailTemplateName": "suspiciousActivity",
          "identityAttribute": "userName",
          "emailAttribute": "mail",
          "_type": {
            "_id": "EmailTemplateNode",
            "name": "Email Template Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "EMAIL_SENT",
              "displayName": "Email Sent"
            },
            {
              "id": "EMAIL_NOT_SENT",
              "displayName": "Email Not Sent"
            }
          ]
        },
        "c860a922-c8db-4d89-adf1-d46ddef759e5": {
          "_id": "c860a922-c8db-4d89-adf1-d46ddef759e5",
          "_rev": "-1979564209",
          "script": "97707ce0-3974-4ee5-8cef-6de83bf0e757",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "objectAttributes",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "PingOneProtectEvaluationNode.RISK",
            "objectAttributes"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "ede49646-49f8-41d9-8f8e-ec559f9cdf91": {
          "_id": "ede49646-49f8-41d9-8f8e-ec559f9cdf91",
          "_rev": "198362556",
          "flowType": "AUTHENTICATION",
          "pauseBehavioralData": true,
          "storeEvaluateResult": true,
          "deviceSharingType": "SHARED",
          "scoreThreshold": "300",
          "userId": "protectUserId",
          "username": "protectUsername",
          "userType": "EXTERNAL",
          "recommendedActions": [
            "BOT_MITIGATION",
            "AITM_MITIGATION",
            "TEMP_EMAIL_MITIGATION"
          ],
          "_type": {
            "_id": "product-PingOneProtectEvaluationNode",
            "name": "PingOne Protect Evaluation",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "high",
              "displayName": "High"
            },
            {
              "id": "medium",
              "displayName": "Medium"
            },
            {
              "id": "low",
              "displayName": "Low"
            },
            {
              "id": "exceed",
              "displayName": "Exceeds Score Threshold"
            },
            {
              "id": "failure",
              "displayName": "Failure"
            },
            {
              "id": "BOT_MITIGATION",
              "displayName": "BOT_MITIGATION"
            },
            {
              "id": "AITM_MITIGATION",
              "displayName": "AITM_MITIGATION"
            },
            {
              "id": "TEMP_EMAIL_MITIGATION",
              "displayName": "TEMP_EMAIL_MITIGATION"
            },
            {
              "id": "clientError",
              "displayName": "ClientError"
            }
          ]
        }
      },
      "innerNodes": {},
      "scripts": {
        "277c173b-7473-4609-a31a-f0631ae9df4d": {
          "_id": "277c173b-7473-4609-a31a-f0631ae9df4d",
          "name": "OOTB Passwordless - Set Protect UserId and Username Script",
          "description": "Script to set userId and username to be used in P1 Protect nodes",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"_id\\\", \\\"username\\\"\\n    - Script Outputs: \\\"protectUserId\\\", \\\"protectUsername\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    var protectUserId = nodeState.get(\\\"_id\\\");\\n    var protectUsername = nodeState.get(\\\"username\\\");\\n    \\n    if(protectUserId === null) protectUserId = protectUsername;\\n    \\n    nodeState.putShared(\\\"protectUserId\\\", protectUserId);\\n    nodeState.putShared(\\\"protectUsername\\\", protectUsername);\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "26f094e4-9f4b-4f01-8759-28ee8c7cbb8b": {
          "_id": "26f094e4-9f4b-4f01-8759-28ee8c7cbb8b",
          "name": "OOTB Passwordless - P1 Protect Action Script",
          "description": "Script to get action to be taken in Threat Detection Journey",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"p1ProtectAction\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"init\\\", \\\"eval\\\"\\n*/\\n\\ntry {\\n    // Only two state variables are expected to be put in shared state in the main journey: \\n    // \\\"init\\\" -> To initialize the P1 Protect to collect Risk SDK signals & \\n    // \\\"eval\\\" -> To send the Risk SDK signals to protect and evalute them\\n    var p1ProtectAction = nodeState.get(\\\"p1ProtectAction\\\");\\n    \\n    if(p1ProtectAction === \\\"init\\\") action.goTo(\\\"init\\\");\\n    else action.goTo(\\\"eval\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "3ef74e41-015a-4659-80ef-566a5668296f": {
          "_id": "3ef74e41-015a-4659-80ef-566a5668296f",
          "name": "OOTB Passwordless - P1 Protect Extract Parameters From Risk Evaluation Script",
          "description": "Script to extract parameters from P1 Protect Risk Evaluation",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"PingOneProtectEvaluationNode.RISK\\\", \\\"_id\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"highRisk\\\", \\\"newDevice\\\", \\\"low/medRisk\\\"\\n*/\\n\\ntry {\\n    function capitalizeFirstLetter(string) {\\n        return string\\n        .split(' ')                   // Split the string into an array of words\\n        .map(word => \\n            word.charAt(0).toUpperCase() + word.slice(1)\\n        )                             // Capitalize the first letter of each word\\n        .join(' ');                   // Join the array back into a single string\\n    }\\n    \\n    var rawResponse = nodeState.get(\\\"PingOneProtectEvaluationNode.RISK\\\");\\n    \\n    var riskLevel = rawResponse.result.level;\\n    \\n    // Get & Set the protect activity variables in user's profile (to be used in notification templates)\\n    var protectActivityCity = rawResponse.details.city;\\n    var protectActivityState = rawResponse.details.state;\\n    var protectDeviceOS = rawResponse.details.device.os.name;\\n    \\n    protectActivityCity = capitalizeFirstLetter(protectActivityCity);\\n    protectActivityState = capitalizeFirstLetter(protectActivityState);\\n    \\n    \\n    // Get the userId from nodestate\\n    var userId = nodeState.get(\\\"_id\\\");\\n    \\n    // Update the protectActvityCity attribute of user\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{\\\"operation\\\":\\\"replace\\\", \\\"field\\\":\\\"/custom_protectActivityCity\\\", \\\"value\\\":protectActivityCity}]);\\n    \\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{\\\"operation\\\":\\\"replace\\\", \\\"field\\\":\\\"/custom_protectActivityState\\\", \\\"value\\\":protectActivityState}]);\\n    \\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{\\\"operation\\\":\\\"replace\\\", \\\"field\\\":\\\"/custom_protectDeviceOS\\\", \\\"value\\\":protectDeviceOS}]);\\n    \\n    if(riskLevel === \\\"HIGH\\\") {\\n        outcome = \\\"highRisk\\\";\\n        action.goTo(outcome);\\n    }\\n    \\n    // Check if new device is found\\n    if(rawResponse.details.newDevice.status === \\\"UNKNOWN_DEVICE\\\") outcome = \\\"newDevice\\\";\\n    else outcome = \\\"low/medRisk\\\";\\n    \\n    // Go to outcome\\n    action.goTo(outcome);\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "26be214b-1567-4632-a3c9-b64437c8fafd": {
          "_id": "26be214b-1567-4632-a3c9-b64437c8fafd",
          "name": "OOTB Passwordless - P1 Protect Extract Flow Type Script",
          "description": "Script to extract flow type for Threat Detection Journey",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"flowType\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"Registration\\\", \\\"Authentication\\\"\\n*/\\n\\n// FlowType is required to be set in shared state in the parent journey\\n// Currently Reg & Authn flowTypes are supported in this script\\n// In future the list will increase to support types like Account Recovery, Authorization etc.\\ntry {\\n    if(nodeState.get('flowType') === \\\"Registration\\\") outcome = \\\"Registration\\\";\\n    else outcome = \\\"Authentication\\\";\\n    // Go to outcome\\n    action.goTo(outcome);    \\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "97707ce0-3974-4ee5-8cef-6de83bf0e757": {
          "_id": "97707ce0-3974-4ee5-8cef-6de83bf0e757",
          "name": "OOTB Passwordless - Set Protect Activity Params In Shared State Script",
          "description": "Script to set protect activity params in shared state ",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"objectAttributes\\\", \\\"PingOneProtectEvaluationNode.RISK\\\"\\n    - Script Outputs: \\\"objectAttributes\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    function capitalizeFirstLetter(string) {\\n        return string\\n        .split(' ')                   // Split the string into an array of words\\n        .map(word => \\n            word.charAt(0).toUpperCase() + word.slice(1)\\n        )                             // Capitalize the first letter of each word\\n        .join(' ');                   // Join the array back into a single string\\n    }\\n    \\n    var attributes = nodeState.get(\\\"objectAttributes\\\");\\n    \\n    var rawResponse = nodeState.get(\\\"PingOneProtectEvaluationNode.RISK\\\");\\n    \\n    \\n    // Get & Set the protect activity variables in shared state\\n    var protectActivityCity = rawResponse.details.city;\\n    var protectActivityState = rawResponse.details.state;\\n    var protectDeviceOS = rawResponse.details.device.os.name;\\n    \\n    protectActivityCity = capitalizeFirstLetter(protectActivityCity);\\n    protectActivityState = capitalizeFirstLetter(protectActivityState);\\n    \\n    if (attributes) {\\n      attributes.put(\\\"custom_protectActivityCity\\\", protectActivityCity);\\n      attributes.put(\\\"custom_protectActivityState\\\", protectActivityState);\\n      attributes.put(\\\"custom_protectDeviceOS\\\", protectDeviceOS);\\n      nodeState.putShared(\\\"objectAttributes\\\", attributes);\\n    }\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {
        "suspiciousActivity": {
          "_id": "emailTemplate/suspiciousActivity",
          "advancedEditor": true,
          "defaultLocale": "en",
          "description": "Fired when PingOne Protect detects some risk associated with the account",
          "displayName": "Suspicious Activity",
          "enabled": true,
          "from": "",
          "html": {
            "en": ""
          },
          "message": {
            "en": "<div style=\"display:block;width:400px;margin:0 auto;font-family:sans-serif;border:1px solid #c5c5c5;padding:30px 20px;text-align:center\">\n  <img src=\"https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png\" alt=\"Company Logo\" style=\"height:65px;margin-bottom:10px\" />\n  <div style=\"display:block\">\n    <div style=\"display:inline-block;width:40px;height:40px;border-radius:50%;background-color:red;color:white;font-size:24px;line-height:40px;text-align:center\">!</div>\n    <h2 style=\"margin-top:10px;margin-bottom:10px\">Sign-in attempt detected</h2>\n    <p>{{object.mail}}</p>\n    <hr style=\"width:100%;margin-top:20px;margin-bottom:25px;border:none;border-top:1px solid #c5c5c5\" />\n  </div>\n  <div style=\"text-align:left\">\n    <p id=\"alertText\">Someone just attempted to sign onto your account nearby {{object.custom_protectActivityCity}}, {{object.custom_protectActivityState}}. If this was not you, please consider resetting your password or contact support. Otherwise, ignore.</p>\n    <p>Thanks,\n        \n      \n      <br />The ${Brand Name} team\n        \n    \n    </p>\n  </div>\n</div>"
          },
          "mimeType": "text/html",
          "styles": "body {\n   background-color: #324054;\n   color: #455469;\n   padding: 60px;\n   text-align: center \n}\n a {\n   text-decoration: none;\n   color: #109cf1;\n}\n .content {\n   background-color: #fff;\n   border-radius: 4px;\n   margin: 0 auto;\n   padding: 48px;\n   width: 235px \n}\n",
          "subject": {
            "en": "Security alert"
          },
          "templateId": "suspiciousActivity"
        },
        "accountDisabled": {
          "_id": "emailTemplate/accountDisabled",
          "advancedEditor": true,
          "defaultLocale": "en",
          "description": "Fired when PingOne Protect detects critical risk associated with the account",
          "displayName": "Account Disabled",
          "enabled": true,
          "from": "",
          "html": {
            "en": ""
          },
          "message": {
            "en": "<div style=\"display:block;width:400px;margin:0 auto;font-family:sans-serif;border:1px solid #c5c5c5;padding:30px 20px;text-align:center\">\n  <img src=\"https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png\" alt=\"Company Logo\" style=\"height:65px;margin-bottom:10px\" />\n  <div style=\"display:block\">\n    <div style=\"display:inline-block;width:40px;height:40px;border-radius:50%;background-color:red;color:white;font-size:24px;line-height:40px;text-align:center\">!</div>\n    <h2 style=\"margin-top:10px;margin-bottom:10px\">Sign-in Attempt was blocked</h2>\n    <p>{{object.mail}}</p>\n    <hr style=\"width:100%;margin-top:20px;margin-bottom:25px;border:none;border-top:1px solid #c5c5c5\" />\n  </div>\n  <div style=\"text-align:left\">\n    <p id=\"alertText\">Someone just attempted to sign onto your account nearby {{object.custom_protectActivityCity}}, {{object.custom_protectActivityState}}. We have disabled the account for your security. If this was you, please contact support.</p>\n    <p>Thanks,\n        \n      \n      \n      <br />The ${Brand Name} team\n        \n    \n    \n    </p>\n  </div>\n</div>"
          },
          "mimeType": "text/html",
          "styles": "body {\n   background-color: #324054;\n   color: #455469;\n   padding: 60px;\n   text-align: center \n}\n a {\n   text-decoration: none;\n   color: #109cf1;\n}\n .content {\n   background-color: #fff;\n   border-radius: 4px;\n   margin: 0 auto;\n   padding: 48px;\n   width: 235px \n}\n",
          "subject": {
            "en": "Critical security alert"
          },
          "templateId": "accountDisabled"
        }
      },
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "CIAM Passwordless - MFA Authentication Inner Journey": {
      "tree": {
        "_id": "CIAM Passwordless - MFA Authentication Inner Journey",
        "_rev": "1469652043",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Passwordless\"]"
        },
        "entryNodeId": "1e3b3e7b-6369-4e93-90c4-0a1a3eb4fe8e",
        "innerTreeOnly": true,
        "nodes": {
          "0cddebc6-4898-4953-a556-d7d0bee7ef97": {
            "x": 230,
            "y": 862.015625,
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "EmailSuspendNode",
            "displayName": "Email Magic Link"
          },
          "17347684-25ef-4f8d-994c-ab15239207b9": {
            "x": 573,
            "y": 2646.015625,
            "connections": {
              "NOT_REGISTERED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "SENT": "17f0ffbe-a932-4b03-9ae5-7d3236f49933"
            },
            "nodeType": "PushAuthenticationSenderNode",
            "displayName": "Push Sender"
          },
          "17f0ffbe-a932-4b03-9ae5-7d3236f49933": {
            "x": 903,
            "y": 2450.015625,
            "connections": {
              "EXPIRED": "574f9415-1e65-44e8-b55c-dfce5a67739d",
              "FALSE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "TRUE": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "WAITING": "a5a5b771-d817-4eb2-a0ff-f13b075e9582"
            },
            "nodeType": "PushResultVerifierNode",
            "displayName": "Push Result Verifier Node"
          },
          "1e3b3e7b-6369-4e93-90c4-0a1a3eb4fe8e": {
            "x": 220,
            "y": 468.421875,
            "connections": {
              "EMAIL": "251c04ca-29ec-4066-b413-2a4dd18d76e7",
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "FIDO2": "c93a59cf-d11e-4226-a319-b81680dc2c0d",
              "Magic Link": "0cddebc6-4898-4953-a556-d7d0bee7ef97",
              "OATH": "a0deb635-6f46-4b20-a27c-49a049447fac",
              "PUSH": "17347684-25ef-4f8d-994c-ab15239207b9",
              "SMS": "214e78f3-7add-4003-a03c-baa2a41022bb",
              "VOICE": "c2b2baf8-eae5-4a2d-8b7e-58abf4c2a0cf"
            },
            "nodeType": "PageNode",
            "displayName": "Select Auth Device"
          },
          "214e78f3-7add-4003-a03c-baa2a41022bb": {
            "x": 544,
            "y": 149.015625,
            "connections": {
              "outcome": "43135148-a45d-4014-927b-9edf3b1ac52b"
            },
            "nodeType": "OneTimePasswordGeneratorNode",
            "displayName": "HOTP Generator"
          },
          "251c04ca-29ec-4066-b413-2a4dd18d76e7": {
            "x": 545,
            "y": 36.015625,
            "connections": {
              "outcome": "a549ec56-8d59-4403-a63e-528e60e92b84"
            },
            "nodeType": "OneTimePasswordGeneratorNode",
            "displayName": "HOTP Generator"
          },
          "2d03899a-a519-4203-aa8b-db2bffc41c08": {
            "x": 572,
            "y": 1578.015625,
            "connections": {
              "false": "cc80b168-ec88-461f-a979-d4b0fd7ea56e",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "PageNode",
            "displayName": "Enter Recovery Code"
          },
          "3f24d3b6-d816-485d-b1d4-8c6ce814392a": {
            "x": 553,
            "y": 699.015625,
            "connections": {
              "false": "bd94ff11-3a8a-40f4-befe-e5ae6231004d",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "PageNode",
            "displayName": "Enter Recovery Code"
          },
          "43135148-a45d-4014-927b-9edf3b1ac52b": {
            "x": 827,
            "y": 158.015625,
            "connections": {
              "outcome": "c79bb2de-f517-4ad2-905e-1f730ef40e44"
            },
            "nodeType": "OneTimePasswordSmsSenderNode",
            "displayName": "OTP SMS Sender"
          },
          "574f9415-1e65-44e8-b55c-dfce5a67739d": {
            "x": 571,
            "y": 2475.015625,
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "17347684-25ef-4f8d-994c-ab15239207b9"
            },
            "nodeType": "RetryLimitDecisionNode",
            "displayName": "Retry Limit Decision"
          },
          "5824c3b7-6d36-49fc-aa53-79a80bf3a6c8": {
            "x": 820,
            "y": 255.03125,
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "5bcf20be-6805-4352-aa46-3745050772b6"
            },
            "nodeType": "VerifyAuthSenderNode",
            "displayName": "Twilio Verify Sender"
          },
          "59406b68-cd87-4652-9318-7469750ce452": {
            "x": 1088,
            "y": 563.015625,
            "connections": {
              "true": "5bcf20be-6805-4352-aa46-3745050772b6"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set Invalid Code Error Message"
          },
          "5bcf20be-6805-4352-aa46-3745050772b6": {
            "x": 1099.984375,
            "y": 254.015625,
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "false": "9043ce40-4f14-4358-8a51-d9d9c56ee287",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "PageNode",
            "displayName": "Collect OTP"
          },
          "652c4dfe-7f6b-42c4-99f4-e5e2da40c4f3": {
            "x": 533,
            "y": 1270.015625,
            "connections": {
              "true": "2d03899a-a519-4203-aa8b-db2bffc41c08"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set Invalid Code Error Message"
          },
          "6851561c-1c72-4cd5-8208-ca6256e2bcb6": {
            "x": 1379,
            "y": 15.015625,
            "connections": {
              "true": "c79bb2de-f517-4ad2-905e-1f730ef40e44"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set Invalid Code Error Message"
          },
          "86041eff-fe8c-4ef2-bc27-b19c4b1ad170": {
            "x": 1206,
            "y": 2467.015625,
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "ec74129a-fe04-40e2-b190-6f1c47be3f19"
            },
            "nodeType": "RetryLimitDecisionNode",
            "displayName": "Retry Limit Decision"
          },
          "9043ce40-4f14-4358-8a51-d9d9c56ee287": {
            "x": 1402,
            "y": 330.015625,
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "59406b68-cd87-4652-9318-7469750ce452"
            },
            "nodeType": "RetryLimitDecisionNode",
            "displayName": "Retry Limit Decision"
          },
          "a0deb635-6f46-4b20-a27c-49a049447fac": {
            "x": 573,
            "y": 1845.015625,
            "connections": {
              "failureOutcome": "ecf4501e-a5c6-4ff0-9f03-3589cf714571",
              "notRegisteredOutcome": "e301438c-0bd0-429c-ab0c-66126501069a",
              "recoveryCodeOutcome": "2d03899a-a519-4203-aa8b-db2bffc41c08",
              "successOutcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "PageNode",
            "displayName": "Enter Verification Code"
          },
          "a549ec56-8d59-4403-a63e-528e60e92b84": {
            "x": 830,
            "y": 47.015625,
            "connections": {
              "outcome": "c79bb2de-f517-4ad2-905e-1f730ef40e44"
            },
            "nodeType": "OneTimePasswordSmtpSenderNode",
            "displayName": "OTP Email Sender"
          },
          "a5a5b771-d817-4eb2-a0ff-f13b075e9582": {
            "x": 925,
            "y": 2648.015625,
            "connections": {
              "DONE": "17f0ffbe-a932-4b03-9ae5-7d3236f49933",
              "EXITED": "b8eb1ceb-7e6d-42da-9d63-c0e22cf32e6a"
            },
            "nodeType": "PushWaitNode",
            "displayName": "Push Wait Node"
          },
          "a9ec0af9-fbee-4ea1-8052-c53afc87c89c": {
            "x": 527.75,
            "y": 1142.01953125,
            "connections": {
              "true": "3f24d3b6-d816-485d-b1d4-8c6ce814392a"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set Invalid Code Error Message"
          },
          "b8eb1ceb-7e6d-42da-9d63-c0e22cf32e6a": {
            "x": 1201,
            "y": 2627.015625,
            "connections": {
              "false": "86041eff-fe8c-4ef2-bc27-b19c4b1ad170",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "PageNode",
            "displayName": "Enter Recovery Code"
          },
          "bd94ff11-3a8a-40f4-befe-e5ae6231004d": {
            "x": 563,
            "y": 973.515625,
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "a9ec0af9-fbee-4ea1-8052-c53afc87c89c"
            },
            "nodeType": "RetryLimitDecisionNode",
            "displayName": "Retry Limit Decision"
          },
          "c2b2baf8-eae5-4a2d-8b7e-58abf4c2a0cf": {
            "x": 547,
            "y": 250.03125,
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "False": "e301438c-0bd0-429c-ab0c-66126501069a",
              "True": "5824c3b7-6d36-49fc-aa53-79a80bf3a6c8"
            },
            "nodeType": "VerifyAuthIdentifierNode",
            "displayName": "Twilio Identifier"
          },
          "c79bb2de-f517-4ad2-905e-1f730ef40e44": {
            "x": 1100,
            "y": 13.015625,
            "connections": {
              "false": "f59a5f11-3ad8-404b-b769-0c7ecc20b689",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "PageNode",
            "displayName": "Collect OTP"
          },
          "c93a59cf-d11e-4226-a319-b81680dc2c0d": {
            "x": 530,
            "y": 444.015625,
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "failure": "e301438c-0bd0-429c-ab0c-66126501069a",
              "noDevice": "e301438c-0bd0-429c-ab0c-66126501069a",
              "recoveryCode": "3f24d3b6-d816-485d-b1d4-8c6ce814392a",
              "success": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "unsupported": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "nodeType": "WebAuthnAuthenticationNode",
            "displayName": "WebAuthn Authentication Node"
          },
          "cc80b168-ec88-461f-a979-d4b0fd7ea56e": {
            "x": 574.7142857142858,
            "y": 1407.950892857143,
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "652c4dfe-7f6b-42c4-99f4-e5e2da40c4f3"
            },
            "nodeType": "RetryLimitDecisionNode",
            "displayName": "Retry Limit Decision"
          },
          "e0bb898b-82f2-4482-9c92-1db344b2784c": {
            "x": 535,
            "y": 2349.015625,
            "connections": {
              "true": "a0deb635-6f46-4b20-a27c-49a049447fac"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set Invalid Code Error Message"
          },
          "ec74129a-fe04-40e2-b190-6f1c47be3f19": {
            "x": 1170,
            "y": 2331.015625,
            "connections": {
              "true": "b8eb1ceb-7e6d-42da-9d63-c0e22cf32e6a"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set Invalid Code Error Message"
          },
          "ecf4501e-a5c6-4ff0-9f03-3589cf714571": {
            "x": 576,
            "y": 2176.515625,
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "e0bb898b-82f2-4482-9c92-1db344b2784c"
            },
            "nodeType": "RetryLimitDecisionNode",
            "displayName": "Retry Limit Decision"
          },
          "f59a5f11-3ad8-404b-b769-0c7ecc20b689": {
            "x": 1404,
            "y": 133,
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "6851561c-1c72-4cd5-8208-ca6256e2bcb6"
            },
            "nodeType": "RetryLimitDecisionNode",
            "displayName": "Retry Limit Decision"
          }
        },
        "staticNodes": {
          "startNode": {
            "x": 50,
            "y": 250
          },
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1628,
            "y": 1175
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1243,
            "y": 1175
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "0cddebc6-4898-4953-a556-d7d0bee7ef97": {
          "_id": "0cddebc6-4898-4953-a556-d7d0bee7ef97",
          "_rev": "-2103265484",
          "emailSuspendMessage": {
            "en": "An email has been sent to the address you entered. Click the link in that email to proceed."
          },
          "emailTemplateName": "magicLinkTemplate",
          "identityAttribute": "userName",
          "emailAttribute": "mail",
          "objectLookup": true,
          "_type": {
            "_id": "EmailSuspendNode",
            "name": "Email Suspend Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "17347684-25ef-4f8d-994c-ab15239207b9": {
          "_id": "17347684-25ef-4f8d-994c-ab15239207b9",
          "_rev": "1948038936",
          "captureFailure": false,
          "contextInfo": false,
          "userMessage": {},
          "pushType": "DEFAULT",
          "customPayload": [],
          "mandatory": true,
          "messageTimeout": 120000,
          "_type": {
            "_id": "PushAuthenticationSenderNode",
            "name": "Push Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "SENT",
              "displayName": "Sent"
            },
            {
              "id": "NOT_REGISTERED",
              "displayName": "Not Registered"
            }
          ]
        },
        "17f0ffbe-a932-4b03-9ae5-7d3236f49933": {
          "_id": "17f0ffbe-a932-4b03-9ae5-7d3236f49933",
          "_rev": "745962943",
          "_type": {
            "_id": "PushResultVerifierNode",
            "name": "Push Result Verifier Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "TRUE",
              "displayName": "Success"
            },
            {
              "id": "FALSE",
              "displayName": "Failure"
            },
            {
              "id": "EXPIRED",
              "displayName": "Expired"
            },
            {
              "id": "WAITING",
              "displayName": "Waiting"
            }
          ]
        },
        "1e3b3e7b-6369-4e93-90c4-0a1a3eb4fe8e": {
          "_id": "1e3b3e7b-6369-4e93-90c4-0a1a3eb4fe8e",
          "_rev": "1250016681",
          "nodes": [
            {
              "_id": "b6f188ce-24c9-436c-b7ef-85574961e73d",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Select MFA Device"
            }
          ],
          "pageDescription": {
            "en": "Select an MFA method to use to sign on to your account."
          },
          "pageHeader": {
            "en": "Select Authentication Method"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "EMAIL",
              "displayName": "EMAIL"
            },
            {
              "id": "SMS",
              "displayName": "SMS"
            },
            {
              "id": "VOICE",
              "displayName": "VOICE"
            },
            {
              "id": "FIDO2",
              "displayName": "FIDO2"
            },
            {
              "id": "OATH",
              "displayName": "OATH"
            },
            {
              "id": "PUSH",
              "displayName": "PUSH"
            },
            {
              "id": "Magic Link",
              "displayName": "Magic Link"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "214e78f3-7add-4003-a03c-baa2a41022bb": {
          "_id": "214e78f3-7add-4003-a03c-baa2a41022bb",
          "_rev": "-1688660881",
          "length": 6,
          "_type": {
            "_id": "OneTimePasswordGeneratorNode",
            "name": "HOTP Generator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "251c04ca-29ec-4066-b413-2a4dd18d76e7": {
          "_id": "251c04ca-29ec-4066-b413-2a4dd18d76e7",
          "_rev": "-603410692",
          "length": 6,
          "_type": {
            "_id": "OneTimePasswordGeneratorNode",
            "name": "HOTP Generator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "2d03899a-a519-4203-aa8b-db2bffc41c08": {
          "_id": "2d03899a-a519-4203-aa8b-db2bffc41c08",
          "_rev": "872716665",
          "nodes": [
            {
              "_id": "1be91d7f-64ec-40a6-a8fd-3137b3f7293b",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Recovery Code"
            },
            {
              "_id": "1546caab-bcef-449a-8f74-bc3232cc4730",
              "nodeType": "RecoveryCodeCollectorDecisionNode",
              "displayName": "OATH Recovery Code Collector Decision"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Recovery Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "3f24d3b6-d816-485d-b1d4-8c6ce814392a": {
          "_id": "3f24d3b6-d816-485d-b1d4-8c6ce814392a",
          "_rev": "-1042665870",
          "nodes": [
            {
              "_id": "38c3d2d4-1dbb-4717-a36d-85e9bb0de896",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Recovery Code"
            },
            {
              "_id": "577a7dcd-c6a8-47aa-85e2-df92917e70d7",
              "nodeType": "RecoveryCodeCollectorDecisionNode",
              "displayName": "WEB_AUTHN Recovery Code Collector Decision"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Recovery Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "43135148-a45d-4014-927b-9edf3b1ac52b": {
          "_id": "43135148-a45d-4014-927b-9edf3b1ac52b",
          "_rev": "269148646",
          "secretLabelIdentifier": "demo",
          "hostName": "demo",
          "hostPort": 0,
          "mobilePhoneAttributeName": "telephoneNumber",
          "smsSubject": {
            "en": "AIC: New authentication request"
          },
          "password": null,
          "username": "demo",
          "fromEmailAddress": "demo",
          "smsContent": {
            "en": "Your passcode is: {{OTP}}"
          },
          "smsGatewayImplementationClass": "com.sun.identity.authentication.modules.hotp.DefaultSMSGatewayImpl",
          "sslOption": "SSL",
          "_type": {
            "_id": "OneTimePasswordSmsSenderNode",
            "name": "OTP SMS Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "574f9415-1e65-44e8-b55c-dfce5a67739d": {
          "_id": "574f9415-1e65-44e8-b55c-dfce5a67739d",
          "_rev": "-1518009103",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "5824c3b7-6d36-49fc-aa53-79a80bf3a6c8": {
          "_id": "5824c3b7-6d36-49fc-aa53-79a80bf3a6c8",
          "_rev": "1979143481",
          "accountSID": "demo",
          "authToken": null,
          "channel": "CALL",
          "identifierSharedState": "userIdentifier",
          "serviceSID": "demo",
          "requestIdentifier": false,
          "_type": {
            "_id": "VerifyAuthSenderNode",
            "name": "Twilio Verify Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        },
        "59406b68-cd87-4652-9318-7469750ce452": {
          "_id": "59406b68-cd87-4652-9318-7469750ce452",
          "_rev": "783231144",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "5bcf20be-6805-4352-aa46-3745050772b6": {
          "_id": "5bcf20be-6805-4352-aa46-3745050772b6",
          "_rev": "1158875081",
          "nodes": [
            {
              "_id": "fcd5b279-2cf1-49d3-8770-3c50836df6aa",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate OTP"
            },
            {
              "_id": "4d9c3165-6927-4cce-9df4-869df9d9af2b",
              "nodeType": "VerifyAuthCollectorDecisionNode",
              "displayName": "Twilio Verify Collector Decision"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Passcode"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        },
        "652c4dfe-7f6b-42c4-99f4-e5e2da40c4f3": {
          "_id": "652c4dfe-7f6b-42c4-99f4-e5e2da40c4f3",
          "_rev": "382200696",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "6851561c-1c72-4cd5-8208-ca6256e2bcb6": {
          "_id": "6851561c-1c72-4cd5-8208-ca6256e2bcb6",
          "_rev": "-398486886",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "86041eff-fe8c-4ef2-bc27-b19c4b1ad170": {
          "_id": "86041eff-fe8c-4ef2-bc27-b19c4b1ad170",
          "_rev": "-615604037",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "9043ce40-4f14-4358-8a51-d9d9c56ee287": {
          "_id": "9043ce40-4f14-4358-8a51-d9d9c56ee287",
          "_rev": "270918314",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "a0deb635-6f46-4b20-a27c-49a049447fac": {
          "_id": "a0deb635-6f46-4b20-a27c-49a049447fac",
          "_rev": "-1568311424",
          "nodes": [
            {
              "_id": "77fd02b9-665c-483d-809b-27d05ec354a4",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Verification Code"
            },
            {
              "_id": "86f6a4fc-600a-4ea2-940d-e66bf4452459",
              "nodeType": "OathTokenVerifierNode",
              "displayName": "OATH Token Verifier"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Verification Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            },
            {
              "id": "recoveryCodeOutcome",
              "displayName": "Recovery Code"
            }
          ]
        },
        "a549ec56-8d59-4403-a63e-528e60e92b84": {
          "_id": "a549ec56-8d59-4403-a63e-528e60e92b84",
          "_rev": "-400382949",
          "secretLabelIdentifier": "demo",
          "hostName": "demo",
          "hostPort": 465,
          "emailContent": {
            "en": "Your passcode is: {{OTP}}"
          },
          "emailSubject": {
            "en": "AIC: New authentication request"
          },
          "emailAttribute": "mail",
          "password": null,
          "username": "demo",
          "fromEmailAddress": "demo",
          "smsGatewayImplementationClass": "com.sun.identity.authentication.modules.hotp.DefaultSMSGatewayImpl",
          "sslOption": "SSL",
          "_type": {
            "_id": "OneTimePasswordSmtpSenderNode",
            "name": "OTP Email Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "a5a5b771-d817-4eb2-a0ff-f13b075e9582": {
          "_id": "a5a5b771-d817-4eb2-a0ff-f13b075e9582",
          "_rev": "-758951327",
          "challengeMessage": {},
          "exitMessage": {},
          "waitingMessage": {},
          "secondsToWait": 5,
          "_type": {
            "_id": "PushWaitNode",
            "name": "Push Wait Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "DONE",
              "displayName": "Done"
            },
            {
              "id": "EXITED",
              "displayName": "Exit"
            }
          ]
        },
        "a9ec0af9-fbee-4ea1-8052-c53afc87c89c": {
          "_id": "a9ec0af9-fbee-4ea1-8052-c53afc87c89c",
          "_rev": "1821248628",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "b8eb1ceb-7e6d-42da-9d63-c0e22cf32e6a": {
          "_id": "b8eb1ceb-7e6d-42da-9d63-c0e22cf32e6a",
          "_rev": "897587516",
          "nodes": [
            {
              "_id": "5fe20a1f-28ed-401d-998b-0f01875d0333",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Recovery Code"
            },
            {
              "_id": "05598fd0-69c1-4269-ab08-bdeb9fadb55a",
              "nodeType": "RecoveryCodeCollectorDecisionNode",
              "displayName": "PUSH Recovery Code Collector Decision"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Recovery Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "bd94ff11-3a8a-40f4-befe-e5ae6231004d": {
          "_id": "bd94ff11-3a8a-40f4-befe-e5ae6231004d",
          "_rev": "-151911145",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "c2b2baf8-eae5-4a2d-8b7e-58abf4c2a0cf": {
          "_id": "c2b2baf8-eae5-4a2d-8b7e-58abf4c2a0cf",
          "_rev": "-1299667145",
          "identifierAttribute": "telephoneNumber",
          "identifierSharedState": "userIdentifier",
          "_type": {
            "_id": "VerifyAuthIdentifierNode",
            "name": "Twilio Identifier",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "True",
              "displayName": "True"
            },
            {
              "id": "False",
              "displayName": "False"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "c79bb2de-f517-4ad2-905e-1f730ef40e44": {
          "_id": "c79bb2de-f517-4ad2-905e-1f730ef40e44",
          "_rev": "-1156904273",
          "nodes": [
            {
              "_id": "3e91f412-eafd-4bf4-bd17-d5588ccab5b9",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate OTP"
            },
            {
              "_id": "2e343b36-3a81-40d4-9693-9748639cf97c",
              "nodeType": "OneTimePasswordCollectorDecisionNode",
              "displayName": "OTP Collector Decision"
            }
          ],
          "pageDescription": {
            "en": "Enter the passcode you received."
          },
          "pageHeader": {
            "en": "Enter Passcode"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "c93a59cf-d11e-4226-a319-b81680dc2c0d": {
          "_id": "c93a59cf-d11e-4226-a319-b81680dc2c0d",
          "_rev": "-1218384209",
          "requiresResidentKey": false,
          "asScript": true,
          "origins": [],
          "userVerificationRequirement": "PREFERRED",
          "isRecoveryCodeAllowed": true,
          "timeout": 60,
          "_type": {
            "_id": "WebAuthnAuthenticationNode",
            "name": "WebAuthn Authentication Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "unsupported",
              "displayName": "Unsupported"
            },
            {
              "id": "noDevice",
              "displayName": "No Device Registered"
            },
            {
              "id": "success",
              "displayName": "Success"
            },
            {
              "id": "failure",
              "displayName": "Failure"
            },
            {
              "id": "error",
              "displayName": "Client Error"
            },
            {
              "id": "recoveryCode",
              "displayName": "Recovery Code"
            }
          ]
        },
        "cc80b168-ec88-461f-a979-d4b0fd7ea56e": {
          "_id": "cc80b168-ec88-461f-a979-d4b0fd7ea56e",
          "_rev": "-227074032",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "e0bb898b-82f2-4482-9c92-1db344b2784c": {
          "_id": "e0bb898b-82f2-4482-9c92-1db344b2784c",
          "_rev": "-698766138",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "ec74129a-fe04-40e2-b190-6f1c47be3f19": {
          "_id": "ec74129a-fe04-40e2-b190-6f1c47be3f19",
          "_rev": "1499310162",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "ecf4501e-a5c6-4ff0-9f03-3589cf714571": {
          "_id": "ecf4501e-a5c6-4ff0-9f03-3589cf714571",
          "_rev": "-1296663006",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "f59a5f11-3ad8-404b-b769-0c7ecc20b689": {
          "_id": "f59a5f11-3ad8-404b-b769-0c7ecc20b689",
          "_rev": "1235906359",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        }
      },
      "innerNodes": {
        "b6f188ce-24c9-436c-b7ef-85574961e73d": {
          "_id": "b6f188ce-24c9-436c-b7ef-85574961e73d",
          "_rev": "1364900406",
          "script": "6291a5b7-a262-4127-a5df-8ea238da4796",
          "outcomes": [
            "EMAIL",
            "SMS",
            "VOICE",
            "FIDO2",
            "OATH",
            "PUSH",
            "Magic Link",
            "Error"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id",
            "ciam_allowedMFATypes",
            "ciam_magicLinkEnabled"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "EMAIL",
              "displayName": "EMAIL"
            },
            {
              "id": "SMS",
              "displayName": "SMS"
            },
            {
              "id": "VOICE",
              "displayName": "VOICE"
            },
            {
              "id": "FIDO2",
              "displayName": "FIDO2"
            },
            {
              "id": "OATH",
              "displayName": "OATH"
            },
            {
              "id": "PUSH",
              "displayName": "PUSH"
            },
            {
              "id": "Magic Link",
              "displayName": "Magic Link"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "1be91d7f-64ec-40a6-a8fd-3137b3f7293b": {
          "_id": "1be91d7f-64ec-40a6-a8fd-3137b3f7293b",
          "_rev": "-1106372213",
          "script": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "1546caab-bcef-449a-8f74-bc3232cc4730": {
          "_id": "1546caab-bcef-449a-8f74-bc3232cc4730",
          "_rev": "59897380",
          "recoveryCodeType": "OATH",
          "_type": {
            "_id": "RecoveryCodeCollectorDecisionNode",
            "name": "Recovery Code Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "38c3d2d4-1dbb-4717-a36d-85e9bb0de896": {
          "_id": "38c3d2d4-1dbb-4717-a36d-85e9bb0de896",
          "_rev": "1347352180",
          "script": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "577a7dcd-c6a8-47aa-85e2-df92917e70d7": {
          "_id": "577a7dcd-c6a8-47aa-85e2-df92917e70d7",
          "_rev": "-1553546536",
          "recoveryCodeType": "WEB_AUTHN",
          "_type": {
            "_id": "RecoveryCodeCollectorDecisionNode",
            "name": "Recovery Code Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "fcd5b279-2cf1-49d3-8770-3c50836df6aa": {
          "_id": "fcd5b279-2cf1-49d3-8770-3c50836df6aa",
          "_rev": "-1032398500",
          "script": "6ce5e10e-76a0-4172-b0cd-c2dcaeb7ef92",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "4d9c3165-6927-4cce-9df4-869df9d9af2b": {
          "_id": "4d9c3165-6927-4cce-9df4-869df9d9af2b",
          "_rev": "-801113580",
          "hideCode": true,
          "identifierSharedState": "userIdentifier",
          "_type": {
            "_id": "VerifyAuthCollectorDecisionNode",
            "name": "Twilio Verify Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        },
        "77fd02b9-665c-483d-809b-27d05ec354a4": {
          "_id": "77fd02b9-665c-483d-809b-27d05ec354a4",
          "_rev": "686830139",
          "script": "07e3c04a-1cf0-42e9-ab80-c9c06634c530",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "86f6a4fc-600a-4ea2-940d-e66bf4452459": {
          "_id": "86f6a4fc-600a-4ea2-940d-e66bf4452459",
          "_rev": "-2129060937",
          "totpTimeInterval": 30,
          "maximumAllowedClockDrift": 5,
          "totpTimeSteps": 2,
          "totpHashAlgorithm": "HMAC_SHA1",
          "isRecoveryCodeAllowed": true,
          "algorithm": "TOTP",
          "hotpWindowSize": 100,
          "_type": {
            "_id": "OathTokenVerifierNode",
            "name": "OATH Token Verifier",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            },
            {
              "id": "recoveryCodeOutcome",
              "displayName": "Recovery Code"
            }
          ]
        },
        "5fe20a1f-28ed-401d-998b-0f01875d0333": {
          "_id": "5fe20a1f-28ed-401d-998b-0f01875d0333",
          "_rev": "-836234938",
          "script": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "05598fd0-69c1-4269-ab08-bdeb9fadb55a": {
          "_id": "05598fd0-69c1-4269-ab08-bdeb9fadb55a",
          "_rev": "705957165",
          "recoveryCodeType": "PUSH",
          "_type": {
            "_id": "RecoveryCodeCollectorDecisionNode",
            "name": "Recovery Code Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "3e91f412-eafd-4bf4-bd17-d5588ccab5b9": {
          "_id": "3e91f412-eafd-4bf4-bd17-d5588ccab5b9",
          "_rev": "524922290",
          "script": "6ce5e10e-76a0-4172-b0cd-c2dcaeb7ef92",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "oneTimePassword",
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "2e343b36-3a81-40d4-9693-9748639cf97c": {
          "_id": "2e343b36-3a81-40d4-9693-9748639cf97c",
          "_rev": "-385176785",
          "passwordExpiryTime": 5,
          "_type": {
            "_id": "OneTimePasswordCollectorDecisionNode",
            "name": "OTP Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        }
      },
      "scripts": {
        "86e5bf13-4882-4032-8fb7-f75dd7fa7b82": {
          "_id": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "name": "OOTB Passwordless - Set Invalid Code Error Message Script",
          "description": "Script to set invalid code error message",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: null\\n    - Script Outputs: \\\"invalidCodeErrorMessage\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\n// Set the below error message in shared state, can be displayed on the last UI Node\\n\\ntry {\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"Invalid Code\\\");\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "6291a5b7-a262-4127-a5df-8ea238da4796": {
          "_id": "6291a5b7-a262-4127-a5df-8ea238da4796",
          "name": "OOTB Passwordless - Get User's Registered MFA Devices Script",
          "description": "Script to fetch user's registered MFA methods",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"_id\\\", \\\"ciam_allowedMFATypes\\\", \\\"ciam_magicLinkEnabled\\\"\\n    - Script Outputs: \\\"usableMFADevices\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\", \\\"Error\\\"\\n*/\\n\\ntry {\\n    // Retrieve user ID and allowed MFA devices\\n    var userId = nodeState.get(\\\"_id\\\");\\n    var allowedMFAMethods = nodeState.get(\\\"ciam_allowedMFATypes\\\");\\n    \\n    var mfaMapping = {\\n        \\\"EMAIL\\\": \\\"allowEmail\\\",\\n        \\\"SMS\\\": \\\"allowSMS\\\",\\n        \\\"VOICE\\\": \\\"allowVoice\\\",\\n        \\\"OATH\\\": \\\"allowOATH\\\",\\n        \\\"PUSH\\\": \\\"allowPush\\\",\\n        \\\"FIDO2\\\": \\\"allowFIDO2\\\"\\n    };\\n    \\n    var allowEmail = false, allowSMS = false, allowVoice = false, allowOATH = false, allowPush = false, allowFIDO2 = false;\\n    \\n    allowedMFAMethods.forEach(device => {\\n        if (mfaMapping[device]) {\\n            this[mfaMapping[device]] = true;\\n        }\\n    });\\n    \\n    var mfaDevicesObj = openidm.read(\\\"managed/alpha_user/\\\" + userId, null, [\\\"custom_mfaDevices\\\"]);\\n    var mfaDevices = (mfaDevicesObj && mfaDevicesObj.custom_mfaDevices) ? mfaDevicesObj.custom_mfaDevices : [];\\n    \\n    // By default returned mfaDevices is of Object type so values are parsed in a new array\\n    var usableMFADevices = [];\\n    \\n    // Store MFA devices and additional option in shared state    \\n    mfaDevices.forEach(device => {\\n        usableMFADevices.push(device);\\n    });\\n    \\n    usableMFADevices = usableMFADevices.filter(device =>\\n        (device === \\\"SMS\\\" && allowSMS) ||\\n        (device === \\\"EMAIL\\\" && allowEmail) ||\\n        (device === \\\"VOICE\\\" && allowVoice) ||\\n        (device === \\\"OATH\\\" && allowOATH) ||\\n        (device === \\\"PUSH\\\" && allowPush) ||\\n        (device === \\\"FIDO2\\\" && allowFIDO2)                               \\n    );\\n\\n    // Index of latest registered MFA device\\n    var idxLatestMFADevice = usableMFADevices ? usableMFADevices.length - 1 : -1;\\n    \\n    // Add Magic Link, if enabled by Admin\\n    var magicLinkEnabled = nodeState.get(\\\"ciam_magicLinkEnabled\\\");\\n    if(magicLinkEnabled) usableMFADevices.push(\\\"Magic Link\\\");\\n    \\n    // nodeState.putShared(\\\"usableMFADevices\\\", usableMFADevices);\\n    \\n    // Handle callback logic\\n    if (callbacks.isEmpty()) {\\n      callbacksBuilder.choiceCallback(\\\"Select an MFA device\\\", usableMFADevices, idxLatestMFADevice, false);\\n    } else {\\n      // Callbacks returned from browser, save selected choice\\n      var index = callbacks.getChoiceCallbacks().get(0)[0];\\n      var selectedDevice = usableMFADevices[index] || null;\\n    \\n      if (!selectedDevice) {\\n        nodeState.putShared(\\\"errorMessage\\\", \\\"No registered MFA device found\\\");\\n        // Go to error  \\n        action.goTo(\\\"Error\\\");\\n      } else {\\n        // Go to authentication for that selected MFA device\\n        action.goTo(selectedDevice);\\n      }\\n    }\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "be50351b-c077-4827-b9aa-3a61a08b30f9": {
          "_id": "be50351b-c077-4827-b9aa-3a61a08b30f9",
          "name": "OOTB Passwordless - Validate Recovery Code Input Script",
          "description": "Script to validate Recovery code input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"// /*\\n//   - Data made available by nodes that have already executed are available in the sharedState variable.\\n//   - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n//  */\\n\\n/*\\n    - Script Inputs: \\\"invalidCodeErrorMessage\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\", \\\"invalidCodeErrorMessage\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                    if(submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        const recoveryCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Recovery Code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (recoveryCode && submitBtn) { \\\\n\\\\\\n                            // Set the maxlength attribute to 10 \\\\n\\\\\\n                            recoveryCode.setAttribute('maxlength', 10); \\\\n\\\\\\n                            const enableSubmitBtn = () => { \\\\n\\\\\\n                                // Check input validity before enabling submit button \\\\n\\\\\\n                                const isValidInput = recoveryCode.value.length === 10; \\\\n\\\\\\n                                if (isValidInput) { \\\\n\\\\\\n                                    submitBtn.disabled = false; \\\\n\\\\\\n                                } else { \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }; \\\\n\\\\\\n                            // Revalidate before form submission \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                const isValidInput = recoveryCode.value.length === 10; \\\\n\\\\\\n                                if (!isValidInput) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            recoveryCode.addEventListener('input', enableSubmitBtn); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                       } \\\\n\\\\\\n                      } \\\\n\\\\\\n                      if (document.querySelectorAll('input[data-vv-as=\\\\\\\"Recovery Code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                      else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                      } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n    \\n    if (callbacks.isEmpty()) {                \\n        // Display error message if invalid code entered by user\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        // Request callbacks\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "6ce5e10e-76a0-4172-b0cd-c2dcaeb7ef92": {
          "_id": "6ce5e10e-76a0-4172-b0cd-c2dcaeb7ef92",
          "name": "OOTB Passwordless - Validate OTP Input Script",
          "description": "Script to validate OTP input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"oneTimePassword\\\", \\\"invalidCodeErrorMessage\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\", \\\"invalidCodeErrorMessage\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\n// Note: If HOTP Genrator node is used in prior, \\\"oneTimePassword\\\" will be a transient state property, make sure to make it available in script inputs. \\n// If the OTP is generated by Twilio nodes, the default length is set to 6 and only digits are considered. Modify this if necessary.\\n\\ntry {\\n    function validateInput(otpLength) {\\n        return String(\\\" \\\\n\\\\\\n                    var otpLength = \\\" + otpLength + \\\" \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                    if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                    // Validate the passcode \\\\n\\\\\\n                    function validateCode() { \\\\n\\\\\\n                        const passcode = document.querySelectorAll('input[data-vv-as=\\\\\\\"One Time Password\\\\\\\"]')[0] || document.querySelectorAll('input[data-vv-as=\\\\\\\"Code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (passcode) { \\\\n\\\\\\n                            // Set input properties to prevent user tampering \\\\n\\\\\\n                            passcode.setAttribute('maxlength', otpLength); \\\\n\\\\\\n                            passcode.setAttribute('pattern', '[0-9]{' + otpLength + '}'); \\\\n\\\\\\n                            passcode.setAttribute('inputmode', 'numeric'); \\\\n\\\\\\n                            // Check if the input is exactly 6 digits long and numeric \\\\n\\\\\\n                            const isValidCode = new RegExp('^[0-9]{' + otpLength + '}$').test(passcode.value); \\\\n\\\\\\n                            submitBtn.disabled = !isValidCode; \\\\n\\\\\\n                            return isValidCode; \\\\n\\\\\\n                        } \\\\n\\\\\\n                        return false; \\\\n\\\\\\n                    }; \\\\n\\\\\\n                    \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        const passcode = document.querySelectorAll('input[data-vv-as=\\\\\\\"One Time Password\\\\\\\"]')[0] || document.querySelectorAll('input[data-vv-as=\\\\\\\"Code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (passcode && submitBtn) { \\\\n\\\\\\n                            passcode.addEventListener('input', validateCode); \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                if (!validateCode()) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    // For HOTP and Twilio OTP collector nodes, if either of the element is present, initialize validation \\\\n\\\\\\n                    if (document.querySelectorAll('input[data-vv-as=\\\\\\\"One Time Password\\\\\\\"]')[0] || document.querySelectorAll('input[data-vv-as=\\\\\\\"Code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                    else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                    } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n\\n    // Get \\\"oneTimePassword\\\" shared in transient state by the HOTP Generator node or default it to 6\\n    var otpLength = nodeState.get(\\\"oneTimePassword\\\") ? nodeState.get(\\\"oneTimePassword\\\").length : 6;\\n    \\n    if (callbacks.isEmpty()) {\\n        // Display error message if invalid code entered by user\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        // Request callbacks\\n        callbacksBuilder.scriptTextOutputCallback(validateInput(otpLength));\\n    }\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "07e3c04a-1cf0-42e9-ab80-c9c06634c530": {
          "_id": "07e3c04a-1cf0-42e9-ab80-c9c06634c530",
          "name": "OOTB Passwordless - Validate Verification Code Input Script",
          "description": "Script to validate verification code input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n*/\\n\\n/*\\n    - Script Inputs: \\\"invalidCodeErrorMessage\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\", \\\"invalidCodeErrorMessage\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    // Validate the verification code \\\\n\\\\\\n                    function validateCode() { \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        const verificationCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (verificationCode) { \\\\n\\\\\\n                            // Set input properties to prevent user tampering \\\\n\\\\\\n                            verificationCode.setAttribute('maxlength', '6'); \\\\n\\\\\\n                            verificationCode.setAttribute('pattern', '[0-9]{6}'); \\\\n\\\\\\n                            verificationCode.setAttribute('inputmode', 'numeric'); \\\\n\\\\\\n                            // Check if the input is exactly 6 digits long and numeric \\\\n\\\\\\n                            const isValidCode = /^[0-9]{6}$/.test(verificationCode.value); \\\\n\\\\\\n                            submitBtn.disabled = !isValidCode; \\\\n\\\\\\n                            return isValidCode; \\\\n\\\\\\n                        } \\\\n\\\\\\n                        return false; \\\\n\\\\\\n                    }; \\\\n\\\\\\n                    \\\\n\\\\\\n                    function preventEnterKeyDefault(event) { \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (event.key === 'Enter' && !validateCode()) { \\\\n\\\\\\n                            event.preventDefault(); \\\\n\\\\\\n                            if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        // Auto-submit and go to 'Not Registered' path if method is not registered for the user, in that case it is assumed that button will be of type submit from Page Node \\\\n\\\\\\n                        const nextBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (nextBtn) { \\\\n\\\\\\n                            nextBtn.style.visibility='hidden'; \\\\n\\\\\\n                            nextBtn.click(); \\\\n\\\\\\n                        } \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                        const verificationCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (verificationCode && submitBtn) { \\\\n\\\\\\n                            verificationCode.addEventListener('input', validateCode); \\\\n\\\\\\n                            verificationCode.addEventListener('keypress', preventEnterKeyDefault); \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                if (!validateCode()) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    // If both elements are present, initialize validation \\\\n\\\\\\n                    if (document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0] && document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                    else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                    } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n    \\n    if (callbacks.isEmpty()) {\\n        // Display error message if invalid code entered by user\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        // Request callbacks\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {
        "magicLinkTemplate": {
          "_id": "emailTemplate/magicLinkTemplate",
          "advancedEditor": true,
          "defaultLocale": "en",
          "description": "To authenticate with email address ",
          "displayName": "Magic Link Template",
          "enabled": true,
          "from": "",
          "html": {
            "en": "",
            "fr": ""
          },
          "message": {
            "en": "<div style=\"display:block;text-align:center;font-family:sans-serif;border:1px solid #c5c5c5;width:400px;padding:30px 20px\">\n  <img src=\"https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png\" alt=\"Company Logo\" style=\"height:65px;margin-bottom:10px\" />\n  <h1>Sign On Request</h1>\n  <div style=\"margin-top:20px;margin-bottom:25px\">\n    <p>Please click the link below to authenticate. </p>\n    <a href=\"{{object.resumeURI}}\" style=\"font-size:14pt\">Complete Sign On</a>\n  </div>\n</div>",
            "fr": "<html>\n  <head></head>\n  <body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\">\n    <h3>Ceci est votre mail d'inscription.</h3>\n    <p>\n      <a href=\"{{object.resumeURI}}\" style=\"text-decoration: none; color: #109cf1;\">Lien de vérification email</a>\n    </p>\n  </body>\n</html>"
          },
          "mimeType": "text/html",
          "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
          "subject": {
            "en": "Sign On Request",
            "fr": "Créer un nouveau compte"
          },
          "templateId": "magicLinkTemplate"
        }
      },
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "CIAM Passwordless - MFA Device Registration Inner Journey": {
      "tree": {
        "_id": "CIAM Passwordless - MFA Device Registration Inner Journey",
        "_rev": "-1673057575",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Passwordless\"]"
        },
        "entryNodeId": "67338a63-c9f0-4cdd-a88c-79f16a61fde0",
        "innerTreeOnly": true,
        "nodes": {
          "07897f6a-53a2-4b81-a82c-599b63375241": {
            "x": 1726,
            "y": 775.015625,
            "connections": {
              "false": "18d9213e-300b-47b4-8c59-9fd6bfad42f9",
              "true": "e1fac123-edd8-469c-9ca6-b1c12fdd9711"
            },
            "nodeType": "PageNode",
            "displayName": "Collect OTP"
          },
          "0894076e-c65a-422b-93c8-dc57a9e688a8": {
            "x": 1347,
            "y": 1517.015625,
            "connections": {
              "true": "aff8737e-22e4-47e2-90c0-38b33bff708c"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set Invalid Code Error Message"
          },
          "0de710bc-e690-4dcc-bbd3-26631730269d": {
            "x": 1002,
            "y": 384.015625,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e1fac123-edd8-469c-9ca6-b1c12fdd9711"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "Register Push MFA"
          },
          "18d9213e-300b-47b4-8c59-9fd6bfad42f9": {
            "x": 1727,
            "y": 1033.015625,
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "a6417d64-7a0b-4cb7-9ade-37d6315321ab"
            },
            "nodeType": "RetryLimitDecisionNode",
            "displayName": "Retry Limit Decision"
          },
          "27a9add8-a0df-4e55-a754-f3fe5e72bff6": {
            "x": 1036.46875,
            "y": 1465.03125,
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "fd51b535-fac9-47ad-a74f-552af8479dcf"
            },
            "nodeType": "PatchObjectNode",
            "displayName": "Update User"
          },
          "4080b791-8875-4868-9b8b-042790050494": {
            "x": 999,
            "y": 209.015625,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e1fac123-edd8-469c-9ca6-b1c12fdd9711"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "Register OATH MFA"
          },
          "4ac69cd7-cb67-4e61-b03b-61545b859c04": {
            "x": 601.40625,
            "y": 805.03125,
            "connections": {
              "false": "5a4e5f99-b8f0-4fd4-ba30-a458d5486276",
              "true": "be081b64-3976-455b-bb7a-b96ccd9e3ba0"
            },
            "nodeType": "AttributePresentDecisionNode",
            "displayName": "Check If Phone No. Is Present"
          },
          "4b0d7019-3c94-4de6-886c-02ace9eedd39": {
            "x": 1729,
            "y": 1497.015625,
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "0894076e-c65a-422b-93c8-dc57a9e688a8"
            },
            "nodeType": "RetryLimitDecisionNode",
            "displayName": "Retry Limit Decision"
          },
          "4eda8e45-ac99-4767-b0a2-b9fc029bdfb5": {
            "x": 2469,
            "y": 630.015625,
            "connections": {
              "EMAIL_NOT_SENT": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "EMAIL_SENT": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "EmailTemplateNode",
            "displayName": "Notify User On Email"
          },
          "5a4e5f99-b8f0-4fd4-ba30-a458d5486276": {
            "x": 645,
            "y": 1013.015625,
            "connections": {
              "outcome": "b4beab46-1310-4e86-9a3c-4a0ecf8e4309"
            },
            "nodeType": "PageNode",
            "displayName": "Collect Phone Number"
          },
          "5aba363d-0d24-486e-b1ea-a0bb39ed8eac": {
            "x": 1383,
            "y": 845.03125,
            "connections": {
              "outcome": "07897f6a-53a2-4b81-a82c-599b63375241"
            },
            "nodeType": "OneTimePasswordSmsSenderNode",
            "displayName": "OTP SMS Sender"
          },
          "5bcb713e-ba9a-43a4-b5f7-e5c4ac057bb2": {
            "x": 1015,
            "y": 1227.03125,
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "False": "e301438c-0bd0-429c-ab0c-66126501069a",
              "True": "7eab37ed-c5e4-4c4b-8ff7-23cc9b566952"
            },
            "nodeType": "VerifyAuthLookupNode",
            "displayName": "Twilio Verify Lookup"
          },
          "66ad8ba3-888d-41cf-a1fe-7bd642743abf": {
            "x": 233,
            "y": 442.421875,
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "FIDO2": "afb5c466-6087-4a23-bc3a-c1f3108e65ba",
              "OATH": "4080b791-8875-4868-9b8b-042790050494",
              "OATH+PUSH": "a4fba46a-cde3-482c-9bae-76e00bbc71f9",
              "PUSH": "0de710bc-e690-4dcc-bbd3-26631730269d",
              "SMS": "4ac69cd7-cb67-4e61-b03b-61545b859c04",
              "VOICE": "fd51b535-fac9-47ad-a74f-552af8479dcf"
            },
            "nodeType": "PageNode",
            "displayName": "Select Authn Device"
          },
          "67338a63-c9f0-4cdd-a88c-79f16a61fde0": {
            "x": 198.0625,
            "y": 797.421875,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "66ad8ba3-888d-41cf-a1fe-7bd642743abf"
            },
            "nodeType": "IdentifyExistingUserNode",
            "displayName": "Get User Id In Shared State"
          },
          "7eab37ed-c5e4-4c4b-8ff7-23cc9b566952": {
            "x": 1382,
            "y": 1236.03125,
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "aff8737e-22e4-47e2-90c0-38b33bff708c"
            },
            "nodeType": "VerifyAuthSenderNode",
            "displayName": "Twilio Verify Sender"
          },
          "a4fba46a-cde3-482c-9bae-76e00bbc71f9": {
            "x": 996,
            "y": 600.015625,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e1fac123-edd8-469c-9ca6-b1c12fdd9711"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "Register OATH & PUSH"
          },
          "a6417d64-7a0b-4cb7-9ade-37d6315321ab": {
            "x": 1693.888888888889,
            "y": 677.6840277777778,
            "connections": {
              "true": "07897f6a-53a2-4b81-a82c-599b63375241"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set Invalid Code Error Message"
          },
          "acf64f99-641d-459a-b458-7365d7252e9e": {
            "x": 643,
            "y": 1457.015625,
            "connections": {
              "outcome": "27a9add8-a0df-4e55-a754-f3fe5e72bff6"
            },
            "nodeType": "PageNode",
            "displayName": "Collect Phone Number"
          },
          "afb5c466-6087-4a23-bc3a-c1f3108e65ba": {
            "x": 970,
            "y": 63.03125,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e1fac123-edd8-469c-9ca6-b1c12fdd9711"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "Register WebAuthn Method"
          },
          "aff8737e-22e4-47e2-90c0-38b33bff708c": {
            "x": 1729,
            "y": 1181.015625,
            "connections": {
              "false": "4b0d7019-3c94-4de6-886c-02ace9eedd39",
              "true": "e1fac123-edd8-469c-9ca6-b1c12fdd9711",
              "error": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "nodeType": "PageNode",
            "displayName": "Collect OTP"
          },
          "b4beab46-1310-4e86-9a3c-4a0ecf8e4309": {
            "x": 1015,
            "y": 1018.015625,
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "be081b64-3976-455b-bb7a-b96ccd9e3ba0"
            },
            "nodeType": "PatchObjectNode",
            "displayName": "Update User"
          },
          "be081b64-3976-455b-bb7a-b96ccd9e3ba0": {
            "x": 1007,
            "y": 838.03125,
            "connections": {
              "outcome": "5aba363d-0d24-486e-b1ea-a0bb39ed8eac"
            },
            "nodeType": "OneTimePasswordGeneratorNode",
            "displayName": "HOTP Generator"
          },
          "e1fac123-edd8-469c-9ca6-b1c12fdd9711": {
            "x": 2072,
            "y": 622.421875,
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "4eda8e45-ac99-4767-b0a2-b9fc029bdfb5"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Update MFA Devices Object"
          },
          "fd51b535-fac9-47ad-a74f-552af8479dcf": {
            "x": 638,
            "y": 1230.03125,
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "False": "acf64f99-641d-459a-b458-7365d7252e9e",
              "True": "5bcb713e-ba9a-43a4-b5f7-e5c4ac057bb2"
            },
            "nodeType": "VerifyAuthIdentifierNode",
            "displayName": "Twilio Identifier"
          }
        },
        "staticNodes": {
          "startNode": {
            "x": 70,
            "y": 347.5
          },
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 2883,
            "y": 663.3333333333333
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1435,
            "y": 1030.6666666666667
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "07897f6a-53a2-4b81-a82c-599b63375241": {
          "_id": "07897f6a-53a2-4b81-a82c-599b63375241",
          "_rev": "1768265053",
          "nodes": [
            {
              "_id": "68e6ee11-3ca4-467b-96ff-d13ce30edb3f",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate OTP"
            },
            {
              "_id": "d3b970b6-0f1e-4c4e-9488-fda16bd9c711",
              "nodeType": "OneTimePasswordCollectorDecisionNode",
              "displayName": "OTP Collector Decision"
            }
          ],
          "pageDescription": {
            "en": "Enter the passcode you received."
          },
          "pageHeader": {
            "en": "Enter Passcode"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "0894076e-c65a-422b-93c8-dc57a9e688a8": {
          "_id": "0894076e-c65a-422b-93c8-dc57a9e688a8",
          "_rev": "-1369528747",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "0de710bc-e690-4dcc-bbd3-26631730269d": {
          "_id": "0de710bc-e690-4dcc-bbd3-26631730269d",
          "_rev": "-1400417342",
          "tree": "CIAM Passwordless - Push MFA Method Registration Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "18d9213e-300b-47b4-8c59-9fd6bfad42f9": {
          "_id": "18d9213e-300b-47b4-8c59-9fd6bfad42f9",
          "_rev": "477585474",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "27a9add8-a0df-4e55-a754-f3fe5e72bff6": {
          "_id": "27a9add8-a0df-4e55-a754-f3fe5e72bff6",
          "_rev": "-2136416144",
          "identityResource": "managed/alpha_user",
          "patchAsObject": false,
          "ignoredFields": [],
          "identityAttribute": "userName",
          "_type": {
            "_id": "PatchObjectNode",
            "name": "Patch Object",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "PATCHED",
              "displayName": "Patched"
            },
            {
              "id": "FAILURE",
              "displayName": "Failed"
            }
          ]
        },
        "4080b791-8875-4868-9b8b-042790050494": {
          "_id": "4080b791-8875-4868-9b8b-042790050494",
          "_rev": "733252526",
          "tree": "CIAM Passwordless - OATH MFA Method Registration Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "4ac69cd7-cb67-4e61-b03b-61545b859c04": {
          "_id": "4ac69cd7-cb67-4e61-b03b-61545b859c04",
          "_rev": "-69667069",
          "presentAttribute": "telephoneNumber",
          "identityAttribute": "userName",
          "_type": {
            "_id": "AttributePresentDecisionNode",
            "name": "Attribute Present Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "4b0d7019-3c94-4de6-886c-02ace9eedd39": {
          "_id": "4b0d7019-3c94-4de6-886c-02ace9eedd39",
          "_rev": "-172932143",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "4eda8e45-ac99-4767-b0a2-b9fc029bdfb5": {
          "_id": "4eda8e45-ac99-4767-b0a2-b9fc029bdfb5",
          "_rev": "-1316084774",
          "emailTemplateName": "deviceRegistration",
          "identityAttribute": "userName",
          "emailAttribute": "mail",
          "_type": {
            "_id": "EmailTemplateNode",
            "name": "Email Template Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "EMAIL_SENT",
              "displayName": "Email Sent"
            },
            {
              "id": "EMAIL_NOT_SENT",
              "displayName": "Email Not Sent"
            }
          ]
        },
        "5a4e5f99-b8f0-4fd4-ba30-a458d5486276": {
          "_id": "5a4e5f99-b8f0-4fd4-ba30-a458d5486276",
          "_rev": "-1163932071",
          "nodes": [
            {
              "_id": "ac60f0e0-7fdc-41ee-bb0a-5715bb351266",
              "nodeType": "AttributeCollectorNode",
              "displayName": "Collect Phone Number"
            }
          ],
          "pageDescription": {
            "en": "Enter your mobile phone number, including the country code, to receive authentication passcodes."
          },
          "pageHeader": {
            "en": "Text Message"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "5aba363d-0d24-486e-b1ea-a0bb39ed8eac": {
          "_id": "5aba363d-0d24-486e-b1ea-a0bb39ed8eac",
          "_rev": "933148994",
          "secretLabelIdentifier": "demo",
          "hostName": "demo",
          "hostPort": 465,
          "mobilePhoneAttributeName": "telephoneNumber",
          "smsSubject": {
            "en": "AIC: New authentication request"
          },
          "password": null,
          "username": "demo",
          "fromEmailAddress": "demo",
          "smsContent": {
            "en": "Your passcode is: {{OTP}}"
          },
          "smsGatewayImplementationClass": "com.sun.identity.authentication.modules.hotp.DefaultSMSGatewayImpl",
          "sslOption": "SSL",
          "_type": {
            "_id": "OneTimePasswordSmsSenderNode",
            "name": "OTP SMS Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "5bcb713e-ba9a-43a4-b5f7-e5c4ac057bb2": {
          "_id": "5bcb713e-ba9a-43a4-b5f7-e5c4ac057bb2",
          "_rev": "1119490658",
          "accountSID": "demo",
          "authToken": null,
          "identifierSharedState": "userIdentifier",
          "_type": {
            "_id": "VerifyAuthLookupNode",
            "name": "Twilio Verify Lookup",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "True",
              "displayName": "True"
            },
            {
              "id": "False",
              "displayName": "False"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "66ad8ba3-888d-41cf-a1fe-7bd642743abf": {
          "_id": "66ad8ba3-888d-41cf-a1fe-7bd642743abf",
          "_rev": "1975912199",
          "nodes": [
            {
              "_id": "ee142fe2-bcc2-408c-9213-f5bb36498509",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Get Allowed MFA methods"
            }
          ],
          "pageDescription": {
            "en": "Select an MFA method to use to sign on to your account."
          },
          "pageHeader": {
            "en": "Select Method"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "FIDO2",
              "displayName": "FIDO2"
            },
            {
              "id": "OATH",
              "displayName": "OATH"
            },
            {
              "id": "PUSH",
              "displayName": "PUSH"
            },
            {
              "id": "OATH+PUSH",
              "displayName": "OATH+PUSH"
            },
            {
              "id": "SMS",
              "displayName": "SMS"
            },
            {
              "id": "VOICE",
              "displayName": "VOICE"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "67338a63-c9f0-4cdd-a88c-79f16a61fde0": {
          "_id": "67338a63-c9f0-4cdd-a88c-79f16a61fde0",
          "_rev": "998523706",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "7eab37ed-c5e4-4c4b-8ff7-23cc9b566952": {
          "_id": "7eab37ed-c5e4-4c4b-8ff7-23cc9b566952",
          "_rev": "-1440343788",
          "accountSID": "demo",
          "authToken": null,
          "channel": "CALL",
          "identifierSharedState": "userIdentifier",
          "serviceSID": "demo",
          "requestIdentifier": false,
          "_type": {
            "_id": "VerifyAuthSenderNode",
            "name": "Twilio Verify Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        },
        "a4fba46a-cde3-482c-9bae-76e00bbc71f9": {
          "_id": "a4fba46a-cde3-482c-9bae-76e00bbc71f9",
          "_rev": "-1409112127",
          "tree": "CIAM Passwordless - Combined OATH And PUSH MFA Methods Registration Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "a6417d64-7a0b-4cb7-9ade-37d6315321ab": {
          "_id": "a6417d64-7a0b-4cb7-9ade-37d6315321ab",
          "_rev": "1131294761",
          "script": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "acf64f99-641d-459a-b458-7365d7252e9e": {
          "_id": "acf64f99-641d-459a-b458-7365d7252e9e",
          "_rev": "1546065471",
          "nodes": [
            {
              "_id": "539e1506-c794-409f-bb24-7c6529b4f1a3",
              "nodeType": "AttributeCollectorNode",
              "displayName": "Collect Phone Number"
            }
          ],
          "pageDescription": {
            "en": "Enter your mobile phone number, including the country code, to receive authentication passcodes."
          },
          "pageHeader": {
            "en": "Voice"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "afb5c466-6087-4a23-bc3a-c1f3108e65ba": {
          "_id": "afb5c466-6087-4a23-bc3a-c1f3108e65ba",
          "_rev": "2116167920",
          "tree": "CIAM Passwordless - WebAuthn MFA Method Registration Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "aff8737e-22e4-47e2-90c0-38b33bff708c": {
          "_id": "aff8737e-22e4-47e2-90c0-38b33bff708c",
          "_rev": "-1262677078",
          "nodes": [
            {
              "_id": "65d3864c-ac21-41b5-8863-1ef8a0525801",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate OTP"
            },
            {
              "_id": "ce02b167-1733-4698-8a68-1de5d955afd1",
              "nodeType": "VerifyAuthCollectorDecisionNode",
              "displayName": "Twilio Verify Collector Decision"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Passcode"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        },
        "b4beab46-1310-4e86-9a3c-4a0ecf8e4309": {
          "_id": "b4beab46-1310-4e86-9a3c-4a0ecf8e4309",
          "_rev": "1852161490",
          "identityResource": "managed/alpha_user",
          "patchAsObject": false,
          "ignoredFields": [],
          "identityAttribute": "userName",
          "_type": {
            "_id": "PatchObjectNode",
            "name": "Patch Object",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "PATCHED",
              "displayName": "Patched"
            },
            {
              "id": "FAILURE",
              "displayName": "Failed"
            }
          ]
        },
        "be081b64-3976-455b-bb7a-b96ccd9e3ba0": {
          "_id": "be081b64-3976-455b-bb7a-b96ccd9e3ba0",
          "_rev": "882853301",
          "length": 6,
          "_type": {
            "_id": "OneTimePasswordGeneratorNode",
            "name": "HOTP Generator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "e1fac123-edd8-469c-9ca6-b1c12fdd9711": {
          "_id": "e1fac123-edd8-469c-9ca6-b1c12fdd9711",
          "_rev": "480157013",
          "script": "8e014e14-d5db-457a-9205-c8dbc0ed9587",
          "outcomes": [
            "true",
            "Error"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id",
            "ciam_allowedMFATypes",
            "mfaDeviceType"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "fd51b535-fac9-47ad-a74f-552af8479dcf": {
          "_id": "fd51b535-fac9-47ad-a74f-552af8479dcf",
          "_rev": "2090240103",
          "identifierAttribute": "telephoneNumber",
          "identifierSharedState": "userIdentifier",
          "_type": {
            "_id": "VerifyAuthIdentifierNode",
            "name": "Twilio Identifier",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "True",
              "displayName": "True"
            },
            {
              "id": "False",
              "displayName": "False"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        }
      },
      "innerNodes": {
        "68e6ee11-3ca4-467b-96ff-d13ce30edb3f": {
          "_id": "68e6ee11-3ca4-467b-96ff-d13ce30edb3f",
          "_rev": "949281533",
          "script": "6ce5e10e-76a0-4172-b0cd-c2dcaeb7ef92",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "oneTimePassword",
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "d3b970b6-0f1e-4c4e-9488-fda16bd9c711": {
          "_id": "d3b970b6-0f1e-4c4e-9488-fda16bd9c711",
          "_rev": "1967133972",
          "passwordExpiryTime": 5,
          "_type": {
            "_id": "OneTimePasswordCollectorDecisionNode",
            "name": "OTP Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "ac60f0e0-7fdc-41ee-bb0a-5715bb351266": {
          "_id": "ac60f0e0-7fdc-41ee-bb0a-5715bb351266",
          "_rev": "551909553",
          "attributesToCollect": [
            "telephoneNumber"
          ],
          "identityAttribute": "userName",
          "validateInputs": true,
          "required": true,
          "_type": {
            "_id": "AttributeCollectorNode",
            "name": "Attribute Collector",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "ee142fe2-bcc2-408c-9213-f5bb36498509": {
          "_id": "ee142fe2-bcc2-408c-9213-f5bb36498509",
          "_rev": "617263007",
          "script": "c3d313f3-a85c-40dc-aac9-1ba98a033cab",
          "outcomes": [
            "FIDO2",
            "OATH",
            "PUSH",
            "OATH+PUSH",
            "SMS",
            "VOICE",
            "Error"
          ],
          "outputs": [
            "mfaDeviceType",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_allowedMFATypes"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "FIDO2",
              "displayName": "FIDO2"
            },
            {
              "id": "OATH",
              "displayName": "OATH"
            },
            {
              "id": "PUSH",
              "displayName": "PUSH"
            },
            {
              "id": "OATH+PUSH",
              "displayName": "OATH+PUSH"
            },
            {
              "id": "SMS",
              "displayName": "SMS"
            },
            {
              "id": "VOICE",
              "displayName": "VOICE"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "539e1506-c794-409f-bb24-7c6529b4f1a3": {
          "_id": "539e1506-c794-409f-bb24-7c6529b4f1a3",
          "_rev": "1912591366",
          "attributesToCollect": [
            "telephoneNumber"
          ],
          "identityAttribute": "userName",
          "validateInputs": true,
          "required": true,
          "_type": {
            "_id": "AttributeCollectorNode",
            "name": "Attribute Collector",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "65d3864c-ac21-41b5-8863-1ef8a0525801": {
          "_id": "65d3864c-ac21-41b5-8863-1ef8a0525801",
          "_rev": "-2389737",
          "script": "6ce5e10e-76a0-4172-b0cd-c2dcaeb7ef92",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "ce02b167-1733-4698-8a68-1de5d955afd1": {
          "_id": "ce02b167-1733-4698-8a68-1de5d955afd1",
          "_rev": "-1588290287",
          "hideCode": true,
          "identifierSharedState": "userIdentifier",
          "_type": {
            "_id": "VerifyAuthCollectorDecisionNode",
            "name": "Twilio Verify Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        }
      },
      "scripts": {
        "86e5bf13-4882-4032-8fb7-f75dd7fa7b82": {
          "_id": "86e5bf13-4882-4032-8fb7-f75dd7fa7b82",
          "name": "OOTB Passwordless - Set Invalid Code Error Message Script",
          "description": "Script to set invalid code error message",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: null\\n    - Script Outputs: \\\"invalidCodeErrorMessage\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\n// Set the below error message in shared state, can be displayed on the last UI Node\\n\\ntry {\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"Invalid Code\\\");\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "8e014e14-d5db-457a-9205-c8dbc0ed9587": {
          "_id": "8e014e14-d5db-457a-9205-c8dbc0ed9587",
          "name": "OOTB Passwordless - Set MFA Device In User's Profile Script",
          "description": "Script to register MFA device/method in user's profile, script should be executed after verification of a respective MFA device/method",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"_id\\\", \\\"ciam_allowedMFATypes\\\", \\\"mfaDeviceType\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\", \\\"Error\\\"\\n*/\\n\\n// Caution: This script might auto-enroll the \\\"EMAIL\\\" as a MFA method in user's profile\\n\\ntry {\\n    // Retrieve userId and allowedMFATypes from shared state\\n    var userId = nodeState.get(\\\"_id\\\");\\n    var allowedMFAMethods = nodeState.get(\\\"ciam_allowedMFATypes\\\");\\n    \\n    // Read the user's MFA devices from the directory\\n    var mfaDevicesObj = openidm.read(\\\"managed/alpha_user/\\\" + userId, null, [\\\"custom_mfaDevices\\\"]);\\n    var mfaDevices = (mfaDevicesObj && mfaDevicesObj.custom_mfaDevices) ? mfaDevicesObj.custom_mfaDevices : [];\\n    \\n    // Parse the MFA devices into a usable array\\n    var usableMFADevices = [];\\n    mfaDevices.forEach(device => {\\n        usableMFADevices.push(device);\\n    });\\n    \\n    var emailMFAAllowed = false;\\n    \\n    // Check if EMAIL MFA is allowed\\n    allowedMFAMethods.forEach(method => {\\n        if (method === \\\"EMAIL\\\") emailMFAAllowed = true;\\n    });\\n    \\n    // Caution: By default, add EMAIL to the MFA devices list if it's allowed and not already present\\n    if (emailMFAAllowed && !usableMFADevices.includes(\\\"EMAIL\\\")) {\\n        usableMFADevices.push(\\\"EMAIL\\\");\\n    }\\n    \\n    // Get the selected device type from shared state\\n    var selectedDevice = nodeState.get(\\\"mfaDeviceType\\\");\\n    \\n    // Handle device registration based on the selected device type\\n    // If Admin wants a single FIDO2 device that a user can register and authenticate with, \\n    // change the node configuration in the WebAuthn Inner Journey and the below condition\\n    if (!usableMFADevices.includes(selectedDevice) || selectedDevice === \\\"FIDO2\\\") {\\n        // Handle combined MFA registration for OATH+PUSH if both are unregistered\\n        if (selectedDevice === \\\"OATH+PUSH\\\") {\\n            if(!usableMFADevices.includes(\\\"OATH\\\") && !usableMFADevices.includes(\\\"PUSH\\\")) {\\n                usableMFADevices.push(\\\"OATH\\\");\\n                usableMFADevices.push(\\\"PUSH\\\");\\n            } else {\\n                // OATH or PUSH device already registered for user, this option can't be use to register device again\\n                // If either of OATH or PUSH is registered and user want to register the other method from OATH/PUSH, \\n                // Use separate OATH and PUSH paths for registration\\n                nodeState.putShared(\\\"errorMessage\\\", \\\"An unexpected error occurred, please contact support team.\\\");\\n            }\\n        } else {\\n            usableMFADevices.push(selectedDevice);\\n        }\\n    }\\n    \\n    // Update the user's custom_mfaDevices attribute\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{\\\"operation\\\":\\\"replace\\\", \\\"field\\\":\\\"/custom_mfaDevices\\\", \\\"value\\\":usableMFADevices}]);\\n\\n    // Update the custom_latestMFADevice variable to store the selected device, it will be used in the notification template\\n    var latestMFADevice = selectedDevice;\\n    if(selectedDevice === \\\"OATH+PUSH\\\") latestMFADevice = \\\"OATH & Push\\\";\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{\\\"operation\\\":\\\"replace\\\", \\\"field\\\":\\\"/custom_latestMFADevice\\\", \\\"value\\\":latestMFADevice}]);\\n    // Set the outcome to true\\n    action.goTo(\\\"true\\\");   \\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "6ce5e10e-76a0-4172-b0cd-c2dcaeb7ef92": {
          "_id": "6ce5e10e-76a0-4172-b0cd-c2dcaeb7ef92",
          "name": "OOTB Passwordless - Validate OTP Input Script",
          "description": "Script to validate OTP input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"oneTimePassword\\\", \\\"invalidCodeErrorMessage\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\", \\\"invalidCodeErrorMessage\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\n// Note: If HOTP Genrator node is used in prior, \\\"oneTimePassword\\\" will be a transient state property, make sure to make it available in script inputs. \\n// If the OTP is generated by Twilio nodes, the default length is set to 6 and only digits are considered. Modify this if necessary.\\n\\ntry {\\n    function validateInput(otpLength) {\\n        return String(\\\" \\\\n\\\\\\n                    var otpLength = \\\" + otpLength + \\\" \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                    if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                    // Validate the passcode \\\\n\\\\\\n                    function validateCode() { \\\\n\\\\\\n                        const passcode = document.querySelectorAll('input[data-vv-as=\\\\\\\"One Time Password\\\\\\\"]')[0] || document.querySelectorAll('input[data-vv-as=\\\\\\\"Code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (passcode) { \\\\n\\\\\\n                            // Set input properties to prevent user tampering \\\\n\\\\\\n                            passcode.setAttribute('maxlength', otpLength); \\\\n\\\\\\n                            passcode.setAttribute('pattern', '[0-9]{' + otpLength + '}'); \\\\n\\\\\\n                            passcode.setAttribute('inputmode', 'numeric'); \\\\n\\\\\\n                            // Check if the input is exactly 6 digits long and numeric \\\\n\\\\\\n                            const isValidCode = new RegExp('^[0-9]{' + otpLength + '}$').test(passcode.value); \\\\n\\\\\\n                            submitBtn.disabled = !isValidCode; \\\\n\\\\\\n                            return isValidCode; \\\\n\\\\\\n                        } \\\\n\\\\\\n                        return false; \\\\n\\\\\\n                    }; \\\\n\\\\\\n                    \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        const passcode = document.querySelectorAll('input[data-vv-as=\\\\\\\"One Time Password\\\\\\\"]')[0] || document.querySelectorAll('input[data-vv-as=\\\\\\\"Code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (passcode && submitBtn) { \\\\n\\\\\\n                            passcode.addEventListener('input', validateCode); \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                if (!validateCode()) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    // For HOTP and Twilio OTP collector nodes, if either of the element is present, initialize validation \\\\n\\\\\\n                    if (document.querySelectorAll('input[data-vv-as=\\\\\\\"One Time Password\\\\\\\"]')[0] || document.querySelectorAll('input[data-vv-as=\\\\\\\"Code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                    else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                    } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n\\n    // Get \\\"oneTimePassword\\\" shared in transient state by the HOTP Generator node or default it to 6\\n    var otpLength = nodeState.get(\\\"oneTimePassword\\\") ? nodeState.get(\\\"oneTimePassword\\\").length : 6;\\n    \\n    if (callbacks.isEmpty()) {\\n        // Display error message if invalid code entered by user\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        // Request callbacks\\n        callbacksBuilder.scriptTextOutputCallback(validateInput(otpLength));\\n    }\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "c3d313f3-a85c-40dc-aac9-1ba98a033cab": {
          "_id": "c3d313f3-a85c-40dc-aac9-1ba98a033cab",
          "name": "OOTB Passwordless - Get Available MFA Methods Script",
          "description": "Script to fetch available MFA methods that a user can register with",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"ciam_allowedMFATypes\\\"\\n    - Script Outputs: \\\"mfaDeviceType\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\", \\\"Error\\\"\\n*/\\n\\ntry {\\n    // Get allowed MFA types from shared state\\n    var allowedMFAMethods = nodeState.get(\\\"ciam_allowedMFATypes\\\");\\n\\n    // Create an array storing usableMFAMethods\\n    var usableMFAMethods = [];\\n    \\n    allowedMFAMethods.forEach(device => {\\n        usableMFAMethods.push(device);\\n    });\\n    \\n    // Email verification is done in parent journey, can be used directly during MFA authentication\\n    // Scrubbing \\\"EMAIL\\\" device type, if available in usableMFAMethods\\n    if (usableMFAMethods.includes(\\\"EMAIL\\\")) {\\n        var index = usableMFAMethods.indexOf(\\\"EMAIL\\\");\\n        if (index > -1) usableMFAMethods.splice(index, 1);\\n    }\\n    \\n    // Combined registration for OATH & Push, if both OATH & Push are allowed MFA types\\n    if(usableMFAMethods.includes(\\\"OATH\\\") && usableMFAMethods.includes(\\\"PUSH\\\")) usableMFAMethods.push(\\\"OATH+PUSH\\\");\\n    \\n    // Handle callback logic\\n    if (callbacks.isEmpty()) {\\n      callbacksBuilder.choiceCallback(\\\"Select an MFA device\\\", usableMFAMethods, 0, false);\\n    } else {\\n      // Callbacks returned from browser, save selected choice\\n      var index = callbacks.getChoiceCallbacks().get(0)[0];\\n      var selectedDevice = usableMFAMethods[index] || null;\\n    \\n      if (!selectedDevice) {\\n        nodeState.putShared(\\\"errorMessage\\\", \\\"An unexpected error occurred, please contact support team\\\");\\n        // Go to Error\\n        action.goTo(\\\"Error\\\");\\n      } else {  \\n        nodeState.putShared(\\\"mfaDeviceType\\\", selectedDevice);\\n        // Go to selected device path\\n        action.goTo(selectedDevice);\\n      }\\n    }\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {
        "deviceRegistration": {
          "_id": "emailTemplate/deviceRegistration",
          "advancedEditor": true,
          "defaultLocale": "en",
          "description": "This will be sent to users when a new MFA device is registered.",
          "displayName": "Device Registration FIDO",
          "enabled": true,
          "from": "",
          "html": {
            "en": ""
          },
          "message": {
            "en": "<div style=\"display:block;text-align:center;font-family:'Arial',\n  sans-serif;background-color:#f7f7f7;border:1px solid #e3e3e3;border-radius:10px;box-shadow:0 4px 8px rgba(0, 0, 0, 0.1);width:400px;margin:20px 20px;padding:30px 20px\">\n  <img src=\"https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png\" alt=\"Company Logo\" style=\"height:65px;margin-bottom:10px\" />\n  <h2 style=\"color:#333;font-size:24px;margin:20px 0\">Sign On Device Added </h2>\n  <p style=\"margin:20px 0 20px;font-size:16px;color:#555\">The following device was successfully added to your\n    account and can be used to authenticate. </p>\n  <p style=\"margin:20px 0 20px;font-size:20px;color:#222\">{{object.custom_latestMFADevice}}</p>\n  <p style=\"margin:20px 0 20px;font-size:16px;color:#555\">If you added this device, no further action is needed. </p>\n  <p style=\"margin:20px 0 20px;font-size:16px;color:#555\">If this device wasn't added by you, consider resetting\n    your password to secure your account. </p>\n</div>\n"
          },
          "mimeType": "text/html",
          "styles": "body {\n   background-color: #324054;\n   color: #455469;\n   padding: 60px;\n   text-align: center \n}\n a {\n   text-decoration: none;\n   color: #109cf1;\n}\n .content {\n   background-color: #fff;\n   border-radius: 4px;\n   margin: 0 auto;\n   padding: 48px;\n   width: 235px \n}\n",
          "subject": {
            "en": "New authentication device added"
          },
          "templateId": "deviceRegistration"
        }
      },
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "CIAM Passwordless - Authentication Main Journey": {
      "tree": {
        "_id": "CIAM Passwordless - Authentication Main Journey",
        "_rev": "768599606",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Passwordless\"]"
        },
        "entryNodeId": "5629b3ed-e8a4-4739-b4ef-89b869ab80b0",
        "innerTreeOnly": false,
        "nodes": {
          "027879d7-9eb3-4d3f-a6cf-b8f5c41ddbd1": {
            "x": 181,
            "y": 1209.03125,
            "connections": {
              "false": "ba095e0c-a9b3-4a8a-a010-45e922abffd3",
              "true": "db780c91-7a44-4b0c-9619-161ca0bf0b66"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Is Protect Analysis Required?"
          },
          "0a8ea577-8885-46fe-8e19-645b0f208f7d": {
            "x": 882,
            "y": 1068.03125,
            "connections": {
              "CREATED": "dfd54c5c-0b5a-48ad-9db7-8c08aa39342f",
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "nodeType": "CreateObjectNode",
            "displayName": "Create Object Social Reg"
          },
          "1c78a4b9-c3f9-47c7-bde9-e97d48311544": {
            "x": 1578.2857142857142,
            "y": 1223.950892857143,
            "connections": {
              "false": "815588a0-ebe6-4d33-942b-010c4cf9d180",
              "true": "f55bdc37-389e-42d3-bedb-ff857e1e1810"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "MFA Registration"
          },
          "20fcd685-1135-47dd-824c-a4b3228334fd": {
            "x": 1544,
            "y": 147.03125,
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "product-PingOneProtectResultNode",
            "displayName": "Update P1 Protect Eval Success"
          },
          "39f72adf-aea5-4a52-a84d-02eee7dc6884": {
            "x": 179,
            "y": 355.015625,
            "connections": {
              "false": "cbf609fe-7b4e-4dc7-bf80-9386ff7b97f5",
              "true": "cdb058b0-cafe-4abf-9b9f-1598d90a99e2"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Is Protect Analysis Required?"
          },
          "3eef6fb3-c3ca-4979-b5fc-bf7ddab66bfa": {
            "x": 528,
            "y": 6.03125,
            "connections": {
              "outcome": "b1e8dc5c-af19-4722-9856-f6dd33744969"
            },
            "nodeType": "EmailSuspendNode",
            "displayName": "Email Suspend Node"
          },
          "4c408cbd-0d63-4434-8218-004b614810d4": {
            "x": 536.203125,
            "y": 116.015625,
            "connections": {
              "false": "3eef6fb3-c3ca-4979-b5fc-bf7ddab66bfa",
              "true": "587a748d-f07d-4e42-99e8-2e71113a9996"
            },
            "nodeType": "AttributeValueDecisionNode",
            "displayName": "Is Email Verified?"
          },
          "587a748d-f07d-4e42-99e8-2e71113a9996": {
            "x": 837,
            "y": 121.015625,
            "connections": {
              "false": "bc7fc5ab-9e2c-4449-b16f-ef1d5c16e538",
              "true": "6c918df8-9684-44b5-b71c-787c6f85070d"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "MFA Authentication"
          },
          "5c48948c-abfc-48b4-aaac-c25685434c15": {
            "x": 1203,
            "y": 1107.015625,
            "connections": {
              "true": "1c78a4b9-c3f9-47c7-bde9-e97d48311544"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set Email Ver. Status To True"
          },
          "6c918df8-9684-44b5-b71c-787c6f85070d": {
            "x": 1154,
            "y": 5.015625,
            "connections": {
              "false": "e812d36b-6bc0-40cb-bcb0-2d654bc057f4",
              "true": "20fcd685-1135-47dd-824c-a4b3228334fd"
            },
            "nodeType": "TermsAndConditionsDecisionNode",
            "displayName": "Terms and Conditions Decision"
          },
          "7c7f3d1a-9b79-4612-8419-ad4aaf4d8a41": {
            "x": 549.15625,
            "y": 759.015625,
            "connections": {
              "ACCOUNT_EXISTS": "d27e9375-8296-491c-a39d-5a83776baf30",
              "NO_ACCOUNT": "f6187b82-01bf-4bc9-9b4f-8a2bfb9c64db",
              "SOCIAL_AUTH_INTERRUPTED": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "nodeType": "SocialProviderHandlerNodeV2",
            "displayName": "Social Provider Handler Node"
          },
          "ad02dc0e-eeb8-476a-b579-11c4a6f93500": {
            "x": 539,
            "y": 354.015625,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "4c408cbd-0d63-4434-8218-004b614810d4"
            },
            "nodeType": "AccountActiveDecisionNode",
            "displayName": "Account Active Decision"
          },
          "af8ba04c-3056-4fd5-994a-b3ad2f55bac2": {
            "x": 1194,
            "y": 268.015625,
            "connections": {
              "FAILURE": "bc7fc5ab-9e2c-4449-b16f-ef1d5c16e538",
              "PATCHED": "20fcd685-1135-47dd-824c-a4b3228334fd"
            },
            "nodeType": "PatchObjectNode",
            "displayName": "Patch Object"
          },
          "b1e8dc5c-af19-4722-9856-f6dd33744969": {
            "x": 805,
            "y": 15.03125,
            "connections": {
              "true": "587a748d-f07d-4e42-99e8-2e71113a9996"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set Email Ver. Status To True"
          },
          "ba095e0c-a9b3-4a8a-a010-45e922abffd3": {
            "x": 202,
            "y": 499.015625,
            "connections": {
              "localAuthentication": "39f72adf-aea5-4a52-a84d-02eee7dc6884",
              "socialAuthentication": "7c7f3d1a-9b79-4612-8419-ad4aaf4d8a41"
            },
            "nodeType": "PageNode",
            "displayName": "Page Node"
          },
          "baaff246-9418-4d8c-8480-ebfd2711a824": {
            "x": 210,
            "y": 818.03125,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "ba095e0c-a9b3-4a8a-a010-45e922abffd3"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "Initialize P1 Protect"
          },
          "bc7fc5ab-9e2c-4449-b16f-ef1d5c16e538": {
            "x": 1546,
            "y": 630.03125,
            "connections": {
              "outcome": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "nodeType": "product-PingOneProtectResultNode",
            "displayName": "Update P1 Protect Eval Failure"
          },
          "cbf609fe-7b4e-4dc7-bf80-9386ff7b97f5": {
            "x": 561.15625,
            "y": 548.015625,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "ad02dc0e-eeb8-476a-b579-11c4a6f93500"
            },
            "nodeType": "IdentifyExistingUserNode",
            "displayName": "Identify Existing User"
          },
          "cdb058b0-cafe-4abf-9b9f-1598d90a99e2": {
            "x": 173,
            "y": 229.015625,
            "connections": {
              "true": "e3639d18-40de-451c-a907-dc22843bfcd2"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set p1ProtectAction As Eval"
          },
          "d1fd8566-8e94-4521-bdf4-acd8b0ec5cce": {
            "x": 184,
            "y": 980.03125,
            "connections": {
              "true": "baaff246-9418-4d8c-8480-ebfd2711a824"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set p1ProtectAction As Init"
          },
          "d27e9375-8296-491c-a39d-5a83776baf30": {
            "x": 876,
            "y": 761.03125,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "AccountActiveDecisionNode",
            "displayName": "Account Active Decision"
          },
          "d88db30d-ebc5-406c-be4b-7fae44d58ab3": {
            "x": 586,
            "y": 1162.03125,
            "connections": {
              "outcome": "0a8ea577-8885-46fe-8e19-645b0f208f7d"
            },
            "nodeType": "PageNode",
            "displayName": "Create Profile Social Reg"
          },
          "db780c91-7a44-4b0c-9619-161ca0bf0b66": {
            "x": 169,
            "y": 1096.03125,
            "connections": {
              "true": "d1fd8566-8e94-4521-bdf4-acd8b0ec5cce"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set flowType As Authentication"
          },
          "df1452f6-53b3-4cc7-9bc0-84af912aeb6b": {
            "x": 180,
            "y": 1367.921875,
            "connections": {
              "true": "027879d7-9eb3-4d3f-a6cf-b8f5c41ddbd1"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Prerequisites & Init Variables"
          },
          "e3639d18-40de-451c-a907-dc22843bfcd2": {
            "x": 164,
            "y": 52.015625,
            "connections": {
              "false": "bc7fc5ab-9e2c-4449-b16f-ef1d5c16e538",
              "true": "cbf609fe-7b4e-4dc7-bf80-9386ff7b97f5"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "Protect Evaluation & Mitigation"
          },
          "e3fc9294-b6c4-4b23-9bb6-fec4b3efcac4": {
            "x": 842,
            "y": 1236.03125,
            "connections": {
              "outcome": "0a8ea577-8885-46fe-8e19-645b0f208f7d"
            },
            "nodeType": "AcceptTermsAndConditionsNode",
            "displayName": "Accept Terms and Conditions"
          },
          "e812d36b-6bc0-40cb-bcb0-2d654bc057f4": {
            "x": 1171,
            "y": 150.015625,
            "connections": {
              "outcome": "af8ba04c-3056-4fd5-994a-b3ad2f55bac2"
            },
            "nodeType": "AcceptTermsAndConditionsNode",
            "displayName": "Accept Terms and Conditions"
          },
          "f6187b82-01bf-4bc9-9b4f-8a2bfb9c64db": {
            "x": 557.203125,
            "y": 1009.015625,
            "connections": {
              "false": "d88db30d-ebc5-406c-be4b-7fae44d58ab3",
              "true": "e3fc9294-b6c4-4b23-9bb6-fec4b3efcac4"
            },
            "nodeType": "RequiredAttributesDecisionNode",
            "displayName": "Required Attributes Present"
          },
          "5629b3ed-e8a4-4739-b4ef-89b869ab80b0": {
            "x": 206,
            "y": 1485.015625,
            "connections": {
              "DONE": "df1452f6-53b3-4cc7-9bc0-84af912aeb6b"
            },
            "nodeType": "PollingWaitNode",
            "displayName": "Polling Wait Node"
          },
          "e786a8c2-bf96-444b-a32c-7415bc722e1b": {
            "x": 1225,
            "y": 1219.015625,
            "connections": {
              "true": "5c48948c-abfc-48b4-aaac-c25685434c15",
              "false": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "nodeType": "IdentifyExistingUserNode",
            "displayName": "Identify Existing User"
          },
          "dfd54c5c-0b5a-48ad-9db7-8c08aa39342f": {
            "x": 1222,
            "y": 1381.015625,
            "connections": {
              "outcome": "e786a8c2-bf96-444b-a32c-7415bc722e1b"
            },
            "nodeType": "AccountLockoutNode",
            "displayName": "Disable User's Account"
          },
          "f55bdc37-389e-42d3-bedb-ff857e1e1810": {
            "x": 1582,
            "y": 1109.015625,
            "connections": {
              "outcome": "0671079c-b45d-49cd-a6de-3cfd74b69d5c"
            },
            "nodeType": "AccountLockoutNode",
            "displayName": "Enable User's Account"
          },
          "815588a0-ebe6-4d33-942b-010c4cf9d180": {
            "x": 1585,
            "y": 1378.015625,
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Delete User Entry"
          },
          "0671079c-b45d-49cd-a6de-3cfd74b69d5c": {
            "x": 1581,
            "y": 954.015625,
            "connections": {
              "EMAIL_SENT": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "EMAIL_NOT_SENT": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "EmailTemplateNode",
            "displayName": "Notify User On Email"
          }
        },
        "staticNodes": {
          "startNode": {
            "x": 6,
            "y": 274
          },
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 2135,
            "y": 145
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 2136,
            "y": 897
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "027879d7-9eb3-4d3f-a6cf-b8f5c41ddbd1": {
          "_id": "027879d7-9eb3-4d3f-a6cf-b8f5c41ddbd1",
          "_rev": "-1007136165",
          "script": "32a223c5-838f-4376-8223-ae9c16643dae",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_protectAnalysisRequired"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "0a8ea577-8885-46fe-8e19-645b0f208f7d": {
          "_id": "0a8ea577-8885-46fe-8e19-645b0f208f7d",
          "_rev": "-1014586697",
          "identityResource": "managed/alpha_user",
          "_type": {
            "_id": "CreateObjectNode",
            "name": "Create Object",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "CREATED",
              "displayName": "Created"
            },
            {
              "id": "FAILURE",
              "displayName": "Failed"
            }
          ]
        },
        "1c78a4b9-c3f9-47c7-bde9-e97d48311544": {
          "_id": "1c78a4b9-c3f9-47c7-bde9-e97d48311544",
          "_rev": "1107528321",
          "tree": "CIAM Passwordless - MFA Device Registration Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "20fcd685-1135-47dd-824c-a4b3228334fd": {
          "_id": "20fcd685-1135-47dd-824c-a4b3228334fd",
          "_rev": "1974315422",
          "status": "SUCCESS",
          "_type": {
            "_id": "product-PingOneProtectResultNode",
            "name": "PingOne Protect Result",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "39f72adf-aea5-4a52-a84d-02eee7dc6884": {
          "_id": "39f72adf-aea5-4a52-a84d-02eee7dc6884",
          "_rev": "1208653369",
          "script": "32a223c5-838f-4376-8223-ae9c16643dae",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_protectAnalysisRequired"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "3eef6fb3-c3ca-4979-b5fc-bf7ddab66bfa": {
          "_id": "3eef6fb3-c3ca-4979-b5fc-bf7ddab66bfa",
          "_rev": "-2008927435",
          "emailSuspendMessage": {
            "en": "An email has been sent to the address you entered. Click the link in that email to proceed."
          },
          "emailTemplateName": "magicLinkTemplate",
          "identityAttribute": "userName",
          "emailAttribute": "mail",
          "objectLookup": true,
          "_type": {
            "_id": "EmailSuspendNode",
            "name": "Email Suspend Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "4c408cbd-0d63-4434-8218-004b614810d4": {
          "_id": "4c408cbd-0d63-4434-8218-004b614810d4",
          "_rev": "-1668005496",
          "comparisonValue": "true",
          "comparisonOperation": "EQUALS",
          "identityAttribute": "userName",
          "comparisonAttribute": "custom_emailVerified",
          "_type": {
            "_id": "AttributeValueDecisionNode",
            "name": "Attribute Value Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "587a748d-f07d-4e42-99e8-2e71113a9996": {
          "_id": "587a748d-f07d-4e42-99e8-2e71113a9996",
          "_rev": "1394140973",
          "tree": "CIAM Passwordless - MFA Authentication Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "5c48948c-abfc-48b4-aaac-c25685434c15": {
          "_id": "5c48948c-abfc-48b4-aaac-c25685434c15",
          "_rev": "-1046505131",
          "script": "1dad0550-6205-45ee-84db-7f2b3cf80676",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id",
            "ciam_allowedMFATypes"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "6c918df8-9684-44b5-b71c-787c6f85070d": {
          "_id": "6c918df8-9684-44b5-b71c-787c6f85070d",
          "_rev": "1829465602",
          "identityAttribute": "userName",
          "_type": {
            "_id": "TermsAndConditionsDecisionNode",
            "name": "Terms and Conditions Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "7c7f3d1a-9b79-4612-8419-ad4aaf4d8a41": {
          "_id": "7c7f3d1a-9b79-4612-8419-ad4aaf4d8a41",
          "_rev": "-1878068223",
          "clientType": "BROWSER",
          "script": "58c824ae-84ed-4724-82cd-db128fc3f6c",
          "usernameAttribute": "userName",
          "_type": {
            "_id": "SocialProviderHandlerNodeV2",
            "name": "Social Provider Handler Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "ACCOUNT_EXISTS",
              "displayName": "Account exists"
            },
            {
              "id": "NO_ACCOUNT",
              "displayName": "No account exists"
            },
            {
              "id": "SOCIAL_AUTH_INTERRUPTED",
              "displayName": "Social auth interrupted"
            }
          ]
        },
        "ad02dc0e-eeb8-476a-b579-11c4a6f93500": {
          "_id": "ad02dc0e-eeb8-476a-b579-11c4a6f93500",
          "_rev": "929367858",
          "_type": {
            "_id": "AccountActiveDecisionNode",
            "name": "Account Active Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "af8ba04c-3056-4fd5-994a-b3ad2f55bac2": {
          "_id": "af8ba04c-3056-4fd5-994a-b3ad2f55bac2",
          "_rev": "1847638273",
          "identityResource": "managed/alpha_user",
          "patchAsObject": false,
          "ignoredFields": [],
          "identityAttribute": "userName",
          "_type": {
            "_id": "PatchObjectNode",
            "name": "Patch Object",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "PATCHED",
              "displayName": "Patched"
            },
            {
              "id": "FAILURE",
              "displayName": "Failed"
            }
          ]
        },
        "b1e8dc5c-af19-4722-9856-f6dd33744969": {
          "_id": "b1e8dc5c-af19-4722-9856-f6dd33744969",
          "_rev": "1492707582",
          "script": "1dad0550-6205-45ee-84db-7f2b3cf80676",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id",
            "ciam_allowedMFATypes"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "ba095e0c-a9b3-4a8a-a010-45e922abffd3": {
          "_id": "ba095e0c-a9b3-4a8a-a010-45e922abffd3",
          "_rev": "-939561667",
          "nodes": [
            {
              "_id": "d7e9eb65-79e3-4c94-a214-a8b9360778fa",
              "nodeType": "ValidatedUsernameNode",
              "displayName": "Platform Username"
            },
            {
              "_id": "e2ff342c-e626-4edb-a546-3202ab69e7ac",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Empty Username?"
            },
            {
              "_id": "a099d34c-3fd7-42ca-b986-c4f2f1b3d5e9",
              "nodeType": "SelectIdPNode",
              "displayName": "Select Identity Provider"
            }
          ],
          "pageDescription": {
            "en": "New here? <a href=\"#/service/CIAM Passwordless - Registration Main Journey\">Create an account</a><br>"
          },
          "stage": "{\"submitButtonText\":{\"en\":\"Sign In\"}}",
          "pageHeader": {
            "en": "Sign In"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "socialAuthentication",
              "displayName": "Social Authentication"
            },
            {
              "id": "localAuthentication",
              "displayName": "Local Authentication"
            }
          ]
        },
        "baaff246-9418-4d8c-8480-ebfd2711a824": {
          "_id": "baaff246-9418-4d8c-8480-ebfd2711a824",
          "_rev": "881552957",
          "tree": "CIAM Passwordless - Threat Detection Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "bc7fc5ab-9e2c-4449-b16f-ef1d5c16e538": {
          "_id": "bc7fc5ab-9e2c-4449-b16f-ef1d5c16e538",
          "_rev": "-1565044268",
          "status": "FAILED",
          "_type": {
            "_id": "product-PingOneProtectResultNode",
            "name": "PingOne Protect Result",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "cbf609fe-7b4e-4dc7-bf80-9386ff7b97f5": {
          "_id": "cbf609fe-7b4e-4dc7-bf80-9386ff7b97f5",
          "_rev": "27928601",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "cdb058b0-cafe-4abf-9b9f-1598d90a99e2": {
          "_id": "cdb058b0-cafe-4abf-9b9f-1598d90a99e2",
          "_rev": "1428152345",
          "script": "00f3eaed-ac1b-4737-b0f9-f2b0a825360f",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "p1ProtectAction",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "d1fd8566-8e94-4521-bdf4-acd8b0ec5cce": {
          "_id": "d1fd8566-8e94-4521-bdf4-acd8b0ec5cce",
          "_rev": "1344977833",
          "script": "bf16588d-6e67-4cfe-83a9-c877de085710",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "p1ProtectAction",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "d27e9375-8296-491c-a39d-5a83776baf30": {
          "_id": "d27e9375-8296-491c-a39d-5a83776baf30",
          "_rev": "642806459",
          "_type": {
            "_id": "AccountActiveDecisionNode",
            "name": "Account Active Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "d88db30d-ebc5-406c-be4b-7fae44d58ab3": {
          "_id": "d88db30d-ebc5-406c-be4b-7fae44d58ab3",
          "_rev": "-211128540",
          "nodes": [
            {
              "_id": "76e9d3b9-6d83-4d71-b168-eed7bafbfc5c",
              "nodeType": "AttributeCollectorNode",
              "displayName": "Attribute Collector"
            },
            {
              "_id": "ad0c4bad-5353-4ecf-8716-cda64bbf5357",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Input"
            },
            {
              "_id": "78108b59-57b4-4c7f-aa78-8b7d5b8e5273",
              "nodeType": "AcceptTermsAndConditionsNode",
              "displayName": "Accept Terms and Conditions"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Create Your Profile"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "db780c91-7a44-4b0c-9619-161ca0bf0b66": {
          "_id": "db780c91-7a44-4b0c-9619-161ca0bf0b66",
          "_rev": "1986645544",
          "script": "55994140-f9d1-4b3b-8922-87de6ebd71a2",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "flowType",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "df1452f6-53b3-4cc7-9bc0-84af912aeb6b": {
          "_id": "df1452f6-53b3-4cc7-9bc0-84af912aeb6b",
          "_rev": "-1205212843",
          "script": "f402e7a4-22d6-4406-8faf-d92dc1e35db6",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "ciam_allowedMFATypes",
            "ciam_protectAnalysisRequired",
            "ciam_magicLinkEnabled"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "e3639d18-40de-451c-a907-dc22843bfcd2": {
          "_id": "e3639d18-40de-451c-a907-dc22843bfcd2",
          "_rev": "-1931076026",
          "tree": "CIAM Passwordless - Threat Detection Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "e3fc9294-b6c4-4b23-9bb6-fec4b3efcac4": {
          "_id": "e3fc9294-b6c4-4b23-9bb6-fec4b3efcac4",
          "_rev": "2074398616",
          "_type": {
            "_id": "AcceptTermsAndConditionsNode",
            "name": "Accept Terms and Conditions",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "e812d36b-6bc0-40cb-bcb0-2d654bc057f4": {
          "_id": "e812d36b-6bc0-40cb-bcb0-2d654bc057f4",
          "_rev": "1315656565",
          "_type": {
            "_id": "AcceptTermsAndConditionsNode",
            "name": "Accept Terms and Conditions",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "f6187b82-01bf-4bc9-9b4f-8a2bfb9c64db": {
          "_id": "f6187b82-01bf-4bc9-9b4f-8a2bfb9c64db",
          "_rev": "639272218",
          "identityResource": "managed/alpha_user",
          "_type": {
            "_id": "RequiredAttributesDecisionNode",
            "name": "Required Attributes Present",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "5629b3ed-e8a4-4739-b4ef-89b869ab80b0": {
          "_id": "5629b3ed-e8a4-4739-b4ef-89b869ab80b0",
          "_rev": "1320782220",
          "spamDetectionTolerance": 3,
          "spamDetectionEnabled": false,
          "exitMessage": {},
          "waitingMessage": {
            "en": "Loading..."
          },
          "secondsToWait": 2,
          "exitable": false,
          "_type": {
            "_id": "PollingWaitNode",
            "name": "Polling Wait Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "DONE",
              "displayName": "Done"
            }
          ]
        },
        "e786a8c2-bf96-444b-a32c-7415bc722e1b": {
          "_id": "e786a8c2-bf96-444b-a32c-7415bc722e1b",
          "_rev": "-1375494165",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "dfd54c5c-0b5a-48ad-9db7-8c08aa39342f": {
          "_id": "dfd54c5c-0b5a-48ad-9db7-8c08aa39342f",
          "_rev": "-465832488",
          "lockAction": "LOCK",
          "_type": {
            "_id": "AccountLockoutNode",
            "name": "Account Lockout",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "f55bdc37-389e-42d3-bedb-ff857e1e1810": {
          "_id": "f55bdc37-389e-42d3-bedb-ff857e1e1810",
          "_rev": "-2015596645",
          "lockAction": "UNLOCK",
          "_type": {
            "_id": "AccountLockoutNode",
            "name": "Account Lockout",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "815588a0-ebe6-4d33-942b-010c4cf9d180": {
          "_id": "815588a0-ebe6-4d33-942b-010c4cf9d180",
          "_rev": "-1549712366",
          "script": "40447d05-8335-4698-97a5-7be5edd6eb25",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "0671079c-b45d-49cd-a6de-3cfd74b69d5c": {
          "_id": "0671079c-b45d-49cd-a6de-3cfd74b69d5c",
          "_rev": "-1493018424",
          "emailTemplateName": "welcome",
          "identityAttribute": "userName",
          "emailAttribute": "mail",
          "_type": {
            "_id": "EmailTemplateNode",
            "name": "Email Template Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "EMAIL_SENT",
              "displayName": "Email Sent"
            },
            {
              "id": "EMAIL_NOT_SENT",
              "displayName": "Email Not Sent"
            }
          ]
        }
      },
      "innerNodes": {
        "d7e9eb65-79e3-4c94-a214-a8b9360778fa": {
          "_id": "d7e9eb65-79e3-4c94-a214-a8b9360778fa",
          "_rev": "172326475",
          "usernameAttribute": "userName",
          "validateInput": false,
          "_type": {
            "_id": "ValidatedUsernameNode",
            "name": "Platform Username",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "e2ff342c-e626-4edb-a546-3202ab69e7ac": {
          "_id": "e2ff342c-e626-4edb-a546-3202ab69e7ac",
          "_rev": "152227445",
          "script": "b28ca455-fa29-4f5f-92c2-8e87df3776b8",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "a099d34c-3fd7-42ca-b986-c4f2f1b3d5e9": {
          "_id": "a099d34c-3fd7-42ca-b986-c4f2f1b3d5e9",
          "_rev": "1789982752",
          "includeLocalAuthentication": true,
          "filteredProviders": [
            "Google",
            "Facebook"
          ],
          "identityAttribute": "mail",
          "passwordAttribute": "password",
          "offerOnlyExisting": false,
          "_type": {
            "_id": "SelectIdPNode",
            "name": "Select Identity Provider",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "socialAuthentication",
              "displayName": "Social Authentication"
            },
            {
              "id": "localAuthentication",
              "displayName": "Local Authentication"
            }
          ]
        },
        "76e9d3b9-6d83-4d71-b168-eed7bafbfc5c": {
          "_id": "76e9d3b9-6d83-4d71-b168-eed7bafbfc5c",
          "_rev": "-393326845",
          "attributesToCollect": [
            "userName",
            "givenName",
            "sn"
          ],
          "identityAttribute": "userName",
          "validateInputs": true,
          "required": true,
          "_type": {
            "_id": "AttributeCollectorNode",
            "name": "Attribute Collector",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "ad0c4bad-5353-4ecf-8716-cda64bbf5357": {
          "_id": "ad0c4bad-5353-4ecf-8716-cda64bbf5357",
          "_rev": "1735651614",
          "script": "5127eaff-3606-4ee4-b9cd-808d193ce838",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "78108b59-57b4-4c7f-aa78-8b7d5b8e5273": {
          "_id": "78108b59-57b4-4c7f-aa78-8b7d5b8e5273",
          "_rev": "1100813708",
          "_type": {
            "_id": "AcceptTermsAndConditionsNode",
            "name": "Accept Terms and Conditions",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        }
      },
      "scripts": {
        "32a223c5-838f-4376-8223-ae9c16643dae": {
          "_id": "32a223c5-838f-4376-8223-ae9c16643dae",
          "name": "OOTB Passwordless - Protect Analysis Required Script",
          "description": "Script to check if P1 Protect analysis is required or not",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"ciam_protectAnalysisRequired\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\", \\\"false\\\"\\n*/\\n\\n// Prerequisites: Set the environment variable: p1-protect-analysis-required\\n\\ntry {\\n    // Get Protect analysis required or not from the Environment variable\\n    var protectAnalysisRequired = (systemEnv.getProperty(\\\"esv.p1.protect.analysis.required\\\") && systemEnv.getProperty(\\\"esv.p1.protect.analysis.required\\\").length) ? systemEnv.getProperty(\\\"esv.p1.protect.analysis.required\\\") : nodeState.get(\\\"ciam_protectAnalysisRequired\\\");\\n    \\n    if(protectAnalysisRequired === \\\"true\\\" || protectAnalysisRequired === true) outcome = \\\"true\\\";\\n    else outcome = \\\"false\\\";\\n    // Go to outcome\\n    action.goTo(outcome);\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "1dad0550-6205-45ee-84db-7f2b3cf80676": {
          "_id": "1dad0550-6205-45ee-84db-7f2b3cf80676",
          "name": "OOTB Passwordless - Set Email Verification Status Script",
          "description": "Script to set email verification status in user's profile",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState constiable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"_id\\\", \\\"ciam_allowedMFATypes\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\n// Caution: This script might auto-enroll the \\\"EMAIL\\\" as a MFA method in user's profile\\n\\ntry {\\n    // Get the userId\\n    var userId = nodeState.get(\\\"_id\\\");\\n    \\n    // Update the email verification status attribute of user to \\\"true\\\"\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{\\\"operation\\\":\\\"replace\\\", \\\"field\\\":\\\"/custom_emailVerified\\\", \\\"value\\\":\\\"true\\\"}]);\\n\\n    // Enroll email as an MFA authentication method\\n    var allowedMFAMethods = nodeState.get(\\\"ciam_allowedMFATypes\\\");\\n    var mfaDevicesObj = openidm.read(\\\"managed/alpha_user/\\\" + userId, null, [\\\"custom_mfaDevices\\\"]);\\n    var mfaDevices = (mfaDevicesObj && mfaDevicesObj.custom_mfaDevices) ? mfaDevicesObj.custom_mfaDevices : [];\\n\\n    // By default returned mfaDevices is of Object type so values are parsed in a new array\\n    var usableMFADevices = [];\\n   \\n    mfaDevices.forEach(device => {\\n        usableMFADevices.push(device);\\n    });\\n\\n    var emailMFAAllowed = false;\\n    allowedMFAMethods.forEach(device => {\\n        if(device === \\\"EMAIL\\\") emailMFAAllowed = true;\\n    });\\n    \\n    // Add email to the MFA Devices list, if not already present \\n    if(emailMFAAllowed && !usableMFADevices.includes(\\\"EMAIL\\\")) usableMFADevices.push(\\\"EMAIL\\\");\\n    \\n    // Update the custom_mfaDevices Object\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{\\\"operation\\\":\\\"replace\\\", \\\"field\\\":\\\"/custom_mfaDevices\\\", \\\"value\\\":usableMFADevices}]);\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "00f3eaed-ac1b-4737-b0f9-f2b0a825360f": {
          "_id": "00f3eaed-ac1b-4737-b0f9-f2b0a825360f",
          "name": "OOTB Passwordless - Set Protect Action As Eval Script",
          "description": "Script to set Protect action as Eval, will be used in Threat Detection Journey to evaluate Risk",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: null\\n    - Script Outputs: \\\"p1ProtectAction\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {  \\n    // Action to be taken in threat detection child journey\\n    nodeState.putShared(\\\"p1ProtectAction\\\", \\\"eval\\\");\\n    // Go to true\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "bf16588d-6e67-4cfe-83a9-c877de085710": {
          "_id": "bf16588d-6e67-4cfe-83a9-c877de085710",
          "name": "OOTB Passwordless - Set Protect Action As Init Script",
          "description": "Script to set Protect action as Init, will be used in Threat Detection Journey to initialize Protect SDK",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: null\\n    - Script Outputs: \\\"p1ProtectAction\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    // Action to be taken in threat detection child journey\\n    nodeState.putShared(\\\"p1ProtectAction\\\", \\\"init\\\");\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "55994140-f9d1-4b3b-8922-87de6ebd71a2": {
          "_id": "55994140-f9d1-4b3b-8922-87de6ebd71a2",
          "name": "OOTB Passwordless - Set Flow Type As Authentication Script",
          "description": "Script to set flowType as Authentication",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"ciam_protectAnalysisRequired\\\", esv.p1.protect.analysis.required\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\", \\\"false\\\"\\n*/\\n\\ntry {\\n    // Setting the flowType as Authentication, this will be used to differentiate paths in Threat Detection Journey\\n    nodeState.putShared(\\\"flowType\\\", \\\"Authentication\\\");\\n    // Go to true\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "f402e7a4-22d6-4406-8faf-d92dc1e35db6": {
          "_id": "f402e7a4-22d6-4406-8faf-d92dc1e35db6",
          "name": "OOTB Passwordless - Initialize Variables Script",
          "description": "Script to Initialize variables that will be used further in the Journey",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/* Prerequisites for this Journey Pack\\n       -Create following custom attributes before proceeding:\\n           1. custom_emailVerified - string (To keep track that user has verified their emailAddress)\\n           2. custom_protectActivityCity - string (User's P1 Protect Activity City, used in notification template)\\n           3. custom_protectActivityState - string (User's P1 Protect Activity City, used in notification template)\\n           4. custom_protectDeviceOS - string (User's P1 Protect Activity City, used in notification template)\\n           5. custom_mfaDevices - array of string (To set, fetch and display user's registered MFA devices)\\n           6. custom_latestMFADevice - string (Recent MFA device registered by user, used in notification template)\\n       -Configuration Check\\n           1. Set the environment variable p1-protect-analysis-required. If it is not set, the value specified in the code below for \\\"protectAnalysisRequired\\\" var will be used.\\n           2. Threat Detection Inner Journey (If Protect Analysis Is Required):\\n               a. Update the PingOne Worker Service ID (P1 Worker App), Risk Policy ID* in following nodes: (*Optional, if not provided default will be considered)\\n                   -- P1 Protect Initialize (1 instance)\\n                   -- P1 Protect Evaluation (2 instances)\\n           3. MFA Registration Inner Journey (If \\\"SMS\\\", or \\\"VOICE\\\" are opted in below \\\"allowedMFATyps\\\" array):\\n               a. Update the required fields in:\\n                   -- OTP SMS Sender Node\\n                   -- Twilio Verify Lookup\\n                   -- Twilio Verify Sender\\n           4. MFA Authenticaion Inner Journey (If \\\"EMAIL\\\", \\\"SMS\\\", or \\\"VOICE\\\" are opted in below \\\"allowedMFATyps\\\" array):\\n               a. Update the required fields in:\\n                   -- OTP Email Sender Node\\n                   -- OTP SMS Sender Node\\n                   -- Twilio Verify Lookup\\n                   -- Twilio Verify Sender\\n*/\\n\\n\\n// Allowed MFA device types by the Admin\\nvar allowedMFATypes = [\\\"FIDO2\\\", \\\"OATH\\\", \\\"PUSH\\\", \\\"EMAIL\\\", \\\"SMS\\\", \\\"VOICE\\\"];\\nnodeState.putShared(\\\"ciam_allowedMFATypes\\\", allowedMFATypes);\\n\\n// Check if Admin wants to enable/disable protectAnalysis\\nvar protectAnalysisRequired = true;\\nnodeState.putShared(\\\"ciam_protectAnalysisRequired\\\", protectAnalysisRequired);\\n\\n// Check if Admin wants to allow OOB Magic Link as an MFA authentication method\\nvar magicLinkEnabled = true;\\nnodeState.putShared(\\\"ciam_magicLinkEnabled\\\", magicLinkEnabled);\\n\\noutcome = \\\"true\\\";\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "40447d05-8335-4698-97a5-7be5edd6eb25": {
          "_id": "40447d05-8335-4698-97a5-7be5edd6eb25",
          "name": "OOTB Passwordless - Delete User Entry Script",
          "description": "Script to delete a user's entry from directory service if they fail during registration process",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"_id\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    var userId = nodeState.get(\\\"_id\\\");\\n    // Delete the user entry from the data store\\n    openidm.delete('managed/alpha_user/'+ userId, null);\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "b28ca455-fa29-4f5f-92c2-8e87df3776b8": {
          "_id": "b28ca455-fa29-4f5f-92c2-8e87df3776b8",
          "name": "OOTB Passwordless - Validate Username Script",
          "description": "Script to validate username, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: null\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    // Disable next button, if input is empty\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                    if(submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        const username = document.querySelectorAll('input[data-vv-as=\\\\\\\"User Name\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (username && submitBtn) { \\\\n\\\\\\n                            const enableSubmitBtn = () => { \\\\n\\\\\\n                                // Check input validity before enabling submit button \\\\n\\\\\\n                                const isValidInput = username.value.length > 0; \\\\n\\\\\\n                                if (isValidInput) { \\\\n\\\\\\n                                    submitBtn.disabled = false; \\\\n\\\\\\n                                } else { \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }; \\\\n\\\\\\n                            // Revalidate before form submission \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                const isValidInput = username.value.length > 0; \\\\n\\\\\\n                                if (!isValidInput) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            username.addEventListener('input', enableSubmitBtn); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                       } \\\\n\\\\\\n                      } \\\\n\\\\\\n                      if (document.querySelectorAll('input[data-vv-as=\\\\\\\"User Name\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                      else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                      } \\\\n\\\\\\n        \\\");\\n    }\\n    \\n    if (callbacks.isEmpty()) {                \\n        // Request callbacks\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n    // Go to true\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "5127eaff-3606-4ee4-b9cd-808d193ce838": {
          "_id": "5127eaff-3606-4ee4-b9cd-808d193ce838",
          "name": "OOTB Passwordless - Validate Name and Email Address Script",
          "description": "Script to validate name and email address, sets constraints",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: null\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    // Validate Inputs\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    const firstName = document.querySelectorAll('input[data-vv-as=\\\\\\\"First Name\\\\\\\"]')[0]; \\\\n\\\\\\n                    const lastName = document.querySelectorAll('input[data-vv-as=\\\\\\\"Last Name\\\\\\\"]')[0]; \\\\n\\\\\\n                    const emailAddress = document.querySelectorAll('input[data-vv-as=\\\\\\\"Email Address\\\\\\\"]')[0]; \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                    \\\\n\\\\\\n                    if (firstName) firstName.setAttribute('maxlength', '255'); \\\\n\\\\\\n                    if (lastName) lastName.setAttribute('maxlength', '255'); \\\\n\\\\\\n                    if (emailAddress) emailAddress.setAttribute('maxlength', '255'); \\\\n\\\\\\n                    \\\\n\\\\\\n                    if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                    function validateFields() { \\\\n\\\\\\n                        const isValid = firstName.value.length > 0 && lastName.value.length > 0 && emailAddress.value.length > 0; \\\\n\\\\\\n                        submitBtn.disabled = !isValid; \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                        // Ensure the fields are not exceeding max length even if modified in browser \\\\n\\\\\\n                        if (firstName.value.length > 255 || lastName.value.length > 255 || emailAddress.value.length > 255) { \\\\n\\\\\\n                            event.preventDefault(); \\\\n\\\\\\n                            submitBtn.disabled = true; \\\\n\\\\\\n                        } \\\\n\\\\\\n                        const isValid = firstName.value.length > 0 && lastName.value.length > 0 && emailAddress.value.length > 0; \\\\n\\\\\\n                        if (!isValid) { \\\\n\\\\\\n                            event.preventDefault(); \\\\n\\\\\\n                            submitBtn.disabled = true; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    }); \\\\n\\\\\\n                    \\\\n\\\\\\n                    firstName.addEventListener('input', validateFields); \\\\n\\\\\\n                    lastName.addEventListener('input', validateFields); \\\\n\\\\\\n                    emailAddress.addEventListener('input', validateFields); \\\\n\\\\\\n        \\\");\\n    }\\n    \\n    if (callbacks.isEmpty()) {                \\n        // Request callbacks\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {
        "magicLinkTemplate": {
          "_id": "emailTemplate/magicLinkTemplate",
          "advancedEditor": true,
          "defaultLocale": "en",
          "description": "To authenticate with email address ",
          "displayName": "Magic Link Template",
          "enabled": true,
          "from": "",
          "html": {
            "en": "",
            "fr": ""
          },
          "message": {
            "en": "<div style=\"display:block;text-align:center;font-family:sans-serif;border:1px solid #c5c5c5;width:400px;padding:30px 20px\">\n  <img src=\"https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png\" alt=\"Company Logo\" style=\"height:65px;margin-bottom:10px\" />\n  <h1>Sign On Request</h1>\n  <div style=\"margin-top:20px;margin-bottom:25px\">\n    <p>Please click the link below to authenticate. </p>\n    <a href=\"{{object.resumeURI}}\" style=\"font-size:14pt\">Complete Sign On</a>\n  </div>\n</div>",
            "fr": "<html>\n  <head></head>\n  <body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\">\n    <h3>Ceci est votre mail d'inscription.</h3>\n    <p>\n      <a href=\"{{object.resumeURI}}\" style=\"text-decoration: none; color: #109cf1;\">Lien de vérification email</a>\n    </p>\n  </body>\n</html>"
          },
          "mimeType": "text/html",
          "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
          "subject": {
            "en": "Sign On Request",
            "fr": "Créer un nouveau compte"
          },
          "templateId": "magicLinkTemplate"
        },
        "welcome": {
          "_id": "emailTemplate/welcome",
          "defaultLocale": "en",
          "enabled": true,
          "from": "",
          "html": {
            "en": "<html><body><p>Welcome. Your username is '{{object.userName}}'.</p></body></html>"
          },
          "message": {
            "en": "<html><head></head><body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\"><div class=\"content\" style=\"background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;\"><p>Welcome. Your username is '{{object.userName}}'.</p></div></body></html>"
          },
          "mimeType": "text/html",
          "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
          "subject": {
            "en": "Your account has been created"
          }
        }
      },
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "CIAM Passwordless - Registration Main Journey": {
      "tree": {
        "_id": "CIAM Passwordless - Registration Main Journey",
        "_rev": "1308132172",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"CIAM Passwordless\"]"
        },
        "entryNodeId": "2f14720f-0bd1-48e6-a029-3c3b134fd0f0",
        "innerTreeOnly": false,
        "nodes": {
          "11f1b753-d2d9-4f53-b53d-f3fc10f85d45": {
            "x": 648,
            "y": 106.03125,
            "connections": {
              "false": "3c408b9a-5caa-45e1-9d44-5ae67dcae13d",
              "true": "ba55535f-3fcf-4896-8698-3103dd011e8b"
            },
            "nodeType": "RequiredAttributesDecisionNode",
            "displayName": "Required Attributes Present"
          },
          "1d486ca9-dbee-40a0-a256-132fbe86d8b0": {
            "x": 1058.15625,
            "y": 711.015625,
            "connections": {
              "false": "246b9682-d15b-4ba7-ab77-38010b668194",
              "true": "40db49df-1875-459e-8eb5-3a77c98d78f2"
            },
            "nodeType": "IdentifyExistingUserNode",
            "displayName": "Identify Existing User"
          },
          "246b9682-d15b-4ba7-ab77-38010b668194": {
            "x": 664,
            "y": 843.921875,
            "connections": {
              "true": "28d13b09-47c5-4731-b490-a35ca976a540"
            },
            "nodeType": "PageNode",
            "displayName": "Create Profile Node"
          },
          "28d13b09-47c5-4731-b490-a35ca976a540": {
            "x": 669,
            "y": 729.015625,
            "connections": {
              "outcome": "435058ab-fb60-42aa-a3fa-273ac2e2126b"
            },
            "nodeType": "EmailSuspendNode",
            "displayName": "Email Suspend Node"
          },
          "3c408b9a-5caa-45e1-9d44-5ae67dcae13d": {
            "x": 1035,
            "y": 182.015625,
            "connections": {
              "outcome": "435058ab-fb60-42aa-a3fa-273ac2e2126b"
            },
            "nodeType": "PageNode",
            "displayName": "Create Profile Node"
          },
          "3f842bf6-22dd-4a2f-aad7-967a5d78fb4b": {
            "x": 1047,
            "y": 870.015625,
            "connections": {
              "false": "40db49df-1875-459e-8eb5-3a77c98d78f2",
              "true": "1d486ca9-dbee-40a0-a256-132fbe86d8b0"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "Protect Evaluation & Mitigation"
          },
          "40db49df-1875-459e-8eb5-3a77c98d78f2": {
            "x": 1781.5,
            "y": 660.0260416666667,
            "connections": {
              "outcome": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "nodeType": "product-PingOneProtectResultNode",
            "displayName": "Update P1 Protect Eval Failure"
          },
          "435058ab-fb60-42aa-a3fa-273ac2e2126b": {
            "x": 1406,
            "y": 365.015625,
            "connections": {
              "CREATED": "dee8fecb-c95c-4d22-9809-2c02f4e6e03e",
              "FAILURE": "40db49df-1875-459e-8eb5-3a77c98d78f2"
            },
            "nodeType": "CreateObjectNode",
            "displayName": "Create Object"
          },
          "4963994f-13be-420b-9112-74bf8c894e0d": {
            "x": 278,
            "y": 888.03125,
            "connections": {
              "true": "f19d113e-a3df-4535-aef6-5041e4df2ae0"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set flowType As Registration"
          },
          "544305b2-66fd-4962-a450-af47e72c4710": {
            "x": 2685,
            "y": 219.02604166666669,
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "product-PingOneProtectResultNode",
            "displayName": "Update P1 Protect Eval Success"
          },
          "65fe908c-d056-4ab4-b6cf-e6ca6720d972": {
            "x": 1772,
            "y": 56.015625,
            "connections": {
              "true": "e4e01a2d-e8f3-4e9e-a689-b9c99de24cd5"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set Email Ver. Status To True"
          },
          "8aa2df04-592b-4c0b-827e-9782e2477f19": {
            "x": 657,
            "y": 1045.015625,
            "connections": {
              "true": "3f842bf6-22dd-4a2f-aad7-967a5d78fb4b"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set p1ProtectAction As Eval"
          },
          "8f52ba40-8f23-4e00-96ad-7b3f3c2535d3": {
            "x": 2118,
            "y": 392.421875,
            "connections": {
              "true": "40db49df-1875-459e-8eb5-3a77c98d78f2"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Delete User Entry"
          },
          "936df7c1-6b47-47e1-9f1b-906eee1e254d": {
            "x": 2422,
            "y": 176.015625,
            "connections": {
              "EMAIL_NOT_SENT": "544305b2-66fd-4962-a450-af47e72c4710",
              "EMAIL_SENT": "544305b2-66fd-4962-a450-af47e72c4710"
            },
            "nodeType": "EmailTemplateNode",
            "displayName": "Notify User On Email"
          },
          "95d9c464-8663-426b-a363-49fc26bd330b": {
            "x": 297,
            "y": 547.015625,
            "connections": {
              "false": "40db49df-1875-459e-8eb5-3a77c98d78f2",
              "true": "f70ad4cd-0ff7-4b60-8338-08d5c01d5a19"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "Initialize P1 Protect"
          },
          "9abd1c6e-8d94-44d7-b069-f02253b8432f": {
            "x": 1485.15625,
            "y": 25.015625,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "65fe908c-d056-4ab4-b6cf-e6ca6720d972"
            },
            "nodeType": "IdentifyExistingUserNode",
            "displayName": "Identify Existing User"
          },
          "ac2efb8e-6285-415e-9915-83111c65e767": {
            "x": 647.375,
            "y": 282.015625,
            "connections": {
              "ACCOUNT_EXISTS": "f30183e3-a226-4f6a-93ca-8cd9a0f50acd",
              "NO_ACCOUNT": "11f1b753-d2d9-4f53-b53d-f3fc10f85d45",
              "SOCIAL_AUTH_INTERRUPTED": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "nodeType": "SocialProviderHandlerNodeV2",
            "displayName": "Social Provider Handler Node"
          },
          "af58dc93-e794-4bdd-a9f9-ea5cd2a645d1": {
            "x": 2112,
            "y": 190.421875,
            "connections": {
              "outcome": "936df7c1-6b47-47e1-9f1b-906eee1e254d"
            },
            "nodeType": "AccountLockoutNode",
            "displayName": "Enable User's Account"
          },
          "b3f922e6-ae60-4110-8243-44b64af0e85a": {
            "x": 285,
            "y": 1194.921875,
            "connections": {
              "true": "ce8778f6-6c6a-418c-a561-ffe2ae295e1a"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Prerequisites & Init Variables"
          },
          "b911f755-bd73-488a-9388-8075ea94c5c4": {
            "x": 656,
            "y": 1172.015625,
            "connections": {
              "false": "1d486ca9-dbee-40a0-a256-132fbe86d8b0",
              "true": "8aa2df04-592b-4c0b-827e-9782e2477f19"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Is Protect Analysis Required?"
          },
          "ba55535f-3fcf-4896-8698-3103dd011e8b": {
            "x": 1003,
            "y": 52,
            "connections": {
              "outcome": "435058ab-fb60-42aa-a3fa-273ac2e2126b"
            },
            "nodeType": "AcceptTermsAndConditionsNode",
            "displayName": "Accept Terms and Conditions"
          },
          "ce8778f6-6c6a-418c-a561-ffe2ae295e1a": {
            "x": 278,
            "y": 1017.03125,
            "connections": {
              "false": "f70ad4cd-0ff7-4b60-8338-08d5c01d5a19",
              "true": "4963994f-13be-420b-9112-74bf8c894e0d"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Is Protect Analysis Required?"
          },
          "dee8fecb-c95c-4d22-9809-2c02f4e6e03e": {
            "x": 1703,
            "y": 400.921875,
            "connections": {
              "outcome": "9abd1c6e-8d94-44d7-b069-f02253b8432f"
            },
            "nodeType": "AccountLockoutNode",
            "displayName": "Disable User's Account"
          },
          "e4e01a2d-e8f3-4e9e-a689-b9c99de24cd5": {
            "x": 1786,
            "y": 157.015625,
            "connections": {
              "false": "8f52ba40-8f23-4e00-96ad-7b3f3c2535d3",
              "true": "af58dc93-e794-4bdd-a9f9-ea5cd2a645d1"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "MFA Device Registration"
          },
          "f19d113e-a3df-4535-aef6-5041e4df2ae0": {
            "x": 280,
            "y": 742.03125,
            "connections": {
              "true": "95d9c464-8663-426b-a363-49fc26bd330b"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set p1ProtectAction As Init"
          },
          "f30183e3-a226-4f6a-93ca-8cd9a0f50acd": {
            "x": 2724,
            "y": 302.421875,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "AccountActiveDecisionNode",
            "displayName": "Account Active Decision"
          },
          "f70ad4cd-0ff7-4b60-8338-08d5c01d5a19": {
            "x": 293,
            "y": 206.015625,
            "connections": {
              "localAuthentication": "b911f755-bd73-488a-9388-8075ea94c5c4",
              "socialAuthentication": "ac2efb8e-6285-415e-9915-83111c65e767"
            },
            "nodeType": "PageNode",
            "displayName": "Collect Username"
          },
          "2f14720f-0bd1-48e6-a029-3c3b134fd0f0": {
            "x": 310,
            "y": 1324.015625,
            "connections": {
              "DONE": "b3f922e6-ae60-4110-8243-44b64af0e85a"
            },
            "nodeType": "PollingWaitNode",
            "displayName": "Polling Wait Node"
          }
        },
        "staticNodes": {
          "startNode": {
            "x": 50,
            "y": 250
          },
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 3038,
            "y": 299
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 2392,
            "y": 663
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "11f1b753-d2d9-4f53-b53d-f3fc10f85d45": {
          "_id": "11f1b753-d2d9-4f53-b53d-f3fc10f85d45",
          "_rev": "1616001665",
          "identityResource": "managed/alpha_user",
          "_type": {
            "_id": "RequiredAttributesDecisionNode",
            "name": "Required Attributes Present",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "1d486ca9-dbee-40a0-a256-132fbe86d8b0": {
          "_id": "1d486ca9-dbee-40a0-a256-132fbe86d8b0",
          "_rev": "655112858",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "246b9682-d15b-4ba7-ab77-38010b668194": {
          "_id": "246b9682-d15b-4ba7-ab77-38010b668194",
          "_rev": "-1901483094",
          "nodes": [
            {
              "_id": "63abce46-1d2e-4335-9673-80706688a4c7",
              "nodeType": "AttributeCollectorNode",
              "displayName": "Attribute Collector"
            },
            {
              "_id": "6bedf470-0d56-4ab4-9e8c-fd2938790bca",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Input"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Create Your Profile"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "28d13b09-47c5-4731-b490-a35ca976a540": {
          "_id": "28d13b09-47c5-4731-b490-a35ca976a540",
          "_rev": "960154454",
          "emailSuspendMessage": {
            "en": "An email has been sent to the address you entered. Click the link in that email to proceed."
          },
          "emailTemplateName": "registration",
          "identityAttribute": "userName",
          "emailAttribute": "mail",
          "objectLookup": false,
          "_type": {
            "_id": "EmailSuspendNode",
            "name": "Email Suspend Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "3c408b9a-5caa-45e1-9d44-5ae67dcae13d": {
          "_id": "3c408b9a-5caa-45e1-9d44-5ae67dcae13d",
          "_rev": "-517088041",
          "nodes": [
            {
              "_id": "923fa8f9-1058-4362-9464-9b9d65c32b20",
              "nodeType": "AttributeCollectorNode",
              "displayName": "Attribute Collector"
            },
            {
              "_id": "e840d2ed-f7d2-4378-b8c9-413eb63bc730",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Input"
            },
            {
              "_id": "16d22b5b-6bff-4da8-9c8d-bb082c9c3954",
              "nodeType": "AcceptTermsAndConditionsNode",
              "displayName": "Accept Terms and Conditions"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Create Your Profile"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "3f842bf6-22dd-4a2f-aad7-967a5d78fb4b": {
          "_id": "3f842bf6-22dd-4a2f-aad7-967a5d78fb4b",
          "_rev": "170285751",
          "tree": "CIAM Passwordless - Threat Detection Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "40db49df-1875-459e-8eb5-3a77c98d78f2": {
          "_id": "40db49df-1875-459e-8eb5-3a77c98d78f2",
          "_rev": "906762526",
          "status": "FAILED",
          "_type": {
            "_id": "product-PingOneProtectResultNode",
            "name": "PingOne Protect Result",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "435058ab-fb60-42aa-a3fa-273ac2e2126b": {
          "_id": "435058ab-fb60-42aa-a3fa-273ac2e2126b",
          "_rev": "492940005",
          "identityResource": "managed/alpha_user",
          "_type": {
            "_id": "CreateObjectNode",
            "name": "Create Object",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "CREATED",
              "displayName": "Created"
            },
            {
              "id": "FAILURE",
              "displayName": "Failed"
            }
          ]
        },
        "4963994f-13be-420b-9112-74bf8c894e0d": {
          "_id": "4963994f-13be-420b-9112-74bf8c894e0d",
          "_rev": "1816863068",
          "script": "98b8fa72-3274-4c77-af5f-3cceb8706c7f",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "flowType",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "544305b2-66fd-4962-a450-af47e72c4710": {
          "_id": "544305b2-66fd-4962-a450-af47e72c4710",
          "_rev": "330846515",
          "status": "SUCCESS",
          "_type": {
            "_id": "product-PingOneProtectResultNode",
            "name": "PingOne Protect Result",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "65fe908c-d056-4ab4-b6cf-e6ca6720d972": {
          "_id": "65fe908c-d056-4ab4-b6cf-e6ca6720d972",
          "_rev": "-1114703839",
          "script": "1dad0550-6205-45ee-84db-7f2b3cf80676",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id",
            "ciam_allowedMFATypes"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "8aa2df04-592b-4c0b-827e-9782e2477f19": {
          "_id": "8aa2df04-592b-4c0b-827e-9782e2477f19",
          "_rev": "-1589530359",
          "script": "00f3eaed-ac1b-4737-b0f9-f2b0a825360f",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "p1ProtectAction",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "8f52ba40-8f23-4e00-96ad-7b3f3c2535d3": {
          "_id": "8f52ba40-8f23-4e00-96ad-7b3f3c2535d3",
          "_rev": "865032930",
          "script": "40447d05-8335-4698-97a5-7be5edd6eb25",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "936df7c1-6b47-47e1-9f1b-906eee1e254d": {
          "_id": "936df7c1-6b47-47e1-9f1b-906eee1e254d",
          "_rev": "1934668498",
          "emailTemplateName": "welcome",
          "identityAttribute": "userName",
          "emailAttribute": "mail",
          "_type": {
            "_id": "EmailTemplateNode",
            "name": "Email Template Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "EMAIL_SENT",
              "displayName": "Email Sent"
            },
            {
              "id": "EMAIL_NOT_SENT",
              "displayName": "Email Not Sent"
            }
          ]
        },
        "95d9c464-8663-426b-a363-49fc26bd330b": {
          "_id": "95d9c464-8663-426b-a363-49fc26bd330b",
          "_rev": "1495665107",
          "tree": "CIAM Passwordless - Threat Detection Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "9abd1c6e-8d94-44d7-b069-f02253b8432f": {
          "_id": "9abd1c6e-8d94-44d7-b069-f02253b8432f",
          "_rev": "998174301",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "ac2efb8e-6285-415e-9915-83111c65e767": {
          "_id": "ac2efb8e-6285-415e-9915-83111c65e767",
          "_rev": "818753783",
          "clientType": "BROWSER",
          "script": "58c824ae-84ed-4724-82cd-db128fc3f6c",
          "usernameAttribute": "userName",
          "_type": {
            "_id": "SocialProviderHandlerNodeV2",
            "name": "Social Provider Handler Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "ACCOUNT_EXISTS",
              "displayName": "Account exists"
            },
            {
              "id": "NO_ACCOUNT",
              "displayName": "No account exists"
            },
            {
              "id": "SOCIAL_AUTH_INTERRUPTED",
              "displayName": "Social auth interrupted"
            }
          ]
        },
        "af58dc93-e794-4bdd-a9f9-ea5cd2a645d1": {
          "_id": "af58dc93-e794-4bdd-a9f9-ea5cd2a645d1",
          "_rev": "-1438441954",
          "lockAction": "UNLOCK",
          "_type": {
            "_id": "AccountLockoutNode",
            "name": "Account Lockout",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "b3f922e6-ae60-4110-8243-44b64af0e85a": {
          "_id": "b3f922e6-ae60-4110-8243-44b64af0e85a",
          "_rev": "-641965256",
          "script": "f402e7a4-22d6-4406-8faf-d92dc1e35db6",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "ciam_allowedMFATypes",
            "ciam_protectAnalysisRequired",
            "ciam_magicLinkEnabled"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "b911f755-bd73-488a-9388-8075ea94c5c4": {
          "_id": "b911f755-bd73-488a-9388-8075ea94c5c4",
          "_rev": "-1822211950",
          "script": "32a223c5-838f-4376-8223-ae9c16643dae",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_protectAnalysisRequired"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "ba55535f-3fcf-4896-8698-3103dd011e8b": {
          "_id": "ba55535f-3fcf-4896-8698-3103dd011e8b",
          "_rev": "-603011497",
          "_type": {
            "_id": "AcceptTermsAndConditionsNode",
            "name": "Accept Terms and Conditions",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "ce8778f6-6c6a-418c-a561-ffe2ae295e1a": {
          "_id": "ce8778f6-6c6a-418c-a561-ffe2ae295e1a",
          "_rev": "1970873164",
          "script": "32a223c5-838f-4376-8223-ae9c16643dae",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_protectAnalysisRequired"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "dee8fecb-c95c-4d22-9809-2c02f4e6e03e": {
          "_id": "dee8fecb-c95c-4d22-9809-2c02f4e6e03e",
          "_rev": "1457491450",
          "lockAction": "LOCK",
          "_type": {
            "_id": "AccountLockoutNode",
            "name": "Account Lockout",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "e4e01a2d-e8f3-4e9e-a689-b9c99de24cd5": {
          "_id": "e4e01a2d-e8f3-4e9e-a689-b9c99de24cd5",
          "_rev": "-1756588613",
          "tree": "CIAM Passwordless - MFA Device Registration Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "f19d113e-a3df-4535-aef6-5041e4df2ae0": {
          "_id": "f19d113e-a3df-4535-aef6-5041e4df2ae0",
          "_rev": "-476491571",
          "script": "bf16588d-6e67-4cfe-83a9-c877de085710",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "p1ProtectAction",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "f30183e3-a226-4f6a-93ca-8cd9a0f50acd": {
          "_id": "f30183e3-a226-4f6a-93ca-8cd9a0f50acd",
          "_rev": "1300247698",
          "_type": {
            "_id": "AccountActiveDecisionNode",
            "name": "Account Active Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "f70ad4cd-0ff7-4b60-8338-08d5c01d5a19": {
          "_id": "f70ad4cd-0ff7-4b60-8338-08d5c01d5a19",
          "_rev": "1075927329",
          "nodes": [
            {
              "_id": "96f1112a-5a03-4b8a-898f-7156a2ce36f8",
              "nodeType": "ValidatedUsernameNode",
              "displayName": "Platform Username"
            },
            {
              "_id": "96c643a1-2213-433d-a781-726bfe84acab",
              "nodeType": "AcceptTermsAndConditionsNode",
              "displayName": "Accept Terms and Conditions"
            },
            {
              "_id": "571731db-820c-4ad1-ae6a-611cf08828e9",
              "nodeType": "SelectIdPNode",
              "displayName": "Select Identity Provider"
            }
          ],
          "pageDescription": {
            "en": "Signing up is fast and easy.<br>Already have an account? <a href='#/service/CIAM Passwordless - Authentication Main Journey'>Sign In</a>"
          },
          "pageHeader": {
            "en": "Sign Up"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "socialAuthentication",
              "displayName": "Social Authentication"
            },
            {
              "id": "localAuthentication",
              "displayName": "Local Authentication"
            }
          ]
        },
        "2f14720f-0bd1-48e6-a029-3c3b134fd0f0": {
          "_id": "2f14720f-0bd1-48e6-a029-3c3b134fd0f0",
          "_rev": "1772435460",
          "spamDetectionTolerance": 3,
          "spamDetectionEnabled": false,
          "exitMessage": {},
          "waitingMessage": {
            "en": "Loading..."
          },
          "secondsToWait": 2,
          "exitable": false,
          "_type": {
            "_id": "PollingWaitNode",
            "name": "Polling Wait Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "DONE",
              "displayName": "Done"
            }
          ]
        }
      },
      "innerNodes": {
        "63abce46-1d2e-4335-9673-80706688a4c7": {
          "_id": "63abce46-1d2e-4335-9673-80706688a4c7",
          "_rev": "1940566684",
          "attributesToCollect": [
            "givenName",
            "sn",
            "mail"
          ],
          "identityAttribute": "userName",
          "validateInputs": true,
          "required": true,
          "_type": {
            "_id": "AttributeCollectorNode",
            "name": "Attribute Collector",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "6bedf470-0d56-4ab4-9e8c-fd2938790bca": {
          "_id": "6bedf470-0d56-4ab4-9e8c-fd2938790bca",
          "_rev": "353807680",
          "script": "5127eaff-3606-4ee4-b9cd-808d193ce838",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "923fa8f9-1058-4362-9464-9b9d65c32b20": {
          "_id": "923fa8f9-1058-4362-9464-9b9d65c32b20",
          "_rev": "-1023374232",
          "attributesToCollect": [
            "userName",
            "givenName",
            "sn"
          ],
          "identityAttribute": "userName",
          "validateInputs": true,
          "required": true,
          "_type": {
            "_id": "AttributeCollectorNode",
            "name": "Attribute Collector",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "e840d2ed-f7d2-4378-b8c9-413eb63bc730": {
          "_id": "e840d2ed-f7d2-4378-b8c9-413eb63bc730",
          "_rev": "-286760685",
          "script": "5127eaff-3606-4ee4-b9cd-808d193ce838",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "16d22b5b-6bff-4da8-9c8d-bb082c9c3954": {
          "_id": "16d22b5b-6bff-4da8-9c8d-bb082c9c3954",
          "_rev": "-1487603080",
          "_type": {
            "_id": "AcceptTermsAndConditionsNode",
            "name": "Accept Terms and Conditions",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "96f1112a-5a03-4b8a-898f-7156a2ce36f8": {
          "_id": "96f1112a-5a03-4b8a-898f-7156a2ce36f8",
          "_rev": "-2091843289",
          "usernameAttribute": "userName",
          "validateInput": true,
          "_type": {
            "_id": "ValidatedUsernameNode",
            "name": "Platform Username",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "96c643a1-2213-433d-a781-726bfe84acab": {
          "_id": "96c643a1-2213-433d-a781-726bfe84acab",
          "_rev": "537304970",
          "_type": {
            "_id": "AcceptTermsAndConditionsNode",
            "name": "Accept Terms and Conditions",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "571731db-820c-4ad1-ae6a-611cf08828e9": {
          "_id": "571731db-820c-4ad1-ae6a-611cf08828e9",
          "_rev": "-582314285",
          "includeLocalAuthentication": true,
          "filteredProviders": [
            "Google",
            "Facebook"
          ],
          "identityAttribute": "mail",
          "passwordAttribute": "password",
          "offerOnlyExisting": false,
          "_type": {
            "_id": "SelectIdPNode",
            "name": "Select Identity Provider",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "socialAuthentication",
              "displayName": "Social Authentication"
            },
            {
              "id": "localAuthentication",
              "displayName": "Local Authentication"
            }
          ]
        }
      },
      "scripts": {
        "98b8fa72-3274-4c77-af5f-3cceb8706c7f": {
          "_id": "98b8fa72-3274-4c77-af5f-3cceb8706c7f",
          "name": "OOTB Passwordless - Set Flow Type As Registration Script",
          "description": "Script to set flowType as Registration",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: null\\n    - Script Outputs: \\\"flowType\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    // Setting the flowType as Registration, this will be used to differentiate paths in Threat Detection Journey\\n    nodeState.putShared(\\\"flowType\\\", \\\"Registration\\\");\\n    outcome = \\\"true\\\";\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "1dad0550-6205-45ee-84db-7f2b3cf80676": {
          "_id": "1dad0550-6205-45ee-84db-7f2b3cf80676",
          "name": "OOTB Passwordless - Set Email Verification Status Script",
          "description": "Script to set email verification status in user's profile",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState constiable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"_id\\\", \\\"ciam_allowedMFATypes\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\n// Caution: This script might auto-enroll the \\\"EMAIL\\\" as a MFA method in user's profile\\n\\ntry {\\n    // Get the userId\\n    var userId = nodeState.get(\\\"_id\\\");\\n    \\n    // Update the email verification status attribute of user to \\\"true\\\"\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{\\\"operation\\\":\\\"replace\\\", \\\"field\\\":\\\"/custom_emailVerified\\\", \\\"value\\\":\\\"true\\\"}]);\\n\\n    // Enroll email as an MFA authentication method\\n    var allowedMFAMethods = nodeState.get(\\\"ciam_allowedMFATypes\\\");\\n    var mfaDevicesObj = openidm.read(\\\"managed/alpha_user/\\\" + userId, null, [\\\"custom_mfaDevices\\\"]);\\n    var mfaDevices = (mfaDevicesObj && mfaDevicesObj.custom_mfaDevices) ? mfaDevicesObj.custom_mfaDevices : [];\\n\\n    // By default returned mfaDevices is of Object type so values are parsed in a new array\\n    var usableMFADevices = [];\\n   \\n    mfaDevices.forEach(device => {\\n        usableMFADevices.push(device);\\n    });\\n\\n    var emailMFAAllowed = false;\\n    allowedMFAMethods.forEach(device => {\\n        if(device === \\\"EMAIL\\\") emailMFAAllowed = true;\\n    });\\n    \\n    // Add email to the MFA Devices list, if not already present \\n    if(emailMFAAllowed && !usableMFADevices.includes(\\\"EMAIL\\\")) usableMFADevices.push(\\\"EMAIL\\\");\\n    \\n    // Update the custom_mfaDevices Object\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{\\\"operation\\\":\\\"replace\\\", \\\"field\\\":\\\"/custom_mfaDevices\\\", \\\"value\\\":usableMFADevices}]);\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "00f3eaed-ac1b-4737-b0f9-f2b0a825360f": {
          "_id": "00f3eaed-ac1b-4737-b0f9-f2b0a825360f",
          "name": "OOTB Passwordless - Set Protect Action As Eval Script",
          "description": "Script to set Protect action as Eval, will be used in Threat Detection Journey to evaluate Risk",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: null\\n    - Script Outputs: \\\"p1ProtectAction\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {  \\n    // Action to be taken in threat detection child journey\\n    nodeState.putShared(\\\"p1ProtectAction\\\", \\\"eval\\\");\\n    // Go to true\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "40447d05-8335-4698-97a5-7be5edd6eb25": {
          "_id": "40447d05-8335-4698-97a5-7be5edd6eb25",
          "name": "OOTB Passwordless - Delete User Entry Script",
          "description": "Script to delete a user's entry from directory service if they fail during registration process",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"_id\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    var userId = nodeState.get(\\\"_id\\\");\\n    // Delete the user entry from the data store\\n    openidm.delete('managed/alpha_user/'+ userId, null);\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "f402e7a4-22d6-4406-8faf-d92dc1e35db6": {
          "_id": "f402e7a4-22d6-4406-8faf-d92dc1e35db6",
          "name": "OOTB Passwordless - Initialize Variables Script",
          "description": "Script to Initialize variables that will be used further in the Journey",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/* Prerequisites for this Journey Pack\\n       -Create following custom attributes before proceeding:\\n           1. custom_emailVerified - string (To keep track that user has verified their emailAddress)\\n           2. custom_protectActivityCity - string (User's P1 Protect Activity City, used in notification template)\\n           3. custom_protectActivityState - string (User's P1 Protect Activity City, used in notification template)\\n           4. custom_protectDeviceOS - string (User's P1 Protect Activity City, used in notification template)\\n           5. custom_mfaDevices - array of string (To set, fetch and display user's registered MFA devices)\\n           6. custom_latestMFADevice - string (Recent MFA device registered by user, used in notification template)\\n       -Configuration Check\\n           1. Set the environment variable p1-protect-analysis-required. If it is not set, the value specified in the code below for \\\"protectAnalysisRequired\\\" var will be used.\\n           2. Threat Detection Inner Journey (If Protect Analysis Is Required):\\n               a. Update the PingOne Worker Service ID (P1 Worker App), Risk Policy ID* in following nodes: (*Optional, if not provided default will be considered)\\n                   -- P1 Protect Initialize (1 instance)\\n                   -- P1 Protect Evaluation (2 instances)\\n           3. MFA Registration Inner Journey (If \\\"SMS\\\", or \\\"VOICE\\\" are opted in below \\\"allowedMFATyps\\\" array):\\n               a. Update the required fields in:\\n                   -- OTP SMS Sender Node\\n                   -- Twilio Verify Lookup\\n                   -- Twilio Verify Sender\\n           4. MFA Authenticaion Inner Journey (If \\\"EMAIL\\\", \\\"SMS\\\", or \\\"VOICE\\\" are opted in below \\\"allowedMFATyps\\\" array):\\n               a. Update the required fields in:\\n                   -- OTP Email Sender Node\\n                   -- OTP SMS Sender Node\\n                   -- Twilio Verify Lookup\\n                   -- Twilio Verify Sender\\n*/\\n\\n\\n// Allowed MFA device types by the Admin\\nvar allowedMFATypes = [\\\"FIDO2\\\", \\\"OATH\\\", \\\"PUSH\\\", \\\"EMAIL\\\", \\\"SMS\\\", \\\"VOICE\\\"];\\nnodeState.putShared(\\\"ciam_allowedMFATypes\\\", allowedMFATypes);\\n\\n// Check if Admin wants to enable/disable protectAnalysis\\nvar protectAnalysisRequired = true;\\nnodeState.putShared(\\\"ciam_protectAnalysisRequired\\\", protectAnalysisRequired);\\n\\n// Check if Admin wants to allow OOB Magic Link as an MFA authentication method\\nvar magicLinkEnabled = true;\\nnodeState.putShared(\\\"ciam_magicLinkEnabled\\\", magicLinkEnabled);\\n\\noutcome = \\\"true\\\";\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "32a223c5-838f-4376-8223-ae9c16643dae": {
          "_id": "32a223c5-838f-4376-8223-ae9c16643dae",
          "name": "OOTB Passwordless - Protect Analysis Required Script",
          "description": "Script to check if P1 Protect analysis is required or not",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"ciam_protectAnalysisRequired\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\", \\\"false\\\"\\n*/\\n\\n// Prerequisites: Set the environment variable: p1-protect-analysis-required\\n\\ntry {\\n    // Get Protect analysis required or not from the Environment variable\\n    var protectAnalysisRequired = (systemEnv.getProperty(\\\"esv.p1.protect.analysis.required\\\") && systemEnv.getProperty(\\\"esv.p1.protect.analysis.required\\\").length) ? systemEnv.getProperty(\\\"esv.p1.protect.analysis.required\\\") : nodeState.get(\\\"ciam_protectAnalysisRequired\\\");\\n    \\n    if(protectAnalysisRequired === \\\"true\\\" || protectAnalysisRequired === true) outcome = \\\"true\\\";\\n    else outcome = \\\"false\\\";\\n    // Go to outcome\\n    action.goTo(outcome);\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "bf16588d-6e67-4cfe-83a9-c877de085710": {
          "_id": "bf16588d-6e67-4cfe-83a9-c877de085710",
          "name": "OOTB Passwordless - Set Protect Action As Init Script",
          "description": "Script to set Protect action as Init, will be used in Threat Detection Journey to initialize Protect SDK",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: null\\n    - Script Outputs: \\\"p1ProtectAction\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    // Action to be taken in threat detection child journey\\n    nodeState.putShared(\\\"p1ProtectAction\\\", \\\"init\\\");\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "5127eaff-3606-4ee4-b9cd-808d193ce838": {
          "_id": "5127eaff-3606-4ee4-b9cd-808d193ce838",
          "name": "OOTB Passwordless - Validate Name and Email Address Script",
          "description": "Script to validate name and email address, sets constraints",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: null\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    // Validate Inputs\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    const firstName = document.querySelectorAll('input[data-vv-as=\\\\\\\"First Name\\\\\\\"]')[0]; \\\\n\\\\\\n                    const lastName = document.querySelectorAll('input[data-vv-as=\\\\\\\"Last Name\\\\\\\"]')[0]; \\\\n\\\\\\n                    const emailAddress = document.querySelectorAll('input[data-vv-as=\\\\\\\"Email Address\\\\\\\"]')[0]; \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                    \\\\n\\\\\\n                    if (firstName) firstName.setAttribute('maxlength', '255'); \\\\n\\\\\\n                    if (lastName) lastName.setAttribute('maxlength', '255'); \\\\n\\\\\\n                    if (emailAddress) emailAddress.setAttribute('maxlength', '255'); \\\\n\\\\\\n                    \\\\n\\\\\\n                    if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                    function validateFields() { \\\\n\\\\\\n                        const isValid = firstName.value.length > 0 && lastName.value.length > 0 && emailAddress.value.length > 0; \\\\n\\\\\\n                        submitBtn.disabled = !isValid; \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                        // Ensure the fields are not exceeding max length even if modified in browser \\\\n\\\\\\n                        if (firstName.value.length > 255 || lastName.value.length > 255 || emailAddress.value.length > 255) { \\\\n\\\\\\n                            event.preventDefault(); \\\\n\\\\\\n                            submitBtn.disabled = true; \\\\n\\\\\\n                        } \\\\n\\\\\\n                        const isValid = firstName.value.length > 0 && lastName.value.length > 0 && emailAddress.value.length > 0; \\\\n\\\\\\n                        if (!isValid) { \\\\n\\\\\\n                            event.preventDefault(); \\\\n\\\\\\n                            submitBtn.disabled = true; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    }); \\\\n\\\\\\n                    \\\\n\\\\\\n                    firstName.addEventListener('input', validateFields); \\\\n\\\\\\n                    lastName.addEventListener('input', validateFields); \\\\n\\\\\\n                    emailAddress.addEventListener('input', validateFields); \\\\n\\\\\\n        \\\");\\n    }\\n    \\n    if (callbacks.isEmpty()) {                \\n        // Request callbacks\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {
        "registration": {
          "_id": "emailTemplate/registration",
          "defaultLocale": "en",
          "enabled": true,
          "from": "",
          "html": {
            "en": "<html><body><h3>This is your registration email.</h3><p><a href=\"{{object.resumeURI}}\">Email verification link</a></p></body></html>",
            "fr": "<html><body><h3>Ceci est votre mail d'inscription.</h3><p><a href=\"{{object.resumeURI}}\">Lien de vérification email</a></p></body></html>"
          },
          "message": {
            "en": "<html><head></head><body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\"><div class=\"content\" style=\"background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;\"><h3>This is your registration email.</h3><p><a href=\"{{object.resumeURI}}\" style=\"text-decoration: none; color: #109cf1;\">Email verification link</a></p></div></body></html>",
            "fr": "<html><head></head><body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\"><div class=\"content\" style=\"background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;\"><h3>Ceci est votre mail d'inscription.</h3><p><a href=\"{{object.resumeURI}}\" style=\"text-decoration: none; color: #109cf1;\">Lien de vérification email</a></p></div></body></html>"
          },
          "mimeType": "text/html",
          "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
          "subject": {
            "en": "Register new account",
            "fr": "Créer un nouveau compte"
          }
        },
        "welcome": {
          "_id": "emailTemplate/welcome",
          "defaultLocale": "en",
          "enabled": true,
          "from": "",
          "html": {
            "en": "<html><body><p>Welcome. Your username is '{{object.userName}}'.</p></body></html>"
          },
          "message": {
            "en": "<html><head></head><body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\"><div class=\"content\" style=\"background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;\"><p>Welcome. Your username is '{{object.userName}}'.</p></div></body></html>"
          },
          "mimeType": "text/html",
          "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
          "subject": {
            "en": "Your account has been created"
          }
        }
      },
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    }
  }
}