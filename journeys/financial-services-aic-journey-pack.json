{
  "meta": {
    "origin": "",
    "exportedBy": "",
    "exportDate": "",
    "exportTool": "platform-admin ui tree export",
    "exportToolVersion": "1.0",
    "treesSelectedForExport": [
      "Money Transfer - Main Journey"
    ],
    "innerTreesIncluded": [
      "Money Transfer -Threat Detection - Inner Journey",
      "Money Transfer - MFA Authentication - Inner Journey",
      "Money Transfer SignOn - Inner Journey",
      "Money Transfer - Inner Journey"
    ]
  },
  "trees": {
    "Money Transfer - MFA Authentication - Inner Journey": {
      "tree": {
        "_id": "Money Transfer - MFA Authentication - Inner Journey",
        "_rev": "1665915510",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"Money Transfer\"]"
        },
        "entryNodeId": "bc7d910e-cea5-4e8f-8e59-56151e3df346",
        "innerTreeOnly": true,
        "nodes": {
          "042f50b1-d3e9-4511-96e7-60dd8a2a4025": {
            "connections": {
              "true": "fce17864-d733-456b-8e29-96e7972c0fb7"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 1379,
            "y": 15.015625
          },
          "067c2e5f-65b3-4af9-bd2f-1afcb16fc01b": {
            "connections": {
              "true": "bea98a2a-5e1f-4e51-8829-0136129f15dd"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 535,
            "y": 2349.015625
          },
          "06f12e1e-ffdd-4138-b9af-31dfdc2e1d69": {
            "connections": {
              "true": "45fc621d-5870-416d-b9e4-59ce850a7c95"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 527.75,
            "y": 1142.01953125
          },
          "07689407-ba36-4d6a-b71d-e23c24e7ce6d": {
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "False": "993401f9-829b-4cd7-a651-44b2ac06dd38",
              "True": "c78277b4-b5b4-477f-9f48-5993ef97a9e4"
            },
            "displayName": "Twilio Identifier",
            "nodeType": "VerifyAuthIdentifierNode",
            "x": 544,
            "y": 114.03125
          },
          "133f3a7d-96f6-4dd1-9eca-284030d2a54d": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "06f12e1e-ffdd-4138-b9af-31dfdc2e1d69"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 561,
            "y": 989.515625
          },
          "1a1eff9c-5943-4026-a867-a3b0ab544ced": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "042f50b1-d3e9-4511-96e7-60dd8a2a4025"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 1404,
            "y": 133
          },
          "1bef495e-9d8e-4aae-8991-e2570fac5452": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "067c2e5f-65b3-4af9-bd2f-1afcb16fc01b"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 578,
            "y": 2188.515625
          },
          "23b4746a-e2b2-47a0-81a0-590f52749b72": {
            "connections": {
              "DONE": "94ed4ca5-fe19-4023-b41e-db3590f6c402",
              "EXITED": "c547665c-f9e1-44b3-9ac0-76b5b8d59127"
            },
            "displayName": "Push Wait Node",
            "nodeType": "PushWaitNode",
            "x": 925,
            "y": 2648.015625
          },
          "2b43b55b-254e-44cb-a299-15e6fd0388ce": {
            "connections": {
              "outcome": "b665e929-a6e2-4ca4-a955-3d0f17b7d941"
            },
            "displayName": "HOTP Generator",
            "nodeType": "OneTimePasswordGeneratorNode",
            "x": 545,
            "y": 37.015625
          },
          "3898bd13-3b92-4989-85be-df9ae6621050": {
            "connections": {
              "true": "3d1a4b66-a53e-4e44-aadd-8cbd3bb4e957"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 1108,
            "y": 669.015625
          },
          "3d1a4b66-a53e-4e44-aadd-8cbd3bb4e957": {
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "false": "451298b1-3de0-4fc9-95ac-43f72a59cbc7",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Collect OTP",
            "nodeType": "PageNode",
            "x": 1101.984375,
            "y": 334.015625
          },
          "451298b1-3de0-4fc9-95ac-43f72a59cbc7": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "3898bd13-3b92-4989-85be-df9ae6621050"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 1402,
            "y": 328.015625
          },
          "45fc621d-5870-416d-b9e4-59ce850a7c95": {
            "connections": {
              "false": "133f3a7d-96f6-4dd1-9eca-284030d2a54d",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Enter Recovery Code",
            "nodeType": "PageNode",
            "x": 553,
            "y": 699.015625
          },
          "6d3b862c-d6b0-44bb-828f-15c4592fef24": {
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "failure": "e301438c-0bd0-429c-ab0c-66126501069a",
              "noDevice": "e301438c-0bd0-429c-ab0c-66126501069a",
              "recoveryCode": "45fc621d-5870-416d-b9e4-59ce850a7c95",
              "success": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "unsupported": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "displayName": "WebAuthn Authentication Node",
            "nodeType": "WebAuthnAuthenticationNode",
            "x": 530,
            "y": 444.015625
          },
          "6d61c729-a85b-4a94-a6ef-a0553e29a3c5": {
            "connections": {
              "error": "993401f9-829b-4cd7-a651-44b2ac06dd38",
              "true": "3d1a4b66-a53e-4e44-aadd-8cbd3bb4e957"
            },
            "displayName": "Twilio Verify Sender",
            "nodeType": "VerifyAuthSenderNode",
            "x": 824,
            "y": 296.03125
          },
          "8f31266b-2f6a-4244-a260-7e18e0511dfc": {
            "connections": {
              "true": "a01858e0-bcb8-47a2-ac7f-d303ff8370cd"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 533,
            "y": 1270.015625
          },
          "94ed4ca5-fe19-4023-b41e-db3590f6c402": {
            "connections": {
              "EXPIRED": "f6996a21-0b6e-413f-bd3e-3fd31da3906c",
              "FALSE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "TRUE": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "WAITING": "23b4746a-e2b2-47a0-81a0-590f52749b72"
            },
            "displayName": "Push Result Verifier Node",
            "nodeType": "PushResultVerifierNode",
            "x": 903,
            "y": 2450.015625
          },
          "993401f9-829b-4cd7-a651-44b2ac06dd38": {
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "displayName": "Set Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 1134,
            "y": 847.03125
          },
          "a01858e0-bcb8-47a2-ac7f-d303ff8370cd": {
            "connections": {
              "false": "a71a425f-683e-493e-91c2-9d761e376108",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Enter Recovery Code",
            "nodeType": "PageNode",
            "x": 574,
            "y": 1568.015625
          },
          "a71a425f-683e-493e-91c2-9d761e376108": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "8f31266b-2f6a-4244-a260-7e18e0511dfc"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 574.7142857142858,
            "y": 1407.950892857143
          },
          "b665e929-a6e2-4ca4-a955-3d0f17b7d941": {
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "noMail": "e301438c-0bd0-429c-ab0c-66126501069a",
              "sent": "fce17864-d733-456b-8e29-96e7972c0fb7"
            },
            "displayName": "Send OTP Email",
            "nodeType": "ScriptedDecisionNode",
            "x": 824,
            "y": 8.03125
          },
          "bc7d910e-cea5-4e8f-8e59-56151e3df346": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "c77818a5-0f7e-454e-a6a7-2e70be1a2aac"
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 226,
            "y": 283.03125
          },
          "bea98a2a-5e1f-4e51-8829-0136129f15dd": {
            "connections": {
              "failureOutcome": "1bef495e-9d8e-4aae-8991-e2570fac5452",
              "notRegisteredOutcome": "e301438c-0bd0-429c-ab0c-66126501069a",
              "recoveryCodeOutcome": "a01858e0-bcb8-47a2-ac7f-d303ff8370cd",
              "successOutcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Enter Verification Code",
            "nodeType": "PageNode",
            "x": 575,
            "y": 1851.015625
          },
          "c3f6f4c1-f799-4b66-aa8f-8f4abfc1af16": {
            "connections": {
              "true": "c547665c-f9e1-44b3-9ac0-76b5b8d59127"
            },
            "displayName": "Set Invalid Code Error Message",
            "nodeType": "ScriptedDecisionNode",
            "x": 1170,
            "y": 2331.015625
          },
          "c547665c-f9e1-44b3-9ac0-76b5b8d59127": {
            "connections": {
              "false": "d96776f8-2fe7-4f3a-873a-3414f01134ba",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Enter Recovery Code",
            "nodeType": "PageNode",
            "x": 1201,
            "y": 2627.015625
          },
          "c77818a5-0f7e-454e-a6a7-2e70be1a2aac": {
            "connections": {
              "EMAIL": "2b43b55b-254e-44cb-a299-15e6fd0388ce",
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "FIDO2": "6d3b862c-d6b0-44bb-828f-15c4592fef24",
              "Magic Link": "fc580882-ae39-492c-ac6a-72442980232a",
              "OATH": "bea98a2a-5e1f-4e51-8829-0136129f15dd",
              "PUSH": "c872f0a9-5cc8-4ce0-970e-7945ed658c24",
              "SMS": "07689407-ba36-4d6a-b71d-e23c24e7ce6d",
              "VOICE": "d5df0824-9567-445e-b233-16a93a680e05"
            },
            "displayName": "Select Auth Device",
            "nodeType": "PageNode",
            "x": 220,
            "y": 468.421875
          },
          "c78277b4-b5b4-477f-9f48-5993ef97a9e4": {
            "connections": {
              "error": "993401f9-829b-4cd7-a651-44b2ac06dd38",
              "true": "3d1a4b66-a53e-4e44-aadd-8cbd3bb4e957"
            },
            "displayName": "Twilio Verify Sender",
            "nodeType": "VerifyAuthSenderNode",
            "x": 824,
            "y": 168.03125
          },
          "c872f0a9-5cc8-4ce0-970e-7945ed658c24": {
            "connections": {
              "NOT_REGISTERED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "SENT": "94ed4ca5-fe19-4023-b41e-db3590f6c402"
            },
            "displayName": "Push Sender",
            "nodeType": "PushAuthenticationSenderNode",
            "x": 573,
            "y": 2646.015625
          },
          "d5df0824-9567-445e-b233-16a93a680e05": {
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "False": "993401f9-829b-4cd7-a651-44b2ac06dd38",
              "True": "6d61c729-a85b-4a94-a6ef-a0553e29a3c5"
            },
            "displayName": "Twilio Identifier",
            "nodeType": "VerifyAuthIdentifierNode",
            "x": 547,
            "y": 266.03125
          },
          "d96776f8-2fe7-4f3a-873a-3414f01134ba": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "c3f6f4c1-f799-4b66-aa8f-8f4abfc1af16"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 1206,
            "y": 2467.015625
          },
          "f6996a21-0b6e-413f-bd3e-3fd31da3906c": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "c872f0a9-5cc8-4ce0-970e-7945ed658c24"
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 571,
            "y": 2475.015625
          },
          "fc580882-ae39-492c-ac6a-72442980232a": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Email Magic Link",
            "nodeType": "EmailSuspendNode",
            "x": 230,
            "y": 862.015625
          },
          "fce17864-d733-456b-8e29-96e7972c0fb7": {
            "connections": {
              "false": "1a1eff9c-5943-4026-a867-a3b0ab544ced",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Collect OTP",
            "nodeType": "PageNode",
            "x": 1100,
            "y": 21.015625
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1628,
            "y": 1175
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1267,
            "y": 1175
          },
          "startNode": {
            "x": 50,
            "y": 250
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "042f50b1-d3e9-4511-96e7-60dd8a2a4025": {
          "_id": "042f50b1-d3e9-4511-96e7-60dd8a2a4025",
          "_rev": "770389634",
          "script": "5259438a-2178-4280-be61-829225ddde73",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "067c2e5f-65b3-4af9-bd2f-1afcb16fc01b": {
          "_id": "067c2e5f-65b3-4af9-bd2f-1afcb16fc01b",
          "_rev": "-2044134166",
          "script": "5259438a-2178-4280-be61-829225ddde73",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "06f12e1e-ffdd-4138-b9af-31dfdc2e1d69": {
          "_id": "06f12e1e-ffdd-4138-b9af-31dfdc2e1d69",
          "_rev": "-1073709402",
          "script": "5259438a-2178-4280-be61-829225ddde73",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "07689407-ba36-4d6a-b71d-e23c24e7ce6d": {
          "_id": "07689407-ba36-4d6a-b71d-e23c24e7ce6d",
          "_rev": "-173211974",
          "identifierAttribute": "telephoneNumber",
          "identifierSharedState": "userIdentifier",
          "_type": {
            "_id": "VerifyAuthIdentifierNode",
            "name": "Twilio Identifier",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "True",
              "displayName": "True"
            },
            {
              "id": "False",
              "displayName": "False"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "133f3a7d-96f6-4dd1-9eca-284030d2a54d": {
          "_id": "133f3a7d-96f6-4dd1-9eca-284030d2a54d",
          "_rev": "1920523838",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "1a1eff9c-5943-4026-a867-a3b0ab544ced": {
          "_id": "1a1eff9c-5943-4026-a867-a3b0ab544ced",
          "_rev": "428669468",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "1bef495e-9d8e-4aae-8991-e2570fac5452": {
          "_id": "1bef495e-9d8e-4aae-8991-e2570fac5452",
          "_rev": "1092492113",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "23b4746a-e2b2-47a0-81a0-590f52749b72": {
          "_id": "23b4746a-e2b2-47a0-81a0-590f52749b72",
          "_rev": "125374639",
          "challengeMessage": {},
          "exitMessage": {},
          "waitingMessage": {},
          "secondsToWait": 5,
          "_type": {
            "_id": "PushWaitNode",
            "name": "Push Wait Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "DONE",
              "displayName": "Done"
            },
            {
              "id": "EXITED",
              "displayName": "Exit"
            }
          ]
        },
        "2b43b55b-254e-44cb-a299-15e6fd0388ce": {
          "_id": "2b43b55b-254e-44cb-a299-15e6fd0388ce",
          "_rev": "2088045854",
          "length": 6,
          "_type": {
            "_id": "OneTimePasswordGeneratorNode",
            "name": "HOTP Generator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "3898bd13-3b92-4989-85be-df9ae6621050": {
          "_id": "3898bd13-3b92-4989-85be-df9ae6621050",
          "_rev": "216102359",
          "script": "5259438a-2178-4280-be61-829225ddde73",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "3d1a4b66-a53e-4e44-aadd-8cbd3bb4e957": {
          "_id": "3d1a4b66-a53e-4e44-aadd-8cbd3bb4e957",
          "_rev": "445061081",
          "nodes": [
            {
              "_id": "a8f28748-0e48-42e3-b6ac-7274f83a68af",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate OTP"
            },
            {
              "_id": "eea57ec8-8380-40fc-8f93-032caaf02b39",
              "nodeType": "VerifyAuthCollectorDecisionNode",
              "displayName": "Twilio Verify Collector Decision"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Passcode"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        },
        "451298b1-3de0-4fc9-95ac-43f72a59cbc7": {
          "_id": "451298b1-3de0-4fc9-95ac-43f72a59cbc7",
          "_rev": "-1799027793",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "45fc621d-5870-416d-b9e4-59ce850a7c95": {
          "_id": "45fc621d-5870-416d-b9e4-59ce850a7c95",
          "_rev": "1826691848",
          "nodes": [
            {
              "_id": "e1cf5e73-ca82-4699-a2c5-31765f8dbcb9",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Recovery Code"
            },
            {
              "_id": "31207614-6777-4960-b57c-0eb5814df4f4",
              "nodeType": "RecoveryCodeCollectorDecisionNode",
              "displayName": "WEB_AUTHN Recovery Code Collector Decision"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Recovery Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "6d3b862c-d6b0-44bb-828f-15c4592fef24": {
          "_id": "6d3b862c-d6b0-44bb-828f-15c4592fef24",
          "_rev": "685055058",
          "detectSignCountMismatch": false,
          "requiresResidentKey": false,
          "asScript": true,
          "origins": [],
          "userVerificationRequirement": "PREFERRED",
          "isRecoveryCodeAllowed": true,
          "timeout": 60,
          "_type": {
            "_id": "WebAuthnAuthenticationNode",
            "name": "WebAuthn Authentication Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "unsupported",
              "displayName": "Unsupported"
            },
            {
              "id": "noDevice",
              "displayName": "No Device Registered"
            },
            {
              "id": "success",
              "displayName": "Success"
            },
            {
              "id": "failure",
              "displayName": "Failure"
            },
            {
              "id": "error",
              "displayName": "Client Error"
            },
            {
              "id": "recoveryCode",
              "displayName": "Recovery Code"
            }
          ]
        },
        "6d61c729-a85b-4a94-a6ef-a0553e29a3c5": {
          "_id": "6d61c729-a85b-4a94-a6ef-a0553e29a3c5",
          "_rev": "1312588751",
          "accountSID": "",
          "authToken": null,
          "channel": "CALL",
          "identifierSharedState": "userIdentifier",
          "serviceSID": "",
          "requestIdentifier": false,
          "_type": {
            "_id": "VerifyAuthSenderNode",
            "name": "Twilio Verify Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        },
        "8f31266b-2f6a-4244-a260-7e18e0511dfc": {
          "_id": "8f31266b-2f6a-4244-a260-7e18e0511dfc",
          "_rev": "1219251280",
          "script": "5259438a-2178-4280-be61-829225ddde73",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "94ed4ca5-fe19-4023-b41e-db3590f6c402": {
          "_id": "94ed4ca5-fe19-4023-b41e-db3590f6c402",
          "_rev": "1990826484",
          "_type": {
            "_id": "PushResultVerifierNode",
            "name": "Push Result Verifier Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "TRUE",
              "displayName": "Success"
            },
            {
              "id": "FALSE",
              "displayName": "Failure"
            },
            {
              "id": "EXPIRED",
              "displayName": "Expired"
            },
            {
              "id": "WAITING",
              "displayName": "Waiting"
            }
          ]
        },
        "993401f9-829b-4cd7-a651-44b2ac06dd38": {
          "_id": "993401f9-829b-4cd7-a651-44b2ac06dd38",
          "_rev": "-101490856",
          "script": "203816f3-a909-4a9a-b1cd-9c210244c015",
          "outcomes": [
            "true",
            "Error"
          ],
          "outputs": [
            "*"
          ],
          "inputs": [
            "*"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "a01858e0-bcb8-47a2-ac7f-d303ff8370cd": {
          "_id": "a01858e0-bcb8-47a2-ac7f-d303ff8370cd",
          "_rev": "1454755854",
          "nodes": [
            {
              "_id": "7aa5557e-4450-4f39-948e-67c482f1e63a",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Recovery Code"
            },
            {
              "_id": "6019c89a-80a6-426e-bdfb-bc93d59e49dc",
              "nodeType": "RecoveryCodeCollectorDecisionNode",
              "displayName": "OATH Recovery Code Collector Decision"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Recovery Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "a71a425f-683e-493e-91c2-9d761e376108": {
          "_id": "a71a425f-683e-493e-91c2-9d761e376108",
          "_rev": "823672205",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "b665e929-a6e2-4ca4-a955-3d0f17b7d941": {
          "_id": "b665e929-a6e2-4ca4-a955-3d0f17b7d941",
          "_rev": "-1205379883",
          "script": "32caa211-e982-40a1-9b8b-db1d99388786",
          "outcomes": [
            "sent",
            "noMail",
            "error"
          ],
          "outputs": [
            "*"
          ],
          "inputs": [
            "_id",
            "oneTimePassword"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "sent",
              "displayName": "sent"
            },
            {
              "id": "noMail",
              "displayName": "noMail"
            },
            {
              "id": "error",
              "displayName": "error"
            }
          ]
        },
        "bc7d910e-cea5-4e8f-8e59-56151e3df346": {
          "_id": "bc7d910e-cea5-4e8f-8e59-56151e3df346",
          "_rev": "2127843494",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "bea98a2a-5e1f-4e51-8829-0136129f15dd": {
          "_id": "bea98a2a-5e1f-4e51-8829-0136129f15dd",
          "_rev": "-1092322304",
          "nodes": [
            {
              "_id": "30665254-b9ed-4499-84f1-775228698f7b",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Verification Code"
            },
            {
              "_id": "e89a2745-85a5-4521-901a-176b55818de9",
              "nodeType": "OathTokenVerifierNode",
              "displayName": "OATH Token Verifier"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Verification Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            },
            {
              "id": "recoveryCodeOutcome",
              "displayName": "Recovery Code"
            }
          ]
        },
        "c3f6f4c1-f799-4b66-aa8f-8f4abfc1af16": {
          "_id": "c3f6f4c1-f799-4b66-aa8f-8f4abfc1af16",
          "_rev": "638458466",
          "script": "5259438a-2178-4280-be61-829225ddde73",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "invalidCodeErrorMessage",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "c547665c-f9e1-44b3-9ac0-76b5b8d59127": {
          "_id": "c547665c-f9e1-44b3-9ac0-76b5b8d59127",
          "_rev": "-738325832",
          "nodes": [
            {
              "_id": "bfb1bd02-3592-42f3-bffd-6050fa633f52",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Recovery Code"
            },
            {
              "_id": "0105b8cb-f377-4219-babb-b60ccc67ffff",
              "nodeType": "RecoveryCodeCollectorDecisionNode",
              "displayName": "PUSH Recovery Code Collector Decision"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Enter Recovery Code"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "c77818a5-0f7e-454e-a6a7-2e70be1a2aac": {
          "_id": "c77818a5-0f7e-454e-a6a7-2e70be1a2aac",
          "_rev": "-921157281",
          "nodes": [
            {
              "_id": "75989c93-0392-4b34-87d0-e904d7097ed7",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Select MFA Device"
            }
          ],
          "pageDescription": {
            "en": "Select an MFA method to use to sign on to your account."
          },
          "pageHeader": {
            "en": "Select Authentication Method"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "EMAIL",
              "displayName": "EMAIL"
            },
            {
              "id": "SMS",
              "displayName": "SMS"
            },
            {
              "id": "VOICE",
              "displayName": "VOICE"
            },
            {
              "id": "FIDO2",
              "displayName": "FIDO2"
            },
            {
              "id": "OATH",
              "displayName": "OATH"
            },
            {
              "id": "PUSH",
              "displayName": "PUSH"
            },
            {
              "id": "Magic Link",
              "displayName": "Magic Link"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "c78277b4-b5b4-477f-9f48-5993ef97a9e4": {
          "_id": "c78277b4-b5b4-477f-9f48-5993ef97a9e4",
          "_rev": "42043746",
          "accountSID": "",
          "authToken": null,
          "channel": "SMS",
          "identifierSharedState": "userIdentifier",
          "serviceSID": "",
          "requestIdentifier": false,
          "_type": {
            "_id": "VerifyAuthSenderNode",
            "name": "Twilio Verify Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        },
        "c872f0a9-5cc8-4ce0-970e-7945ed658c24": {
          "_id": "c872f0a9-5cc8-4ce0-970e-7945ed658c24",
          "_rev": "-1738571642",
          "captureFailure": false,
          "contextInfo": false,
          "userMessage": {},
          "pushType": "DEFAULT",
          "customPayload": [],
          "mandatory": true,
          "messageTimeout": 120000,
          "_type": {
            "_id": "PushAuthenticationSenderNode",
            "name": "Push Sender",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "SENT",
              "displayName": "Sent"
            },
            {
              "id": "NOT_REGISTERED",
              "displayName": "Not Registered"
            }
          ]
        },
        "d5df0824-9567-445e-b233-16a93a680e05": {
          "_id": "d5df0824-9567-445e-b233-16a93a680e05",
          "_rev": "842424336",
          "identifierAttribute": "telephoneNumber",
          "identifierSharedState": "userIdentifier",
          "_type": {
            "_id": "VerifyAuthIdentifierNode",
            "name": "Twilio Identifier",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "True",
              "displayName": "True"
            },
            {
              "id": "False",
              "displayName": "False"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "d96776f8-2fe7-4f3a-873a-3414f01134ba": {
          "_id": "d96776f8-2fe7-4f3a-873a-3414f01134ba",
          "_rev": "-1475488295",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "f6996a21-0b6e-413f-bd3e-3fd31da3906c": {
          "_id": "f6996a21-0b6e-413f-bd3e-3fd31da3906c",
          "_rev": "-604926885",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "fc580882-ae39-492c-ac6a-72442980232a": {
          "_id": "fc580882-ae39-492c-ac6a-72442980232a",
          "_rev": "568241674",
          "emailSuspendMessage": {
            "en": "An email has been sent to the address you entered. Click the link in that email to proceed."
          },
          "emailTemplateName": "magicLinkTemplate",
          "identityAttribute": "userName",
          "emailAttribute": "mail",
          "objectLookup": true,
          "_type": {
            "_id": "EmailSuspendNode",
            "name": "Email Suspend Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "fce17864-d733-456b-8e29-96e7972c0fb7": {
          "_id": "fce17864-d733-456b-8e29-96e7972c0fb7",
          "_rev": "-1173299109",
          "nodes": [
            {
              "_id": "bdf7db32-dbbd-4341-b3a2-6ef1b316edee",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate OTP"
            },
            {
              "_id": "d40d6396-a8aa-4206-a5e8-3631c58f7f1e",
              "nodeType": "OneTimePasswordCollectorDecisionNode",
              "displayName": "OTP Collector Decision"
            }
          ],
          "pageDescription": {
            "en": "Enter the passcode you received."
          },
          "pageHeader": {
            "en": "Enter Passcode"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        }
      },
      "innerNodes": {
        "a8f28748-0e48-42e3-b6ac-7274f83a68af": {
          "_id": "a8f28748-0e48-42e3-b6ac-7274f83a68af",
          "_rev": "2106159176",
          "script": "41877e33-8686-4264-a969-e44f37f96106",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "eea57ec8-8380-40fc-8f93-032caaf02b39": {
          "_id": "eea57ec8-8380-40fc-8f93-032caaf02b39",
          "_rev": "750313648",
          "hideCode": true,
          "resendButtonText": "resend",
          "showCancelButton": false,
          "cancelButtonText": "cancel",
          "identifierSharedState": "userIdentifier",
          "nextButtonText": "next",
          "showResendButton": false,
          "_type": {
            "_id": "VerifyAuthCollectorDecisionNode",
            "name": "Twilio Verify Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            },
            {
              "id": "error",
              "displayName": "Error"
            }
          ]
        },
        "e1cf5e73-ca82-4699-a2c5-31765f8dbcb9": {
          "_id": "e1cf5e73-ca82-4699-a2c5-31765f8dbcb9",
          "_rev": "1485464863",
          "script": "1a224843-5404-42c0-a7f8-6b12443e2494",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "31207614-6777-4960-b57c-0eb5814df4f4": {
          "_id": "31207614-6777-4960-b57c-0eb5814df4f4",
          "_rev": "435403068",
          "recoveryCodeType": "WEB_AUTHN",
          "_type": {
            "_id": "RecoveryCodeCollectorDecisionNode",
            "name": "Recovery Code Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "7aa5557e-4450-4f39-948e-67c482f1e63a": {
          "_id": "7aa5557e-4450-4f39-948e-67c482f1e63a",
          "_rev": "2078249534",
          "script": "1a224843-5404-42c0-a7f8-6b12443e2494",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "6019c89a-80a6-426e-bdfb-bc93d59e49dc": {
          "_id": "6019c89a-80a6-426e-bdfb-bc93d59e49dc",
          "_rev": "-802211386",
          "recoveryCodeType": "OATH",
          "_type": {
            "_id": "RecoveryCodeCollectorDecisionNode",
            "name": "Recovery Code Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "30665254-b9ed-4499-84f1-775228698f7b": {
          "_id": "30665254-b9ed-4499-84f1-775228698f7b",
          "_rev": "1743162643",
          "script": "a454f7a2-52db-4528-9d77-9870c60590f8",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "e89a2745-85a5-4521-901a-176b55818de9": {
          "_id": "e89a2745-85a5-4521-901a-176b55818de9",
          "_rev": "643540355",
          "totpTimeInterval": 30,
          "maximumAllowedClockDrift": 5,
          "totpTimeSteps": 2,
          "totpHashAlgorithm": "HMAC_SHA1",
          "isRecoveryCodeAllowed": true,
          "algorithm": "TOTP",
          "hotpWindowSize": 100,
          "_type": {
            "_id": "OathTokenVerifierNode",
            "name": "OATH Token Verifier",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "successOutcome",
              "displayName": "Success"
            },
            {
              "id": "failureOutcome",
              "displayName": "Failure"
            },
            {
              "id": "notRegisteredOutcome",
              "displayName": "Not registered"
            },
            {
              "id": "recoveryCodeOutcome",
              "displayName": "Recovery Code"
            }
          ]
        },
        "bfb1bd02-3592-42f3-bffd-6050fa633f52": {
          "_id": "bfb1bd02-3592-42f3-bffd-6050fa633f52",
          "_rev": "1797316777",
          "script": "1a224843-5404-42c0-a7f8-6b12443e2494",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "0105b8cb-f377-4219-babb-b60ccc67ffff": {
          "_id": "0105b8cb-f377-4219-babb-b60ccc67ffff",
          "_rev": "-719729006",
          "recoveryCodeType": "PUSH",
          "_type": {
            "_id": "RecoveryCodeCollectorDecisionNode",
            "name": "Recovery Code Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "75989c93-0392-4b34-87d0-e904d7097ed7": {
          "_id": "75989c93-0392-4b34-87d0-e904d7097ed7",
          "_rev": "1655703764",
          "script": "1063aa7b-a656-48ae-ae13-c7259db103ee",
          "outcomes": [
            "EMAIL",
            "SMS",
            "VOICE",
            "FIDO2",
            "OATH",
            "PUSH",
            "Magic Link",
            "Error"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id",
            "ciam_allowedMFATypes",
            "ciam_magicLinkEnabled"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "EMAIL",
              "displayName": "EMAIL"
            },
            {
              "id": "SMS",
              "displayName": "SMS"
            },
            {
              "id": "VOICE",
              "displayName": "VOICE"
            },
            {
              "id": "FIDO2",
              "displayName": "FIDO2"
            },
            {
              "id": "OATH",
              "displayName": "OATH"
            },
            {
              "id": "PUSH",
              "displayName": "PUSH"
            },
            {
              "id": "Magic Link",
              "displayName": "Magic Link"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "bdf7db32-dbbd-4341-b3a2-6ef1b316edee": {
          "_id": "bdf7db32-dbbd-4341-b3a2-6ef1b316edee",
          "_rev": "-29037619",
          "script": "41877e33-8686-4264-a969-e44f37f96106",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "invalidCodeErrorMessage"
          ],
          "inputs": [
            "invalidCodeErrorMessage",
            "oneTimePassword"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "d40d6396-a8aa-4206-a5e8-3631c58f7f1e": {
          "_id": "d40d6396-a8aa-4206-a5e8-3631c58f7f1e",
          "_rev": "584928155",
          "passwordExpiryTime": 5,
          "_type": {
            "_id": "OneTimePasswordCollectorDecisionNode",
            "name": "OTP Collector Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        }
      },
      "scripts": {
        "5259438a-2178-4280-be61-829225ddde73": {
          "_id": "5259438a-2178-4280-be61-829225ddde73",
          "name": "Money Transfer - Set Invalid code error message",
          "description": "Script to set invalid code error message",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: null\\n    - Script Outputs: \\\"invalidCodeErrorMessage\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\n// Set the below error message in shared state, can be displayed on the last UI Node\\n\\ntry {\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"Invalid Code\\\");\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741056819383,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845568904,
          "evaluatorVersion": "2.0"
        },
        "203816f3-a909-4a9a-b1cd-9c210244c015": {
          "_id": "203816f3-a909-4a9a-b1cd-9c210244c015",
          "name": "Money Transfer - Set error message",
          "description": "Script to set error message",
          "script": "\"// Set the below error message in shared state, can be displayed on the last UI Node\\n\\ntry {\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741782907649,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845568906,
          "evaluatorVersion": "2.0"
        },
        "32caa211-e982-40a1-9b8b-db1d99388786": {
          "_id": "32caa211-e982-40a1-9b8b-db1d99388786",
          "name": "Money Transfer - Send OTP email",
          "description": "Script to send next-gen templated email containing a generated one-time password to the user.",
          "script": "\"/**\\n * @file This script sends a templated HOTP to a user via the IDM's configured email service\\n * using the openidm binding in next-gen scripting\\n * NOTE - The use of SendGrid is not supported in Production and must be changed to your own email service\\n * Steps are here: https://backstage.forgerock.com/docs/idcloud/latest/tenants/email-provider.html#external_smtp_email_server\\n * @version 0.2.0\\n * @keywords email mail hotp sharedState transientState templateService\\n */\\n\\n/**\\n * Script configuration\\n*/\\n\\nvar config = {\\n    /**\\n     * @property {string} templateID - Identifier of email template\\n     * @property {string} idmEndpoint - IDM Endpoint used to send templated emails\\n     * @property {string} idmAction - IDM action executed against the idmEndpoint\\n     */\\n\\n    templateID: \\\"otp\\\",\\n    idmEndpoint: \\\"external/email\\\",\\n    idmAction: \\\"sendTemplate\\\"\\n};\\n\\n/**\\n * Node outcomes\\n*/\\nvar nodeOutcome = {\\n    PASS: \\\"sent\\\",\\n    FAIL: \\\"noMail\\\",\\n    ERROR: \\\"error\\\"\\n};\\n\\n/**\\n * Send email via the IDM Email Service openidm binding in next-gen scripting\\n * \\n * @param {string} hotp - HOTP retrieved from transientState\\n * @param {string} mail - mail attribute retrieved from the idRepository. Note if this is a registration journey acquire mail from sharedState\\n * @param {string} givenName - givenName attribute retrieved from the idRepository. Note if this is a registration journey acquire givenName from sharedState\\n */\\n\\nfunction sendMail(hotp, mail, givenName) {\\n    try {\\n        var params = new Object();\\n        params.templateName = config.templateID;\\n        params.to = mail;\\n        params.object = {\\n            \\\"givenName\\\": givenName,\\n            \\\"otp\\\": hotp\\n        };\\n        openidm.action(config.idmEndpoint, config.idmAction, params);\\n        //Email send successfully\\n        return nodeOutcome.PASS;\\n    }\\n    catch (e) {\\n       // Failed to call IDM Email endpoint using template.\\n        return nodeOutcome.ERROR;\\n    }\\n};\\n\\n/**\\n * Main function\\n */\\n\\n(function () {\\n   // Node execution started\\n    var id;\\n    var hotp;\\n    var mail;\\n\\n    if (!(id = nodeState.get(\\\"_id\\\"))) {\\n       // Unable to retrieve Identity\\n        action.goTo(nodeOutcome.ERROR);\\n        return;\\n    } else {\\n        var identity = idRepository.getIdentity(id);\\n    }\\n\\n    if (!(hotp = nodeState.get(\\\"oneTimePassword\\\"))) {\\n       // Unable to retrieve HOTP from state\\n        action.goTo(nodeOutcome.ERROR);\\n        return;\\n    }\\n\\n    //If this is a registration journey adapt the following to try retrieve from nodeState\\n    if (!(mail = identity.getAttributeValues(\\\"mail\\\").toArray()[0])) {\\n     //   Unable to retrieve mail attribute from the idRepository\\n        action.goTo(nodeOutcome.FAIL);\\n        return;\\n    }\\n\\n    //If this is a registration journey adapt the following to try retrieve from nodeState\\n    //Be sure to set givenName against the user\\n    if (!(givenName = identity.getAttributeValues(\\\"givenName\\\").toArray()[0])) {\\n      // Unable to retrieve givenName attribute from the idRepository\\n        action.goTo(nodeOutcome.FAIL);\\n        return;\\n    }\\n\\n    //Execute function to send mail\\n    outcome = sendMail(hotp, mail, givenName);\\n})();\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741056272513,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741933783307,
          "evaluatorVersion": "2.0"
        },
        "41877e33-8686-4264-a969-e44f37f96106": {
          "_id": "41877e33-8686-4264-a969-e44f37f96106",
          "name": "Money Transfer - Validate OTP input",
          "description": "Script to validate OTP input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"oneTimePassword\\\", \\\"invalidCodeErrorMessage\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\", \\\"invalidCodeErrorMessage\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\n// Note: If HOTP Genrator node is used in prior, \\\"oneTimePassword\\\" will be a transient state property, make sure to make it available in script inputs. \\n// If the OTP is generated by Twilio nodes, the default length is set to 6 and only digits are considered. Modify this if necessary.\\n\\ntry {\\n    function validateInput(otpLength) {\\n        return String(\\\" \\\\n\\\\\\n                    var otpLength = \\\" + otpLength + \\\" \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                    if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                    // Validate the passcode \\\\n\\\\\\n                    function validateCode() { \\\\n\\\\\\n                        const passcode = document.querySelectorAll('input[data-vv-as=\\\\\\\"One Time Password\\\\\\\"]')[0] || document.querySelectorAll('input[data-vv-as=\\\\\\\"Code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (passcode) { \\\\n\\\\\\n                            // Set input properties to prevent user tampering \\\\n\\\\\\n                            passcode.setAttribute('maxlength', otpLength); \\\\n\\\\\\n                            passcode.setAttribute('pattern', '[0-9]{' + otpLength + '}'); \\\\n\\\\\\n                            passcode.setAttribute('inputmode', 'numeric'); \\\\n\\\\\\n                            // Check if the input is exactly 6 digits long and numeric \\\\n\\\\\\n                            const isValidCode = new RegExp('^[0-9]{' + otpLength + '}$').test(passcode.value); \\\\n\\\\\\n                            submitBtn.disabled = !isValidCode; \\\\n\\\\\\n                            return isValidCode; \\\\n\\\\\\n                        } \\\\n\\\\\\n                        return false; \\\\n\\\\\\n                    }; \\\\n\\\\\\n                    \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        const passcode = document.querySelectorAll('input[data-vv-as=\\\\\\\"One Time Password\\\\\\\"]')[0] || document.querySelectorAll('input[data-vv-as=\\\\\\\"Code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (passcode && submitBtn) { \\\\n\\\\\\n                            passcode.addEventListener('input', validateCode); \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                if (!validateCode()) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    // For HOTP and Twilio OTP collector nodes, if either of the element is present, initialize validation \\\\n\\\\\\n                    if (document.querySelectorAll('input[data-vv-as=\\\\\\\"One Time Password\\\\\\\"]')[0] || document.querySelectorAll('input[data-vv-as=\\\\\\\"Code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                    else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                    } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n\\n    // Get \\\"oneTimePassword\\\" shared in transient state by the HOTP Generator node or default it to 6\\n    var otpLength = nodeState.get(\\\"oneTimePassword\\\") ? nodeState.get(\\\"oneTimePassword\\\").length : 6;\\n    \\n    if (callbacks.isEmpty()) {\\n        // Display error message if invalid code entered by user\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        // Request callbacks\\n        callbacksBuilder.scriptTextOutputCallback(validateInput(otpLength));\\n    }\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741056569345,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845568920,
          "evaluatorVersion": "2.0"
        },
        "1a224843-5404-42c0-a7f8-6b12443e2494": {
          "_id": "1a224843-5404-42c0-a7f8-6b12443e2494",
          "name": "Money Transfer - Validate Recovery Code input",
          "description": "Script to validate Recovery code input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"// /*\\n//   - Data made available by nodes that have already executed are available in the sharedState variable.\\n//   - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n//  */\\n\\n/*\\n    - Script Inputs: \\\"invalidCodeErrorMessage\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\", \\\"invalidCodeErrorMessage\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                    if(submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        const recoveryCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Recovery Code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (recoveryCode && submitBtn) { \\\\n\\\\\\n                            // Set the maxlength attribute to 10 \\\\n\\\\\\n                            recoveryCode.setAttribute('maxlength', 10); \\\\n\\\\\\n                            const enableSubmitBtn = () => { \\\\n\\\\\\n                                // Check input validity before enabling submit button \\\\n\\\\\\n                                const isValidInput = recoveryCode.value.length === 10; \\\\n\\\\\\n                                if (isValidInput) { \\\\n\\\\\\n                                    submitBtn.disabled = false; \\\\n\\\\\\n                                } else { \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }; \\\\n\\\\\\n                            // Revalidate before form submission \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                const isValidInput = recoveryCode.value.length === 10; \\\\n\\\\\\n                                if (!isValidInput) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            recoveryCode.addEventListener('input', enableSubmitBtn); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                       } \\\\n\\\\\\n                      } \\\\n\\\\\\n                      if (document.querySelectorAll('input[data-vv-as=\\\\\\\"Recovery Code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                      else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                      } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n    \\n    if (callbacks.isEmpty()) {                \\n        // Display error message if invalid code entered by user\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        // Request callbacks\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741056360483,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845568920,
          "evaluatorVersion": "2.0"
        },
        "a454f7a2-52db-4528-9d77-9870c60590f8": {
          "_id": "a454f7a2-52db-4528-9d77-9870c60590f8",
          "name": "Money Transfer - Validate verification code",
          "description": "Script to validate verification code input, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n*/\\n\\n/*\\n    - Script Inputs: \\\"invalidCodeErrorMessage\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\", \\\"invalidCodeErrorMessage\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    // Validate the verification code \\\\n\\\\\\n                    function validateCode() { \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        const verificationCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (verificationCode) { \\\\n\\\\\\n                            // Set input properties to prevent user tampering \\\\n\\\\\\n                            verificationCode.setAttribute('maxlength', '6'); \\\\n\\\\\\n                            verificationCode.setAttribute('pattern', '[0-9]{6}'); \\\\n\\\\\\n                            verificationCode.setAttribute('inputmode', 'numeric'); \\\\n\\\\\\n                            // Check if the input is exactly 6 digits long and numeric \\\\n\\\\\\n                            const isValidCode = /^[0-9]{6}$/.test(verificationCode.value); \\\\n\\\\\\n                            submitBtn.disabled = !isValidCode; \\\\n\\\\\\n                            return isValidCode; \\\\n\\\\\\n                        } \\\\n\\\\\\n                        return false; \\\\n\\\\\\n                    }; \\\\n\\\\\\n                    \\\\n\\\\\\n                    function preventEnterKeyDefault(event) { \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (event.key === 'Enter' && !validateCode()) { \\\\n\\\\\\n                            event.preventDefault(); \\\\n\\\\\\n                            if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    function go(obs) { \\\\n\\\\\\n                        // Auto-submit and go to 'Not Registered' path if method is not registered for the user, in that case it is assumed that button will be of type submit from Page Node \\\\n\\\\\\n                        const nextBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (nextBtn) { \\\\n\\\\\\n                            nextBtn.style.visibility='hidden'; \\\\n\\\\\\n                            nextBtn.click(); \\\\n\\\\\\n                        } \\\\n\\\\\\n                        const submitBtn = document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                        const verificationCode = document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]; \\\\n\\\\\\n                        if (verificationCode && submitBtn) { \\\\n\\\\\\n                            verificationCode.addEventListener('input', validateCode); \\\\n\\\\\\n                            verificationCode.addEventListener('keypress', preventEnterKeyDefault); \\\\n\\\\\\n                            submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                                if (!validateCode()) { \\\\n\\\\\\n                                    event.preventDefault(); \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                            }); \\\\n\\\\\\n                            if (obs) obs.disconnect(); \\\\n\\\\\\n                            return; \\\\n\\\\\\n                        } \\\\n\\\\\\n                    } \\\\n\\\\\\n                    \\\\n\\\\\\n                    // If both elements are present, initialize validation \\\\n\\\\\\n                    if (document.querySelectorAll('button[type=\\\\\\\"button\\\\\\\"]')[0] && document.querySelectorAll('input[data-vv-as=\\\\\\\"Enter verification code\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                    else { \\\\n\\\\\\n                        const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                        observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                    } \\\\n\\\\\\n        \\\");\\n    }\\n\\n    var invalidCodeErrorMessage = nodeState.get(\\\"invalidCodeErrorMessage\\\");\\n    nodeState.putShared(\\\"invalidCodeErrorMessage\\\", \\\"\\\");\\n    \\n    if (callbacks.isEmpty()) {\\n        // Display error message if invalid code entered by user\\n        if (invalidCodeErrorMessage && invalidCodeErrorMessage.length) callbacksBuilder.textOutputCallback(2, invalidCodeErrorMessage);\\n        // Request callbacks\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741056223827,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845568937,
          "evaluatorVersion": "2.0"
        },
        "1063aa7b-a656-48ae-ae13-c7259db103ee": {
          "_id": "1063aa7b-a656-48ae-ae13-c7259db103ee",
          "name": "Money Transfer - Get user's registered MFA devices",
          "description": "Script to fetch user's registered MFA methods",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"_id\\\", \\\"ciam_allowedMFATypes\\\", \\\"ciam_magicLinkEnabled\\\"\\n    - Script Outputs: \\\"usableMFADevices\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\", \\\"Error\\\"\\n*/\\n\\ntry {\\n    // Retrieve user ID and allowed MFA devices\\n    var userId = nodeState.get(\\\"_id\\\");\\n    var allowedMFAMethods = nodeState.get(\\\"ciam_allowedMFATypes\\\");\\n    \\n    var mfaMapping = {\\n        \\\"EMAIL\\\": \\\"allowEmail\\\",\\n        \\\"SMS\\\": \\\"allowSMS\\\",\\n        \\\"VOICE\\\": \\\"allowVoice\\\",\\n        \\\"OATH\\\": \\\"allowOATH\\\",\\n        \\\"PUSH\\\": \\\"allowPush\\\",\\n        \\\"FIDO2\\\": \\\"allowFIDO2\\\"\\n    };\\n    \\n    var allowEmail = false, allowSMS = false, allowVoice = false, allowOATH = false, allowPush = false, allowFIDO2 = false;\\n    \\n    allowedMFAMethods.forEach(device => {\\n        if (mfaMapping[device]) {\\n            this[mfaMapping[device]] = true;\\n        }\\n    });\\n    \\n    var mfaDevicesObj = openidm.read(\\\"managed/alpha_user/\\\" + userId, null, [\\\"custom_mfaDevices\\\"]);\\n    var mfaDevices = (mfaDevicesObj && mfaDevicesObj.custom_mfaDevices) ? mfaDevicesObj.custom_mfaDevices : [];\\n    \\n    // By default returned mfaDevices is of Object type so values are parsed in a new array\\n    var usableMFADevices = [];\\n    \\n    // Store MFA devices and additional option in shared state    \\n    mfaDevices.forEach(device => {\\n        usableMFADevices.push(device);\\n    });\\n    \\n    usableMFADevices = usableMFADevices.filter(device =>\\n        (device === \\\"SMS\\\" && allowSMS) ||\\n        (device === \\\"EMAIL\\\" && allowEmail) ||\\n        (device === \\\"VOICE\\\" && allowVoice) ||\\n        (device === \\\"OATH\\\" && allowOATH) ||\\n        (device === \\\"PUSH\\\" && allowPush) ||\\n        (device === \\\"FIDO2\\\" && allowFIDO2)                               \\n    );\\n\\n    // Index of latest registered MFA device\\n    var idxLatestMFADevice = usableMFADevices ? usableMFADevices.length - 1 : -1;\\n    \\n    // Add Magic Link, if enabled by Admin\\n    var magicLinkEnabled = nodeState.get(\\\"ciam_magicLinkEnabled\\\");\\n    if(magicLinkEnabled) usableMFADevices.push(\\\"Magic Link\\\");\\n    \\n    // nodeState.putShared(\\\"usableMFADevices\\\", usableMFADevices);\\n    \\n    // Handle callback logic\\n    if (callbacks.isEmpty()) {\\n      callbacksBuilder.choiceCallback(\\\"Select an MFA device\\\", usableMFADevices, idxLatestMFADevice, false);\\n    } else {\\n      // Callbacks returned from browser, save selected choice\\n      var index = callbacks.getChoiceCallbacks().get(0)[0];\\n      var selectedDevice = usableMFADevices[index] || null;\\n    \\n      if (!selectedDevice) {\\n        nodeState.putShared(\\\"errorMessage\\\", \\\"No registered MFA device found\\\");\\n        // Go to error  \\n        action.goTo(\\\"Error\\\");\\n      } else {\\n        // Go to authentication for that selected MFA device\\n        action.goTo(selectedDevice);\\n      }\\n    }\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741056469255,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845568986,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {
        "magicLinkTemplate": {
          "_id": "emailTemplate/magicLinkTemplate",
          "advancedEditor": true,
          "defaultLocale": "en",
          "description": "To authenticate with email address ",
          "displayName": "Magic Link Template",
          "enabled": true,
          "from": "",
          "html": {
            "en": "",
            "fr": ""
          },
          "message": {
            "en": "<div style=\"display:block;text-align:center;font-family:sans-serif;border:1px solid #c5c5c5;width:400px;padding:30px 20px\">\n  <img src=\"https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png\" alt=\"Company Logo\" style=\"height:65px;margin-bottom:10px\" />\n  <h1>Sign On Request</h1>\n  <div style=\"margin-top:20px;margin-bottom:25px\">\n    <p>Please click the link below to authenticate. </p>\n    <a href=\"{{object.resumeURI}}\" style=\"font-size:14pt\">Complete Sign On</a>\n  </div>\n</div>",
            "fr": "<html>\n  <head></head>\n  <body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\">\n    <h3>Ceci est votre mail d'inscription.</h3>\n    <p>\n      <a href=\"{{object.resumeURI}}\" style=\"text-decoration: none; color: #109cf1;\">Lien de vérification email</a>\n    </p>\n  </body>\n</html>"
          },
          "mimeType": "text/html",
          "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
          "subject": {
            "en": "Sign On Request",
            "fr": "Créer un nouveau compte"
          },
          "templateId": "magicLinkTemplate"
        }
      },
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "Money Transfer -Threat Detection - Inner Journey": {
      "tree": {
        "_id": "Money Transfer -Threat Detection - Inner Journey",
        "_rev": "-155791330",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"Money Transfer\"]"
        },
        "entryNodeId": "82707d3b-6be9-4b33-a37a-10e6f812baab",
        "innerTreeOnly": true,
        "nodes": {
          "0bbb213c-45be-40b0-a413-ebb76c98d5d3": {
            "connections": {
              "error": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "noMail": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "sent": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Notify New Device Detected",
            "nodeType": "ScriptedDecisionNode",
            "x": 1489,
            "y": 534.03125
          },
          "10c15f27-4be1-4001-8451-91aa27fd58f9": {
            "connections": {
              "error": "8d308051-60e3-4751-a736-f170888be146",
              "noMail": "8d308051-60e3-4751-a736-f170888be146",
              "sent": "8d308051-60e3-4751-a736-f170888be146"
            },
            "displayName": "Send Account Disabled Email",
            "nodeType": "ScriptedDecisionNode",
            "x": 994,
            "y": 978.03125
          },
          "418e96a9-41b5-433a-827e-bce60f392c10": {
            "connections": {
              "outcome": "ac39d0fc-864f-4d57-8173-aea05cd7fd1a"
            },
            "displayName": "Increase Auth Level",
            "nodeType": "ModifyAuthLevelNode",
            "x": 1029,
            "y": 673.515625
          },
          "5cd54953-d99e-4c10-a9b1-ea488dcdd487": {
            "connections": {
              "true": "f0a7aaa8-ea3f-4bc6-a8a0-4337ee96ed81"
            },
            "displayName": "Set UserId and Username For Protect",
            "nodeType": "ScriptedDecisionNode",
            "x": 148,
            "y": 888.421875
          },
          "768c4819-4156-4ec9-87ce-f562beb01b89": {
            "connections": {
              "AITM_MITIGATION": "a8a182c9-1a66-4b23-bc08-f14d37e0b135",
              "BOT_MITIGATION": "a8a182c9-1a66-4b23-bc08-f14d37e0b135",
              "TEMP_EMAIL_MITIGATION": "a8a182c9-1a66-4b23-bc08-f14d37e0b135",
              "clientError": "8d308051-60e3-4751-a736-f170888be146",
              "exceed": "8d308051-60e3-4751-a736-f170888be146",
              "failure": "8d308051-60e3-4751-a736-f170888be146",
              "high": "418e96a9-41b5-433a-827e-bce60f392c10",
              "low": "ac39d0fc-864f-4d57-8173-aea05cd7fd1a",
              "medium": "418e96a9-41b5-433a-827e-bce60f392c10"
            },
            "displayName": "Auth: PingOne Protect Evaluation",
            "nodeType": "product-PingOneProtectEvaluationNode",
            "x": 552,
            "y": 336.03125
          },
          "80af431d-90b1-4168-97b4-9c191a7919e1": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "PingOne Protect Initialize",
            "nodeType": "product-PingOneProtectInitializeNode",
            "x": 547,
            "y": 39.03125
          },
          "82707d3b-6be9-4b33-a37a-10e6f812baab": {
            "connections": {
              "eval": "acc86a35-5443-4b6e-a28a-9027d23c553c",
              "init": "80af431d-90b1-4168-97b4-9c191a7919e1"
            },
            "displayName": "P1 Protect Action?",
            "nodeType": "ScriptedDecisionNode",
            "x": 174,
            "y": 456.03125
          },
          "86c44dfc-0d13-442c-a6e7-bf60f7224ad2": {
            "connections": {
              "error": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "noMail": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "sent": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Send Suspicious Activity Mail",
            "nodeType": "ScriptedDecisionNode",
            "x": 1486,
            "y": 342.03125
          },
          "8d308051-60e3-4751-a736-f170888be146": {
            "connections": {
              "outcome": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "displayName": "Update P1 Protect Eval Failure",
            "nodeType": "product-PingOneProtectResultNode",
            "x": 1501,
            "y": 875.03125
          },
          "a8a182c9-1a66-4b23-bc08-f14d37e0b135": {
            "connections": {
              "false": "8d308051-60e3-4751-a736-f170888be146",
              "true": "fcea9462-8ed9-44f4-89b7-362de4650260"
            },
            "displayName": "Account Active Decision",
            "nodeType": "AccountActiveDecisionNode",
            "x": 1010,
            "y": 798.015625
          },
          "ac39d0fc-864f-4d57-8173-aea05cd7fd1a": {
            "connections": {
              "false": "8d308051-60e3-4751-a736-f170888be146",
              "true": "c0aa0cb3-88e5-4901-9612-723141ed0a20"
            },
            "displayName": "Account Active Decision",
            "nodeType": "AccountActiveDecisionNode",
            "x": 1010,
            "y": 513.015625
          },
          "acc86a35-5443-4b6e-a28a-9027d23c553c": {
            "connections": {
              "false": "5cd54953-d99e-4c10-a9b1-ea488dcdd487",
              "true": "5cd54953-d99e-4c10-a9b1-ea488dcdd487"
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 176.15625,
            "y": 686.015625
          },
          "c0aa0cb3-88e5-4901-9612-723141ed0a20": {
            "connections": {
              "highRisk": "86c44dfc-0d13-442c-a6e7-bf60f7224ad2",
              "low/medRisk": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "newDevice": "0bbb213c-45be-40b0-a413-ebb76c98d5d3"
            },
            "displayName": "Extract Protect Activity Params",
            "nodeType": "ScriptedDecisionNode",
            "x": 990.7777777777778,
            "y": 306
          },
          "ea6325d0-320d-4981-bcad-3c35da7cb6d8": {
            "connections": {
              "AITM_MITIGATION": "a8a182c9-1a66-4b23-bc08-f14d37e0b135",
              "BOT_MITIGATION": "a8a182c9-1a66-4b23-bc08-f14d37e0b135",
              "TEMP_EMAIL_MITIGATION": "a8a182c9-1a66-4b23-bc08-f14d37e0b135",
              "clientError": "8d308051-60e3-4751-a736-f170888be146",
              "exceed": "8d308051-60e3-4751-a736-f170888be146",
              "failure": "8d308051-60e3-4751-a736-f170888be146",
              "high": "418e96a9-41b5-433a-827e-bce60f392c10",
              "low": "ac39d0fc-864f-4d57-8173-aea05cd7fd1a",
              "medium": "418e96a9-41b5-433a-827e-bce60f392c10"
            },
            "displayName": "Authorize: PingOne Protect Evaluation",
            "nodeType": "product-PingOneProtectEvaluationNode",
            "x": 564,
            "y": 811.03125
          },
          "f0a7aaa8-ea3f-4bc6-a8a0-4337ee96ed81": {
            "connections": {
              "Authentication": "768c4819-4156-4ec9-87ce-f562beb01b89",
              "Authorization": "ea6325d0-320d-4981-bcad-3c35da7cb6d8"
            },
            "displayName": "Determine Flow Type",
            "nodeType": "ScriptedDecisionNode",
            "x": 175.14285714285714,
            "y": 1040.236607142857
          },
          "fcea9462-8ed9-44f4-89b7-362de4650260": {
            "connections": {
              "outcome": "10c15f27-4be1-4001-8451-91aa27fd58f9"
            },
            "displayName": "Disable Account",
            "nodeType": "AccountLockoutNode",
            "x": 1030,
            "y": 1211.03125
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 2111,
            "y": 476
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 2126,
            "y": 1024
          },
          "startNode": {
            "x": 32,
            "y": 210
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "0bbb213c-45be-40b0-a413-ebb76c98d5d3": {
          "_id": "0bbb213c-45be-40b0-a413-ebb76c98d5d3",
          "_rev": "2002404724",
          "script": "d174e5a7-38ef-429d-8f7f-5d6909cae8ed",
          "outcomes": [
            "sent",
            "noMail",
            "error"
          ],
          "outputs": [
            "*"
          ],
          "inputs": [
            "PingOneProtectEvaluationNode.RISK",
            "_id"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "sent",
              "displayName": "sent"
            },
            {
              "id": "noMail",
              "displayName": "noMail"
            },
            {
              "id": "error",
              "displayName": "error"
            }
          ]
        },
        "10c15f27-4be1-4001-8451-91aa27fd58f9": {
          "_id": "10c15f27-4be1-4001-8451-91aa27fd58f9",
          "_rev": "-1851721145",
          "script": "42a38297-7872-4db0-b896-5233f2db0f67",
          "outcomes": [
            "sent",
            "noMail",
            "error"
          ],
          "outputs": [
            "*"
          ],
          "inputs": [
            "_id",
            "PingOneProtectEvaluationNode.RISK"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "sent",
              "displayName": "sent"
            },
            {
              "id": "noMail",
              "displayName": "noMail"
            },
            {
              "id": "error",
              "displayName": "error"
            }
          ]
        },
        "418e96a9-41b5-433a-827e-bce60f392c10": {
          "_id": "418e96a9-41b5-433a-827e-bce60f392c10",
          "_rev": "1154490325",
          "authLevelIncrement": 1,
          "_type": {
            "_id": "ModifyAuthLevelNode",
            "name": "Modify Auth Level",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "5cd54953-d99e-4c10-a9b1-ea488dcdd487": {
          "_id": "5cd54953-d99e-4c10-a9b1-ea488dcdd487",
          "_rev": "1070798754",
          "script": "65d89169-9ff5-479d-a31a-d9729dcd4b06",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "protectUserId",
            "protectUsername",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id",
            "username"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "768c4819-4156-4ec9-87ce-f562beb01b89": {
          "_id": "768c4819-4156-4ec9-87ce-f562beb01b89",
          "_rev": "1499863184",
          "flowType": "AUTHENTICATION",
          "pauseBehavioralData": true,
          "storeEvaluateResult": true,
          "deviceSharingType": "SHARED",
          "scoreThreshold": "300",
          "userId": "protectUserId",
          "username": "protectUsername",
          "userType": "EXTERNAL",
          "recommendedActions": [
            "BOT_MITIGATION",
            "AITM_MITIGATION",
            "TEMP_EMAIL_MITIGATION"
          ],
          "_type": {
            "_id": "product-PingOneProtectEvaluationNode",
            "name": "PingOne Protect Evaluation",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "high",
              "displayName": "High"
            },
            {
              "id": "medium",
              "displayName": "Medium"
            },
            {
              "id": "low",
              "displayName": "Low"
            },
            {
              "id": "exceed",
              "displayName": "Exceeds Score Threshold"
            },
            {
              "id": "failure",
              "displayName": "Failure"
            },
            {
              "id": "BOT_MITIGATION",
              "displayName": "BOT_MITIGATION"
            },
            {
              "id": "AITM_MITIGATION",
              "displayName": "AITM_MITIGATION"
            },
            {
              "id": "TEMP_EMAIL_MITIGATION",
              "displayName": "TEMP_EMAIL_MITIGATION"
            },
            {
              "id": "clientError",
              "displayName": "ClientError"
            }
          ]
        },
        "80af431d-90b1-4168-97b4-9c191a7919e1": {
          "_id": "80af431d-90b1-4168-97b4-9c191a7919e1",
          "_rev": "1166387501",
          "deviceAttributesToIgnore": [],
          "enableTrust": false,
          "disableTags": false,
          "behavioralDataCollection": true,
          "consoleLogEnabled": false,
          "deviceKeyRsyncIntervals": 14,
          "disableHub": false,
          "lazyMetadata": false,
          "_type": {
            "_id": "product-PingOneProtectInitializeNode",
            "name": "PingOne Protect Initialize",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "82707d3b-6be9-4b33-a37a-10e6f812baab": {
          "_id": "82707d3b-6be9-4b33-a37a-10e6f812baab",
          "_rev": "-893866426",
          "script": "b888eaa1-f132-4a22-a3d1-a287e61cb8a4",
          "outcomes": [
            "init",
            "eval"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "p1ProtectAction"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "init",
              "displayName": "init"
            },
            {
              "id": "eval",
              "displayName": "eval"
            }
          ]
        },
        "86c44dfc-0d13-442c-a6e7-bf60f7224ad2": {
          "_id": "86c44dfc-0d13-442c-a6e7-bf60f7224ad2",
          "_rev": "-969568079",
          "script": "df56b7ca-25a1-49e6-b364-4c25a3e1ba8e",
          "outcomes": [
            "sent",
            "noMail",
            "error"
          ],
          "outputs": [
            "*"
          ],
          "inputs": [
            "_id",
            "PingOneProtectEvaluationNode.RISK"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "sent",
              "displayName": "sent"
            },
            {
              "id": "noMail",
              "displayName": "noMail"
            },
            {
              "id": "error",
              "displayName": "error"
            }
          ]
        },
        "8d308051-60e3-4751-a736-f170888be146": {
          "_id": "8d308051-60e3-4751-a736-f170888be146",
          "_rev": "-1792537809",
          "status": "FAILED",
          "_type": {
            "_id": "product-PingOneProtectResultNode",
            "name": "PingOne Protect Result",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "a8a182c9-1a66-4b23-bc08-f14d37e0b135": {
          "_id": "a8a182c9-1a66-4b23-bc08-f14d37e0b135",
          "_rev": "-765852777",
          "_type": {
            "_id": "AccountActiveDecisionNode",
            "name": "Account Active Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "ac39d0fc-864f-4d57-8173-aea05cd7fd1a": {
          "_id": "ac39d0fc-864f-4d57-8173-aea05cd7fd1a",
          "_rev": "639242143",
          "_type": {
            "_id": "AccountActiveDecisionNode",
            "name": "Account Active Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "acc86a35-5443-4b6e-a28a-9027d23c553c": {
          "_id": "acc86a35-5443-4b6e-a28a-9027d23c553c",
          "_rev": "472583129",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "c0aa0cb3-88e5-4901-9612-723141ed0a20": {
          "_id": "c0aa0cb3-88e5-4901-9612-723141ed0a20",
          "_rev": "420267763",
          "script": "9f066aa9-5be2-44a3-abc9-fb6fceb95ccf",
          "outcomes": [
            "highRisk",
            "newDevice",
            "low/medRisk"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "PingOneProtectEvaluationNode.RISK",
            "_id"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "highRisk",
              "displayName": "highRisk"
            },
            {
              "id": "newDevice",
              "displayName": "newDevice"
            },
            {
              "id": "low/medRisk",
              "displayName": "low/medRisk"
            }
          ]
        },
        "ea6325d0-320d-4981-bcad-3c35da7cb6d8": {
          "_id": "ea6325d0-320d-4981-bcad-3c35da7cb6d8",
          "_rev": "-586747505",
          "flowType": "AUTHORIZATION",
          "pauseBehavioralData": true,
          "storeEvaluateResult": true,
          "deviceSharingType": "SHARED",
          "scoreThreshold": "300",
          "userId": "protectUserId",
          "username": "protectUsername",
          "userType": "EXTERNAL",
          "recommendedActions": [
            "AITM_MITIGATION",
            "BOT_MITIGATION",
            "TEMP_EMAIL_MITIGATION"
          ],
          "_type": {
            "_id": "product-PingOneProtectEvaluationNode",
            "name": "PingOne Protect Evaluation",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "high",
              "displayName": "High"
            },
            {
              "id": "medium",
              "displayName": "Medium"
            },
            {
              "id": "low",
              "displayName": "Low"
            },
            {
              "id": "exceed",
              "displayName": "Exceeds Score Threshold"
            },
            {
              "id": "failure",
              "displayName": "Failure"
            },
            {
              "id": "AITM_MITIGATION",
              "displayName": "AITM_MITIGATION"
            },
            {
              "id": "BOT_MITIGATION",
              "displayName": "BOT_MITIGATION"
            },
            {
              "id": "TEMP_EMAIL_MITIGATION",
              "displayName": "TEMP_EMAIL_MITIGATION"
            },
            {
              "id": "clientError",
              "displayName": "ClientError"
            }
          ]
        },
        "f0a7aaa8-ea3f-4bc6-a8a0-4337ee96ed81": {
          "_id": "f0a7aaa8-ea3f-4bc6-a8a0-4337ee96ed81",
          "_rev": "2010721207",
          "script": "08ecb6ed-38d6-4eb6-b347-9894e59b88cb",
          "outcomes": [
            "Authentication",
            "Authorization"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "flowType"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Authentication",
              "displayName": "Authentication"
            },
            {
              "id": "Authorization",
              "displayName": "Authorization"
            }
          ]
        },
        "fcea9462-8ed9-44f4-89b7-362de4650260": {
          "_id": "fcea9462-8ed9-44f4-89b7-362de4650260",
          "_rev": "250919450",
          "lockAction": "LOCK",
          "_type": {
            "_id": "AccountLockoutNode",
            "name": "Account Lockout",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        }
      },
      "innerNodes": {},
      "scripts": {
        "d174e5a7-38ef-429d-8f7f-5d6909cae8ed": {
          "_id": "d174e5a7-38ef-429d-8f7f-5d6909cae8ed",
          "name": "Money Transfer - Send new device detected email",
          "description": "Script to send next-gen templated email if any new device detected",
          "script": "\"/**\\n * @file This script sends a templated email to a user via the IDM's configured email service\\n * using the openidm binding in next-gen scripting\\n * NOTE - The use of SendGrid is not supported in Production and must be changed to your own email service\\n * Steps are here: https://backstage.forgerock.com/docs/idcloud/latest/tenants/email-provider.html#external_smtp_email_server\\n * @version 0.2.0\\n * @keywords email mail sharedState transientState templateService\\n */\\n\\n/**\\n * Script configuration\\n*/\\n\\nvar config = {\\n    /**\\n     * @property {string} templateID - Identifier of email template\\n     * @property {string} idmEndpoint - IDM Endpoint used to send templated emails\\n     * @property {string} idmAction - IDM action executed against the idmEndpoint\\n     */\\n\\n    templateID: \\\"newDeviceDetected\\\",\\n    idmEndpoint: \\\"external/email\\\",\\n    idmAction: \\\"sendTemplate\\\"\\n};\\n\\n/**\\n * Node outcomes\\n*/\\nvar nodeOutcome = {\\n    PASS: \\\"sent\\\",\\n    FAIL: \\\"noMail\\\",\\n    ERROR: \\\"error\\\"\\n};\\n\\n/**\\n * Send email via the IDM Email Service openidm binding in next-gen scripting\\n * \\n * @param {string} mail - mail attribute retrieved from the idRepository. Note if this is a registration journey acquire mail from sharedState\\n */\\n\\nfunction sendMail(mail, protectActivityCity, protectActivityState) {\\n    try {\\n        var params = new Object();\\n        params.templateName = config.templateID;\\n        params.to = mail;\\n        params.object = {\\n            \\\"mail\\\": mail,\\n            \\\"custom_protectActivityCity\\\": protectActivityCity,\\n            \\\"custom_protectActivityState\\\": protectActivityState\\n        };\\n        openidm.action(config.idmEndpoint, config.idmAction, params);\\n        //Email send successfully\\n        return nodeOutcome.PASS;\\n    }\\n    catch (e) {\\n        //Failed to call IDM Email endpoint using template.\\n        return nodeOutcome.ERROR;\\n    }\\n};\\n\\nfunction capitalizeFirstLetter(string) {\\n    return string\\n    .split(' ')                   // Split the string into an array of words\\n    .map(word => \\n        word.charAt(0).toUpperCase() + word.slice(1)\\n    )                             // Capitalize the first letter of each word\\n    .join(' ');                   // Join the array back into a single string\\n    // return string.length > 0 ? string.charAt(0).toUpperCase() + string.slice(1) : \\\"\\\";\\n};\\n\\n/**\\n * Main function\\n */\\n\\n(function () {\\n    //Node execution started\\n    var id;\\n    var mail;\\n    var rawResponse;\\n    var protectActivityCity = \\\"\\\";\\n    var protectActivityState = \\\"\\\";\\n\\n    if (!(id = nodeState.get(\\\"_id\\\"))) {\\n        //Unable to retrieve Identity\\n        action.goTo(nodeOutcome.ERROR);\\n        return;\\n    } else {\\n        var identity = idRepository.getIdentity(id);\\n    }\\n\\n    //If this is a registration journey adapt the following to try retrieve from nodeState\\n    if (!(mail = identity.getAttributeValues(\\\"mail\\\").toArray()[0])) {\\n        //Unable to retrieve mail attribute from the idRepository\\n        action.goTo(nodeOutcome.FAIL);\\n        return;\\n    }\\n\\n    if(rawResponse = nodeState.get(\\\"PingOneProtectEvaluationNode.RISK\\\")){\\n        protectActivityCity = rawResponse.details.city;\\n        protectActivityState = rawResponse.details.state;\\n        protectActivityCity = capitalizeFirstLetter(protectActivityCity);\\n        protectActivityState = capitalizeFirstLetter(protectActivityState);\\n    }\\n\\n    //Execute function to send mail\\n    outcome = sendMail(mail, protectActivityCity, protectActivityState);\\n})();\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741871077797,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741871114095,
          "evaluatorVersion": "2.0"
        },
        "42a38297-7872-4db0-b896-5233f2db0f67": {
          "_id": "42a38297-7872-4db0-b896-5233f2db0f67",
          "name": "Money Transfer - Send account disabled email",
          "description": "Script to send next-gen templated email if account is disabled",
          "script": "\"/**\\n * @file This script sends a templated email to a user via the IDM's configured email service\\n * using the openidm binding in next-gen scripting\\n * NOTE - The use of SendGrid is not supported in Production and must be changed to your own email service\\n * Steps are here: https://backstage.forgerock.com/docs/idcloud/latest/tenants/email-provider.html#external_smtp_email_server\\n * @version 0.2.0\\n * @keywords email mail sharedState transientState templateService\\n */\\n\\n/**\\n * Script configuration\\n*/\\n\\nvar config = {\\n    /**\\n     * @property {string} templateID - Identifier of email template\\n     * @property {string} idmEndpoint - IDM Endpoint used to send templated emails\\n     * @property {string} idmAction - IDM action executed against the idmEndpoint\\n     */\\n\\n    templateID: \\\"accountDisabled\\\",\\n    idmEndpoint: \\\"external/email\\\",\\n    idmAction: \\\"sendTemplate\\\"\\n};\\n\\n/**\\n * Node outcomes\\n*/\\nvar nodeOutcome = {\\n    PASS: \\\"sent\\\",\\n    FAIL: \\\"noMail\\\",\\n    ERROR: \\\"error\\\"\\n};\\n\\n/**\\n * Send email via the IDM Email Service openidm binding in next-gen scripting\\n * \\n * @param {string} mail - mail attribute retrieved from the idRepository. Note if this is a registration journey acquire mail from sharedState\\n */\\n\\nfunction sendMail(mail, protectActivityCity, protectActivityState) {\\n    try {\\n        var params = new Object();\\n        params.templateName = config.templateID;\\n        params.to = mail;\\n        params.object = {\\n            \\\"mail\\\": mail,\\n            \\\"custom_protectActivityCity\\\": protectActivityCity,\\n            \\\"custom_protectActivityState\\\": protectActivityState\\n        };\\n        openidm.action(config.idmEndpoint, config.idmAction, params);\\n        //Email send successfully\\n        return nodeOutcome.PASS;\\n    }\\n    catch (e) {\\n        //Failed to call IDM Email endpoint using template.\\n        return nodeOutcome.ERROR;\\n    }\\n};\\n\\nfunction capitalizeFirstLetter(string) {\\n    return string\\n    .split(' ')                   // Split the string into an array of words\\n    .map(word => \\n        word.charAt(0).toUpperCase() + word.slice(1)\\n    )                             // Capitalize the first letter of each word\\n    .join(' ');                   // Join the array back into a single string\\n    // return string.length > 0 ? string.charAt(0).toUpperCase() + string.slice(1) : \\\"\\\";\\n};\\n\\n/**\\n * Main function\\n */\\n\\n(function () {\\n    //Node execution started\\n    var id;\\n    var mail;\\n    var rawResponse;\\n    var protectActivityCity = \\\"\\\";\\n    var protectActivityState = \\\"\\\";\\n\\n    if (!(id = nodeState.get(\\\"_id\\\"))) {\\n        //Unable to retrieve Identity\\n        action.goTo(nodeOutcome.ERROR);\\n        return;\\n    } else {\\n        var identity = idRepository.getIdentity(id);\\n    }\\n\\n    //If this is a registration journey adapt the following to try retrieve from nodeState\\n    if (!(mail = identity.getAttributeValues(\\\"mail\\\").toArray()[0])) {\\n        //Unable to retrieve mail attribute from the idRepository\\n        action.goTo(nodeOutcome.FAIL);\\n        return;\\n    }\\n\\n    if(rawResponse = nodeState.get(\\\"PingOneProtectEvaluationNode.RISK\\\")){\\n        protectActivityCity = rawResponse.details.city;\\n        protectActivityState = rawResponse.details.state;\\n        protectActivityCity = capitalizeFirstLetter(protectActivityCity);\\n        protectActivityState = capitalizeFirstLetter(protectActivityState);\\n    }\\n\\n    //Execute function to send mail\\n    outcome = sendMail(mail, protectActivityCity, protectActivityState);\\n})();\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741056019134,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741870155634,
          "evaluatorVersion": "2.0"
        },
        "65d89169-9ff5-479d-a31a-d9729dcd4b06": {
          "_id": "65d89169-9ff5-479d-a31a-d9729dcd4b06",
          "name": "Money Transfer - Set Protect userId and username",
          "description": "Script to set userId and username to be used in P1 Protect nodes",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"_id\\\", \\\"username\\\"\\n    - Script Outputs: \\\"protectUserId\\\", \\\"protectUsername\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    var protectUserId = nodeState.get(\\\"_id\\\");\\n    var protectUsername = nodeState.get(\\\"username\\\");\\n    \\n    if(protectUserId === null) protectUserId = protectUsername;\\n    \\n    nodeState.putShared(\\\"protectUserId\\\", protectUserId);\\n    nodeState.putShared(\\\"protectUsername\\\", protectUsername);\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741057113416,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845568971,
          "evaluatorVersion": "2.0"
        },
        "b888eaa1-f132-4a22-a3d1-a287e61cb8a4": {
          "_id": "b888eaa1-f132-4a22-a3d1-a287e61cb8a4",
          "name": "Money Transfer - P1 Protect Action",
          "description": "Script to get action to be taken in Threat Detection Journey",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"p1ProtectAction\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"init\\\", \\\"eval\\\"\\n*/\\n\\ntry {\\n    // Only two state variables are expected to be put in shared state in the main journey: \\n    // \\\"init\\\" -> To initialize the P1 Protect to collect Risk SDK signals & \\n    // \\\"eval\\\" -> To send the Risk SDK signals to protect and evalute them\\n    var p1ProtectAction = nodeState.get(\\\"p1ProtectAction\\\");\\n    \\n    if(p1ProtectAction === \\\"init\\\") action.goTo(\\\"init\\\");\\n    else action.goTo(\\\"eval\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741057162651,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845568987,
          "evaluatorVersion": "2.0"
        },
        "df56b7ca-25a1-49e6-b364-4c25a3e1ba8e": {
          "_id": "df56b7ca-25a1-49e6-b364-4c25a3e1ba8e",
          "name": "Money Transfer - Send suspicious activity email",
          "description": "Script to send next-gen templated email if any suspicious activity detected",
          "script": "\"/**\\n * @file This script sends a templated email to a user via the IDM's configured email service\\n * using the openidm binding in next-gen scripting\\n * NOTE - The use of SendGrid is not supported in Production and must be changed to your own email service\\n * Steps are here: https://backstage.forgerock.com/docs/idcloud/latest/tenants/email-provider.html#external_smtp_email_server\\n * @version 0.2.0\\n * @keywords email mail sharedState transientState templateService\\n */\\n\\n/**\\n * Script configuration\\n*/\\n\\nvar config = {\\n    /**\\n     * @property {string} templateID - Identifier of email template\\n     * @property {string} idmEndpoint - IDM Endpoint used to send templated emails\\n     * @property {string} idmAction - IDM action executed against the idmEndpoint\\n     */\\n\\n    templateID: \\\"suspiciousActivity\\\",\\n    idmEndpoint: \\\"external/email\\\",\\n    idmAction: \\\"sendTemplate\\\"\\n};\\n\\n/**\\n * Node outcomes\\n*/\\nvar nodeOutcome = {\\n    PASS: \\\"sent\\\",\\n    FAIL: \\\"noMail\\\",\\n    ERROR: \\\"error\\\"\\n};\\n\\n/**\\n * Send email via the IDM Email Service openidm binding in next-gen scripting\\n * \\n * @param {string} mail - mail attribute retrieved from the idRepository. Note if this is a registration journey acquire mail from sharedState\\n */\\n\\nfunction sendMail(mail, protectActivityCity, protectActivityState) {\\n    try {\\n        var params = new Object();\\n        params.templateName = config.templateID;\\n        params.to = mail;\\n        params.object = {\\n            \\\"mail\\\": mail,\\n            \\\"custom_protectActivityCity\\\": protectActivityCity,\\n            \\\"custom_protectActivityState\\\": protectActivityState\\n        };\\n        openidm.action(config.idmEndpoint, config.idmAction, params);\\n        //Email send successfully\\n        return nodeOutcome.PASS;\\n    }\\n    catch (e) {\\n        //Failed to call IDM Email endpoint using template.\\n        return nodeOutcome.ERROR;\\n    }\\n};\\n\\nfunction capitalizeFirstLetter(string) {\\n    return string\\n    .split(' ')                   // Split the string into an array of words\\n    .map(word => \\n        word.charAt(0).toUpperCase() + word.slice(1)\\n    )                             // Capitalize the first letter of each word\\n    .join(' ');                   // Join the array back into a single string\\n    // return string.length > 0 ? string.charAt(0).toUpperCase() + string.slice(1) : \\\"\\\";\\n};\\n\\n/**\\n * Main function\\n */\\n\\n(function () {\\n    //Node execution started\\n    var id;\\n    var mail;\\n    var rawResponse;\\n    var protectActivityCity = \\\"\\\";\\n    var protectActivityState = \\\"\\\";\\n\\n    if (!(id = nodeState.get(\\\"_id\\\"))) {\\n        //Unable to retrieve Identity\\n        action.goTo(nodeOutcome.ERROR);\\n        return;\\n    } else {\\n        var identity = idRepository.getIdentity(id);\\n    }\\n\\n    //If this is a registration journey adapt the following to try retrieve from nodeState\\n    if (!(mail = identity.getAttributeValues(\\\"mail\\\").toArray()[0])) {\\n        //Unable to retrieve mail attribute from the idRepository\\n        action.goTo(nodeOutcome.FAIL);\\n        return;\\n    }\\n\\n    if(rawResponse = nodeState.get(\\\"PingOneProtectEvaluationNode.RISK\\\")){\\n        protectActivityCity = rawResponse.details.city;\\n        protectActivityState = rawResponse.details.state;\\n        protectActivityCity = capitalizeFirstLetter(protectActivityCity);\\n        protectActivityState = capitalizeFirstLetter(protectActivityState);\\n    }\\n\\n    //Execute function to send mail\\n    outcome = sendMail(mail, protectActivityCity, protectActivityState);\\n})();\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741057091447,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741870977172,
          "evaluatorVersion": "2.0"
        },
        "9f066aa9-5be2-44a3-abc9-fb6fceb95ccf": {
          "_id": "9f066aa9-5be2-44a3-abc9-fb6fceb95ccf",
          "name": "Money Transfer - P1 Protect Extract Parameters From Risk Evaluation",
          "description": "Script to extract parameters from P1 Protect Risk Evaluation",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"PingOneProtectEvaluationNode.RISK\\\", \\\"_id\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"highRisk\\\", \\\"newDevice\\\", \\\"low/medRisk\\\"\\n*/\\n\\ntry {\\n    function capitalizeFirstLetter(string) {\\n        return string\\n        .split(' ')                   // Split the string into an array of words\\n        .map(word => \\n            word.charAt(0).toUpperCase() + word.slice(1)\\n        )                             // Capitalize the first letter of each word\\n        .join(' ');                   // Join the array back into a single string\\n    }\\n    \\n    var rawResponse = nodeState.get(\\\"PingOneProtectEvaluationNode.RISK\\\");\\n    \\n    var riskLevel = rawResponse.result.level;\\n    \\n    // Get & Set the protect activity variables in user's profile (to be used in notification templates)\\n    var protectActivityCity = rawResponse.details.city;\\n    var protectActivityState = rawResponse.details.state;\\n    var protectDeviceOS = rawResponse.details.device.os.name;\\n    \\n    protectActivityCity = capitalizeFirstLetter(protectActivityCity);\\n    protectActivityState = capitalizeFirstLetter(protectActivityState);\\n    \\n    \\n    // Get the userId from nodestate\\n    var userId = nodeState.get(\\\"_id\\\");\\n    \\n    // Update the protectActvityCity attribute of user\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{\\\"operation\\\":\\\"replace\\\", \\\"field\\\":\\\"/custom_protectActivityCity\\\", \\\"value\\\":protectActivityCity}]);\\n    \\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{\\\"operation\\\":\\\"replace\\\", \\\"field\\\":\\\"/custom_protectActivityState\\\", \\\"value\\\":protectActivityState}]);\\n    \\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{\\\"operation\\\":\\\"replace\\\", \\\"field\\\":\\\"/custom_protectDeviceOS\\\", \\\"value\\\":protectDeviceOS}]);\\n    \\n    // Check if new device is found\\n    if(rawResponse.details.newDevice.status === \\\"UNKNOWN_DEVICE\\\") outcome = \\\"newDevice\\\";\\n    else if(riskLevel === \\\"HIGH\\\") outcome = \\\"highRisk\\\";\\n    else outcome = \\\"low/medRisk\\\";\\n    \\n    // Go to outcome\\n    action.goTo(outcome);\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741057053727,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1742222818120,
          "evaluatorVersion": "2.0"
        },
        "08ecb6ed-38d6-4eb6-b347-9894e59b88cb": {
          "_id": "08ecb6ed-38d6-4eb6-b347-9894e59b88cb",
          "name": "Money Transfer - P1 Protect Extract Flow Type",
          "description": "Script to extract flow type for Threat Detection Journey",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"flowType\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"Registration\\\", \\\"Authentication\\\", \\\"Authorization\\\"\\n*/\\n\\n// FlowType is required to be set in shared state in the parent journey\\n// Currently Reg & Authn flowTypes are supported in this script\\n// In future the list will increase to support types like Account Recovery, Authorization etc.\\ntry {\\n    if(nodeState.get('flowType') === \\\"Authentication\\\") outcome = \\\"Authentication\\\";\\n    else outcome = \\\"Authorization\\\";\\n    // Go to outcome\\n    action.goTo(outcome);    \\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741057100295,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845568972,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {},
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "Money Transfer - Inner Journey": {
      "tree": {
        "_id": "Money Transfer - Inner Journey",
        "_rev": "-431876314",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"Money Transfer\"]"
        },
        "entryNodeId": "27e3a248-8894-48a4-9475-7f9abba6586d",
        "innerTreeOnly": false,
        "nodes": {
          "1f7a9535-9550-4d5c-b154-556396e6292c": {
            "x": 1363,
            "y": 563.515625,
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e91398a9-a8ea-45db-82e5-5a0b021caebd"
            },
            "nodeType": "PageNode",
            "displayName": "Transfer Success Page"
          },
          "227e1d2e-0ead-468b-9e0b-9fcace35eee0": {
            "x": 1101,
            "y": 604.515625,
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "1f7a9535-9550-4d5c-b154-556396e6292c"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Update Balance"
          },
          "27e3a248-8894-48a4-9475-7f9abba6586d": {
            "x": 320.15625,
            "y": 236.515625,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e91398a9-a8ea-45db-82e5-5a0b021caebd"
            },
            "nodeType": "IdentifyExistingUserNode",
            "displayName": "Identify Existing User"
          },
          "57b620d8-331a-401d-b426-d38d0b72eaeb": {
            "x": 166,
            "y": 788.015625,
            "connections": {
              "APPROVAL_REQ": "efb690da-3c3c-462b-946f-e5db6be95525",
              "clientError": "8d514001-5dfb-455d-a1cf-9339251cec3b",
              "deny": "b6978e17-1722-4155-92c8-e7682f3c361f",
              "indeterminate": "e301438c-0bd0-429c-ab0c-66126501069a",
              "permit": "632be706-3631-467e-b0c0-ca5891f9113f"
            },
            "nodeType": "PingOneAuthorizeNode",
            "displayName": "PingOne Authorize"
          },
          "632be706-3631-467e-b0c0-ca5891f9113f": {
            "x": 548,
            "y": 590.015625,
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e2858eab-e11f-4f17-a128-31fec4ac1ad3"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Get User Details"
          },
          "8d514001-5dfb-455d-a1cf-9339251cec3b": {
            "x": 536,
            "y": 1299.03125,
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set Error Message"
          },
          "94398a6d-517e-48b1-8754-c4dbe3b44327": {
            "x": 1060,
            "y": 1129.03125,
            "connections": {
              "outcome": "632be706-3631-467e-b0c0-ca5891f9113f"
            },
            "nodeType": "EmailSuspendNode",
            "displayName": "Transfer Approval via Email"
          },
          "9ba322aa-832b-41d4-b1b1-68f2b4298375": {
            "x": 820,
            "y": 1081.03125,
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "false": "d308bddd-7e4f-43b7-b96c-15e6164835d1",
              "true": "94398a6d-517e-48b1-8754-c4dbe3b44327"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Validate Balance"
          },
          "9dd315e3-feed-4bf0-a8d7-f4850b9deacf": {
            "x": 1369,
            "y": 282.015625,
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "false": "d308bddd-7e4f-43b7-b96c-15e6164835d1",
              "true": "57b620d8-331a-401d-b426-d38d0b72eaeb"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Validate User Input"
          },
          "b6978e17-1722-4155-92c8-e7682f3c361f": {
            "x": 540.25,
            "y": 788.64453125,
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e91398a9-a8ea-45db-82e5-5a0b021caebd"
            },
            "nodeType": "PageNode",
            "displayName": "Transfer Failed Page"
          },
          "d308bddd-7e4f-43b7-b96c-15e6164835d1": {
            "x": 1061,
            "y": 237.015625,
            "connections": {
              "Cancel": "e91398a9-a8ea-45db-82e5-5a0b021caebd",
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Submit": "9dd315e3-feed-4bf0-a8d7-f4850b9deacf"
            },
            "nodeType": "PageNode",
            "displayName": "Make Transfer Page"
          },
          "e2858eab-e11f-4f17-a128-31fec4ac1ad3": {
            "x": 830,
            "y": 581.015625,
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "false": "d308bddd-7e4f-43b7-b96c-15e6164835d1",
              "true": "227e1d2e-0ead-468b-9e0b-9fcace35eee0"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Validate Balance"
          },
          "e91398a9-a8ea-45db-82e5-5a0b021caebd": {
            "x": 710,
            "y": 219.515625,
            "connections": {
              "Cancel": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "Continue": "d308bddd-7e4f-43b7-b96c-15e6164835d1",
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "nodeType": "PageNode",
            "displayName": "Manage Account Page"
          },
          "efb690da-3c3c-462b-946f-e5db6be95525": {
            "x": 534,
            "y": 1093.03125,
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "9ba322aa-832b-41d4-b1b1-68f2b4298375"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Get User Details"
          }
        },
        "staticNodes": {
          "startNode": {
            "x": 50,
            "y": 250
          },
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1188,
            "y": 29
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1936,
            "y": 553
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "1f7a9535-9550-4d5c-b154-556396e6292c": {
          "_id": "1f7a9535-9550-4d5c-b154-556396e6292c",
          "_rev": "2043277431",
          "nodes": [
            {
              "_id": "7f014617-83b5-4afc-8559-9495eded82d4",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Transfer Success Node"
            }
          ],
          "pageDescription": {},
          "stage": "{\"submitButtonText\":{\"en\":\"Continue\"}}",
          "pageHeader": {},
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "227e1d2e-0ead-468b-9e0b-9fcace35eee0": {
          "_id": "227e1d2e-0ead-468b-9e0b-9fcace35eee0",
          "_rev": "1754617566",
          "script": "68e72c2a-5ae5-447f-a9e3-23401c90e677",
          "outcomes": [
            "true",
            "Error"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "From",
            "To",
            "Amount",
            "checkingBalance",
            "savingsBalance",
            "_id"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "27e3a248-8894-48a4-9475-7f9abba6586d": {
          "_id": "27e3a248-8894-48a4-9475-7f9abba6586d",
          "_rev": "507013026",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "57b620d8-331a-401d-b426-d38d0b72eaeb": {
          "_id": "57b620d8-331a-401d-b426-d38d0b72eaeb",
          "_rev": "-268792769",
          "decisionEndpointID": "8013b631-a334-476a-b9a7-7f75bee45d06",
          "attributeList": [
            "Amount"
          ],
          "useContinue": false,
          "statementCodes": [
            "APPROVAL_REQ"
          ],
          "_type": {
            "_id": "PingOneAuthorizeNode",
            "name": "PingOne Authorize",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "permit",
              "displayName": "Permit"
            },
            {
              "id": "deny",
              "displayName": "Deny"
            },
            {
              "id": "indeterminate",
              "displayName": "Indeterminate"
            },
            {
              "id": "APPROVAL_REQ",
              "displayName": "APPROVAL_REQ"
            },
            {
              "id": "clientError",
              "displayName": "Error"
            }
          ]
        },
        "632be706-3631-467e-b0c0-ca5891f9113f": {
          "_id": "632be706-3631-467e-b0c0-ca5891f9113f",
          "_rev": "346214959",
          "script": "841f2ad9-ee32-4844-935a-dc4a67db75e3",
          "outcomes": [
            "true",
            "Error"
          ],
          "outputs": [
            "checkingBalance",
            "savingsBalance",
            "currency",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "8d514001-5dfb-455d-a1cf-9339251cec3b": {
          "_id": "8d514001-5dfb-455d-a1cf-9339251cec3b",
          "_rev": "1785598081",
          "script": "203816f3-a909-4a9a-b1cd-9c210244c015",
          "outcomes": [
            "true",
            "Error"
          ],
          "outputs": [
            "*"
          ],
          "inputs": [
            "*"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "94398a6d-517e-48b1-8754-c4dbe3b44327": {
          "_id": "94398a6d-517e-48b1-8754-c4dbe3b44327",
          "_rev": "-1259524375",
          "emailSuspendMessage": {
            "en": "An email has been sent to your registered email id.Please click on approve button to transfer money."
          },
          "emailTemplateName": "moneyTransferRequest",
          "identityAttribute": "userName",
          "emailAttribute": "mail",
          "objectLookup": true,
          "_type": {
            "_id": "EmailSuspendNode",
            "name": "Email Suspend Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "9ba322aa-832b-41d4-b1b1-68f2b4298375": {
          "_id": "9ba322aa-832b-41d4-b1b1-68f2b4298375",
          "_rev": "-978716945",
          "script": "7c569a3a-a670-449c-8b4e-9c6cfaaa4ce7",
          "outcomes": [
            "true",
            "false",
            "Error"
          ],
          "outputs": [
            "errorAmount",
            "errorMesaage",
            "errorDetails"
          ],
          "inputs": [
            "From",
            "To",
            "Amount",
            "checkingBalance",
            "savingsBalance"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "9dd315e3-feed-4bf0-a8d7-f4850b9deacf": {
          "_id": "9dd315e3-feed-4bf0-a8d7-f4850b9deacf",
          "_rev": "742207715",
          "script": "7e3c039c-3b72-44af-b5f0-9b55a29028a3",
          "outcomes": [
            "true",
            "false",
            "Error"
          ],
          "outputs": [
            "errorAccounts",
            "errorAmount",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "From",
            "To",
            "Amount"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "b6978e17-1722-4155-92c8-e7682f3c361f": {
          "_id": "b6978e17-1722-4155-92c8-e7682f3c361f",
          "_rev": "-1987536879",
          "nodes": [
            {
              "_id": "be5279ef-0284-4dcb-9703-bcf401d676b3",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Transfer Failed Node"
            }
          ],
          "pageDescription": {},
          "stage": "{\"submitButtonText\":{\"en\":\"Continue\"}}",
          "pageHeader": {},
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "d308bddd-7e4f-43b7-b96c-15e6164835d1": {
          "_id": "d308bddd-7e4f-43b7-b96c-15e6164835d1",
          "_rev": "1825583429",
          "nodes": [
            {
              "_id": "36f85f32-19f2-4246-aef2-8484686386d9",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Display Make Transfer Page"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Make a Transfer"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Submit",
              "displayName": "Submit"
            },
            {
              "id": "Cancel",
              "displayName": "Cancel"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "e2858eab-e11f-4f17-a128-31fec4ac1ad3": {
          "_id": "e2858eab-e11f-4f17-a128-31fec4ac1ad3",
          "_rev": "-1542273526",
          "script": "7c569a3a-a670-449c-8b4e-9c6cfaaa4ce7",
          "outcomes": [
            "true",
            "false",
            "Error"
          ],
          "outputs": [
            "errorAmount",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "From",
            "To",
            "Amount",
            "checkingBalance",
            "savingsBalance"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "e91398a9-a8ea-45db-82e5-5a0b021caebd": {
          "_id": "e91398a9-a8ea-45db-82e5-5a0b021caebd",
          "_rev": "-436762976",
          "nodes": [
            {
              "_id": "78163edb-82ad-4c41-a094-fbbbd01b8571",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Display Manage Account Page"
            }
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Manage Your Account"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Continue",
              "displayName": "Continue"
            },
            {
              "id": "Cancel",
              "displayName": "Cancel"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "efb690da-3c3c-462b-946f-e5db6be95525": {
          "_id": "efb690da-3c3c-462b-946f-e5db6be95525",
          "_rev": "1934276264",
          "script": "841f2ad9-ee32-4844-935a-dc4a67db75e3",
          "outcomes": [
            "true",
            "Error"
          ],
          "outputs": [
            "checkingBalance",
            "savingsBalance",
            "currency",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        }
      },
      "innerNodes": {
        "7f014617-83b5-4afc-8559-9495eded82d4": {
          "_id": "7f014617-83b5-4afc-8559-9495eded82d4",
          "_rev": "802941614",
          "script": "fec31608-db04-4af4-9b83-1d86442480fd",
          "outcomes": [
            "true",
            "Error"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "From",
            "To",
            "Amount",
            "currency"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "be5279ef-0284-4dcb-9703-bcf401d676b3": {
          "_id": "be5279ef-0284-4dcb-9703-bcf401d676b3",
          "_rev": "-1577175012",
          "script": "9bca5165-3ba2-4ba5-ab5f-a90ebf6fd56b",
          "outcomes": [
            "true",
            "Error"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "36f85f32-19f2-4246-aef2-8484686386d9": {
          "_id": "36f85f32-19f2-4246-aef2-8484686386d9",
          "_rev": "-1498037593",
          "script": "d4fac4b8-6c99-4d1b-a6ea-8c4f77f3e3f7",
          "outcomes": [
            "Submit",
            "Cancel",
            "Error"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails",
            "errorAmount",
            "errorAccounts",
            "From",
            "To",
            "Amount"
          ],
          "inputs": [
            "errorAccounts",
            "errorAmount",
            "From",
            "To"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Submit",
              "displayName": "Submit"
            },
            {
              "id": "Cancel",
              "displayName": "Cancel"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        },
        "78163edb-82ad-4c41-a094-fbbbd01b8571": {
          "_id": "78163edb-82ad-4c41-a094-fbbbd01b8571",
          "_rev": "439816400",
          "script": "331a879c-1eb7-4cfd-af64-311227b11977",
          "outcomes": [
            "Continue",
            "Cancel",
            "Error"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Continue",
              "displayName": "Continue"
            },
            {
              "id": "Cancel",
              "displayName": "Cancel"
            },
            {
              "id": "Error",
              "displayName": "Error"
            }
          ]
        }
      },
      "scripts": {
        "68e72c2a-5ae5-447f-a9e3-23401c90e677": {
          "_id": "68e72c2a-5ae5-447f-a9e3-23401c90e677",
          "name": "Money Transfer - Calculate and update balances",
          "description": "Script to calculate and update balance in both accounts after transfer",
          "script": "\"try {\\n    var from = nodeState.get(\\\"From\\\");\\n    var to = nodeState.get(\\\"To\\\");\\n    var amount = parseFloat(parseFloat(nodeState.get(\\\"Amount\\\") || 0).toFixed(2));\\n    var checkingBalance = parseFloat(parseFloat(nodeState.get(\\\"checkingBalance\\\") || 0).toFixed(2));\\n    var savingsBalance = parseFloat(parseFloat(nodeState.get(\\\"savingsBalance\\\") || 0).toFixed(2));\\n    var userId = nodeState.get(\\\"_id\\\");\\n\\n    function validate(p) {\\n\\t\\treturn /^[0-9]+(\\\\.[0-9]{1,2})?$/.test(p);\\n\\t}\\n    \\n    if(from === 'Checking' && amount <= checkingBalance){\\n        savingsBalanceValue = savingsBalance + amount;\\n\\t\\tcheckingBalanceValue = checkingBalance - amount;\\n\\t}\\n\\telse if (from === 'Savings' && amount <= savingsBalance){\\n        savingsBalanceValue = savingsBalance - amount;\\n\\t\\tcheckingBalanceValue = checkingBalance + amount;\\n\\t}\\n\\n    if(!validate(nodeState.get(\\\"Amount\\\")) || amount <= 0 || savingsBalanceValue < 0 || checkingBalanceValue < 0){\\n        nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    }\\n    else {\\n        // Update the user's custom attributes\\n        openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [\\n            {\\\"operation\\\":\\\"replace\\\", \\\"field\\\":\\\"/custom_checkingBalance\\\", \\\"value\\\":parseFloat(checkingBalanceValue || 0).toFixed(2)}, \\n            {\\\"operation\\\":\\\"replace\\\", \\\"field\\\":\\\"/custom_savingsBalance\\\", \\\"value\\\":parseFloat(savingsBalanceValue || 0).toFixed(2)}\\n        ]);\\n    }\\n    action.goTo(\\\"true\\\");\\n   \\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1739779522022,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845568970,
          "evaluatorVersion": "2.0"
        },
        "841f2ad9-ee32-4844-935a-dc4a67db75e3": {
          "_id": "841f2ad9-ee32-4844-935a-dc4a67db75e3",
          "name": "Money Transfer - Fetch user's custom attributes",
          "description": "Script to fetch user's custom attributes like account's balance ",
          "script": "\"try {\\n    // Retrieve user ID\\n    var userId = nodeState.get(\\\"_id\\\");\\n    \\n    var userObj = openidm.read(\\\"managed/alpha_user/\\\" + userId, null, [\\\"custom_currency\\\", \\\"custom_checkingBalance\\\", \\\"custom_savingsBalance\\\"]);\\n    var checkingBalance = (userObj && userObj.custom_checkingBalance) ? userObj.custom_checkingBalance : 0;\\n    var savingsBalance = (userObj && userObj.custom_savingsBalance) ? userObj.custom_savingsBalance : 0;\\n    var currency = (userObj && userObj.custom_currency) ? userObj.custom_currency : '';\\n    \\n    nodeState.putShared(\\\"checkingBalance\\\", checkingBalance);\\n    nodeState.putShared(\\\"savingsBalance\\\", savingsBalance);\\n    nodeState.putShared(\\\"currency\\\", currency);\\n    action.goTo(\\\"true\\\");\\n\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1739421416480,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845568970,
          "evaluatorVersion": "2.0"
        },
        "203816f3-a909-4a9a-b1cd-9c210244c015": {
          "_id": "203816f3-a909-4a9a-b1cd-9c210244c015",
          "name": "Money Transfer - Set error message",
          "description": "Script to set error message",
          "script": "\"// Set the below error message in shared state, can be displayed on the last UI Node\\n\\ntry {\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741782907649,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845568906,
          "evaluatorVersion": "2.0"
        },
        "7c569a3a-a670-449c-8b4e-9c6cfaaa4ce7": {
          "_id": "7c569a3a-a670-449c-8b4e-9c6cfaaa4ce7",
          "name": "Money Transfer - Check balance",
          "description": "Script to check if user has sufficient balance in source account",
          "script": "\"// Set the below error message in shared state, can be displayed on the last UI Node\\n\\ntry {\\n    var from = nodeState.get(\\\"From\\\");\\n    var to = nodeState.get(\\\"To\\\");\\n    var amount = nodeState.get(\\\"Amount\\\");\\n    var checkingAccountBalance = nodeState.get(\\\"checkingBalance\\\");\\n    var savingsAccountBalance = nodeState.get(\\\"savingsBalance\\\");\\n\\n    function validateAmount(inputAmount, fromAccount, checkingBalance, savingsBalance) {\\n        if(fromAccount === 'Checking' && (parseFloat(parseFloat(inputAmount || 0).toFixed(2)) > parseFloat(parseFloat(checkingBalance || 0).toFixed(2)))){\\n\\t\\t\\tnodeState.putShared(\\\"errorAmount\\\", \\\"Insufficient Balance\\\");\\n            return false;\\t\\n    \\t}\\n        else if (fromAccount === 'Savings' && (parseFloat(parseFloat(inputAmount || 0).toFixed(2)) > parseFloat(parseFloat(savingsBalance || 0).toFixed(2)))){\\n\\t\\t\\tnodeState.putShared(\\\"errorAmount\\\", \\\"Insufficient Balance\\\");\\n            return false;\\n    \\t}\\n\\t\\treturn true;\\n\\t}\\n    \\n    if(validateAmount(amount, from, checkingAccountBalance, savingsAccountBalance)){\\n        action.goTo(\\\"true\\\");\\n    }\\n    else{\\n         action.goTo(\\\"false\\\");\\n    }\\n   \\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1739869158115,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845568986,
          "evaluatorVersion": "2.0"
        },
        "7e3c039c-3b72-44af-b5f0-9b55a29028a3": {
          "_id": "7e3c039c-3b72-44af-b5f0-9b55a29028a3",
          "name": "Money Transfer - Validate user input",
          "description": "Script to validate input to check if they satisfy required conditions",
          "script": "\"// Set the below error message in shared state, can be displayed on the last UI Node\\n\\ntry {\\n    var from = nodeState.get(\\\"From\\\");\\n    var to = nodeState.get(\\\"To\\\");\\n    var amount = nodeState.get(\\\"Amount\\\");\\n\\n    function validateDropdown(fromAccount, toAccount) {\\n        if(fromAccount === toAccount){\\n            nodeState.putShared(\\\"errorAccounts\\\", \\\"Select different accounts to make a transfer\\\");\\n            return false;\\n        }\\n\\t\\treturn true;\\n\\t}\\n\\n    function validateAmount(inputAmount) {\\n        if(!(/^[0-9]+(\\\\.[0-9]{1,2})?$/.test(inputAmount))){\\n            nodeState.putShared(\\\"errorAmount\\\", \\\"Invalid Amount\\\");\\n            var decimalPlaces = inputAmount.split('.')[1]\\n            if(decimalPlaces && decimalPlaces.length > 2){\\n                nodeState.putShared(\\\"errorAmount\\\", \\\"Enter amount with upto 2 decimal places.\\\");\\n            }\\n            return false;\\n        }\\n        else if(parseFloat(parseFloat(inputAmount || 0).toFixed(2)) === 0.00){\\n            nodeState.putShared(\\\"errorAmount\\\", \\\"Amount must be over 0.00\\\");\\n             return false;\\n        }\\n        else if (parseFloat(parseFloat(inputAmount || 0).toFixed(2)) > 15000){\\n            nodeState.putShared(\\\"errorAmount\\\", \\\"Transfer amount cannot be more than 15000\\\");\\n             return false;\\n        }\\n\\t\\treturn true;\\n\\t}\\n    \\n    if(validateDropdown(from, to) && validateAmount(amount)){\\n        action.goTo(\\\"true\\\");\\n    }\\n    else{\\n         action.goTo(\\\"false\\\");\\n    }\\n   \\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1739459093749,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1742468635808,
          "evaluatorVersion": "2.0"
        },
        "fec31608-db04-4af4-9b83-1d86442480fd": {
          "_id": "fec31608-db04-4af4-9b83-1d86442480fd",
          "name": "Money Transfer - Display success screen",
          "description": "Script to display success screen to user",
          "script": "\"try{\\n    function validateInput() {\\n    return String(\\n        \\\"function go(obs) { \\\\n\\\" +\\n        \\\"    const message = document.getElementById('message'); \\\\n\\\" +\\n        \\\"    if (message) { \\\\n\\\" +\\n        \\\"        var divSection = document.createElement('div'); \\\\n\\\" +\\n        \\\"        divSection.id = 'successPage'; \\\\n\\\" +\\n        \\\"        message.insertBefore(divSection, message.nextSibling); \\\\n\\\" +\\n        \\\"        divSection.innerHTML = \\\\n\\\" +\\n        \\\"        `<style>\\\\n\\\" +\\n        \\\"            :root {\\\\n\\\" +\\n        \\\"                --animation-dimension: 100px;\\\\n\\\" +\\n        \\\"                --animation-start-color: #71E171;\\\\n\\\" +\\n        \\\"                --animation-midway-color: #67D067;\\\\n\\\" +\\n        \\\"                --animation-finish-color: #59B259;\\\\n\\\" +\\n        \\\"            }\\\\n\\\" +\\n        \\\"             .justify-content-center { justify-content: center !important } \\\\n\\\" +\\n        \\\"            .align-items-center { align-items: center !important } \\\\n\\\" +\\n        \\\"            .checkmark {\\\\n\\\" +\\n        \\\"                width: var(--animation-dimension);\\\\n\\\" +\\n        \\\"                height: var(--animation-dimension);\\\\n\\\" +\\n        \\\"                border-radius: 50%;\\\\n\\\" +\\n        \\\"                display: block;\\\\n\\\" +\\n        \\\"                stroke-width: 5;\\\\n\\\" +\\n        \\\"                stroke: #FFFFFF;\\\\n\\\" +\\n        \\\"                stroke-miterlimit: 10;\\\\n\\\" +\\n        \\\"                box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\\\\n\\\" +\\n        \\\"                animation: fill 0.4s ease-in-out 0.4s forwards,\\\\n\\\" +\\n        \\\"                    scale 0.3s ease-in-out 0.9s both;\\\\n\\\" +\\n        \\\"            }\\\\n\\\" +\\n        \\\"            .checkmarkCircle {\\\\n\\\" +\\n        \\\"                stroke-dasharray: 166;\\\\n\\\" +\\n        \\\"                stroke-dashoffset: 166;\\\\n\\\" +\\n        \\\"                stroke-width: 5;\\\\n\\\" +\\n        \\\"                stroke-miterlimit: 10;\\\\n\\\" +\\n        \\\"                stroke: var(--animation-finish-color);\\\\n\\\" +\\n        \\\"                fill: none;\\\\n\\\" +\\n        \\\"                animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards,\\\\n\\\" +\\n        \\\"                    colorChange 1.2s ease-in-out forwards;\\\\n\\\" +\\n        \\\"            }\\\\n\\\" +\\n        \\\"            .checkmarkCheck {\\\\n\\\" +\\n        \\\"                transform-origin: 50% 50%;\\\\n\\\" +\\n        \\\"                stroke-dasharray: 48;\\\\n\\\" +\\n        \\\"                stroke-dashoffset: 48;\\\\n\\\" +\\n        \\\"                animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards,\\\\n\\\" +\\n        \\\"                    colorChange 0.6s ease-in-out 0.8s forwards;\\\\n\\\" +\\n        \\\"            }\\\\n\\\" +\\n        \\\"            @keyframes colorChange {\\\\n\\\" +\\n        \\\"                0% {\\\\n\\\" +\\n        \\\"                    stroke: var(--animation-start-color);\\\\n\\\" +\\n        \\\"                }\\\\n\\\" +\\n        \\\"                50% {\\\\n\\\" +\\n        \\\"                    stroke: var(--animation-midway-color);\\\\n\\\" +\\n        \\\"                }\\\\n\\\" +\\n        \\\"                100% {\\\\n\\\" +\\n        \\\"                    stroke: var(--animation-finish-color);\\\\n\\\" +\\n        \\\"                }\\\\n\\\" +\\n        \\\"            }\\\\n\\\" +\\n        \\\"            @keyframes stroke {\\\\n\\\" +\\n        \\\"                100% {\\\\n\\\" +\\n        \\\"                    stroke-dashoffset: 0;\\\\n\\\" +\\n        \\\"                }\\\\n\\\" +\\n        \\\"            }\\\\n\\\" +\\n        \\\"            @keyframes scale {\\\\n\\\" +\\n        \\\"                0%,\\\\n\\\" +\\n        \\\"                100% {\\\\n\\\" +\\n        \\\"                    transform: none;\\\\n\\\" +\\n        \\\"                }\\\\n\\\" +\\n        \\\"                50% {\\\\n\\\" +\\n        \\\"                    transform: scale3d(1.1, 1.1, 1);\\\\n\\\" +\\n        \\\"                }\\\\n\\\" +\\n        \\\"                70% {\\\\n\\\" +\\n        \\\"                    transform: scale3d(0.98, 0.98, 1);\\\\n\\\" +\\n        \\\"                }\\\\n\\\" +\\n        \\\"                85% {\\\\n\\\" +\\n        \\\"                    transform: scale3d(1.02, 1.02, 1);\\\\n\\\" +\\n        \\\"                }\\\\n\\\" +\\n        \\\"            }\\\\n\\\" +\\n        \\\"            @keyframes fill {\\\\n\\\" +\\n        \\\"                100% {\\\\n\\\" +\\n        \\\"                    box-shadow: inset 0px 0px 0px 0px var(--animation-finish-color);\\\\n\\\" +\\n        \\\"                }\\\\n\\\" +\\n        \\\"            }\\\\n\\\" +\\n        \\\"        </style>\\\\n\\\" +\\n        \\\"        <div style='display: flex; align-items: center; justify-content: center'>\\\\n\\\" +\\n        \\\"            <svg class='checkmark' xmlns='http://www.w3.org/2000/svg' viewbox='0 0 52 52'>\\\\n\\\" +\\n        \\\"                <circle class='checkmarkCircle' cx='26' cy='26' r='25' fill='none' />\\\\n\\\" +\\n        \\\"                <path class='checkmarkCheck' fill='none' d='M14.1 27.2l7.1 7.2 16.7-16.8' />\\\\n\\\" +\\n        \\\"            </svg>\\\\n\\\" +\\n        \\\"        </div>`;\\\\n\\\" +\\n        \\\"        var heading = document.createElement('h3'); \\\\n\\\" +\\n        \\\"        heading.innerText = 'Transfer Successful';\\\\n\\\" +\\n        \\\"        heading.style.marginTop = '5%';\\\\n\\\" +\\n        \\\"        divSection.appendChild(heading); \\\\n\\\" +\\n        \\\"    }\\\\n\\\" +\\n        \\\"}\\\\n\\\" +\\n        \\\"go();\\\\n\\\"\\n    );\\n}\\n    var from = nodeState.get(\\\"From\\\");\\n    var to = nodeState.get(\\\"To\\\");\\n    var amount = parseFloat(nodeState.get(\\\"Amount\\\") || 0).toFixed(2);\\n    var currency = nodeState.get(\\\"currency\\\");\\n    if (callbacks.isEmpty()) {\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n        callbacksBuilder.textOutputCallback(0, \\\" \\\");\\n        callbacksBuilder.textOutputCallback(0, `Payment of ${currency}${amount} was made from ${from} to ${to}.`);\\n    } \\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1739874572216,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845568986,
          "evaluatorVersion": "2.0"
        },
        "9bca5165-3ba2-4ba5-ab5f-a90ebf6fd56b": {
          "_id": "9bca5165-3ba2-4ba5-ab5f-a90ebf6fd56b",
          "name": "Money Transfer - Display payment error screen",
          "description": "Script to display error screen to user",
          "script": "\"try {\\n    function validateInput() {\\n    return String(\\n        \\\"function go(obs) { \\\\n\\\" +\\n        \\\"    const message = document.getElementById('message'); \\\\n\\\" +\\n        \\\"    if (message) { \\\\n\\\" +\\n        \\\"        var divSection = document.createElement('div'); \\\\n\\\" +\\n        \\\"        divSection.id = 'errorPage'; \\\\n\\\" +\\n        \\\"        message.insertBefore(divSection, message.nextSibling); \\\\n\\\" +\\n        \\\"        divSection.innerHTML = \\\\n\\\" +\\n        \\\"        `<style>\\\\n\\\" +\\n        \\\"            :root {\\\\n\\\" +\\n        \\\"                --failure-animation-dimension: 120px;\\\\n\\\" +\\n        \\\"                --failure-animation-start-color: #e63946;\\\\n\\\" +\\n        \\\"                --failure-animation-midway-color: #d90429;\\\\n\\\" +\\n        \\\"                --failure-animation-finish-color: #ba000d;\\\\n\\\" +\\n        \\\"            }\\\\n\\\" +\\n        \\\"             .justify-content-center { justify-content: center !important } \\\\n\\\" +\\n        \\\"            .align-items-center { align-items: center !important } \\\\n\\\" +\\n        \\\"            .xmark {\\\\n\\\" +\\n        \\\"                width: var(--failure-animation-dimension);\\\\n\\\" +\\n        \\\"                height: var(--failure-animation-dimension);\\\\n\\\" +\\n        \\\"                border-radius: 50%;\\\\n\\\" +\\n        \\\"                display: block;\\\\n\\\" +\\n        \\\"                stroke-width: 5;\\\\n\\\" +\\n        \\\"                stroke: #FFFFFF;\\\\n\\\" +\\n        \\\"                stroke-miterlimit: 10;\\\\n\\\" +\\n        \\\"                box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\\\\n\\\" +\\n        \\\"                animation: fill 0.4s ease-in-out 0.4s forwards,\\\\n\\\" +\\n        \\\"                    scale 0.3s ease-in-out 0.9s both;\\\\n\\\" +\\n        \\\"            }\\\\n\\\" +\\n        \\\"            .xmarkCircle {\\\\n\\\" +\\n        \\\"                stroke-dasharray: 166;\\\\n\\\" +\\n        \\\"                stroke-dashoffset: 166;\\\\n\\\" +\\n        \\\"                stroke-width: 5;\\\\n\\\" +\\n        \\\"                stroke: var(--failure-animation-finish-color);\\\\n\\\" +\\n        \\\"                fill: none;\\\\n\\\" +\\n        \\\"                animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;\\\\n\\\" +\\n        \\\"            }\\\\n\\\" +\\n        \\\"            .xmarkX{\\\\n\\\" +\\n        \\\"                stroke-dasharray: 56;\\\\n\\\" +\\n        \\\"                stroke-dashoffset: 56;\\\\n\\\" +\\n        \\\"                stroke-width: 5;\\\\n\\\" +\\n        \\\"                stroke: var(--failure-animation-start-color);\\\\n\\\" +\\n        \\\"                animation: strokeX 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards,\\\\n\\\" +\\n        \\\"                    colorChangeX 0.6s ease-in-out 0.8s forwards;\\\\n\\\" +\\n        \\\"            }\\\\n\\\" +\\n        \\\"            @keyframes colorChange {\\\\n\\\" +\\n        \\\"                0% {\\\\n\\\" +\\n        \\\"                    stroke: var(--failure-animation-start-color);\\\\n\\\" +\\n        \\\"                }\\\\n\\\" +\\n        \\\"                50% {\\\\n\\\" +\\n        \\\"                    stroke: var(--failure-animation-midway-color);\\\\n\\\" +\\n        \\\"                }\\\\n\\\" +\\n        \\\"                100% {\\\\n\\\" +\\n        \\\"                    stroke: var(--failure-animation-finish-color);\\\\n\\\" +\\n        \\\"                }\\\\n\\\" +\\n        \\\"            }\\\\n\\\" +\\n        \\\"            @keyframes stroke {\\\\n\\\" +\\n        \\\"                to {\\\\n\\\" +\\n        \\\"                    stroke-dashoffset: 0;\\\\n\\\" +\\n        \\\"                }\\\\n\\\" +\\n        \\\"            }\\\\n\\\" +\\n        \\\"            @keyframes strokeX {\\\\n\\\" +\\n        \\\"                to {\\\\n\\\" +\\n        \\\"                    stroke-dashoffset: 0;\\\\n\\\" +\\n        \\\"                }\\\\n\\\" +\\n        \\\"            }\\\\n\\\" +\\n        \\\"            @keyframes scale {\\\\n\\\" +\\n        \\\"                0%,\\\\n\\\" +\\n        \\\"                100% {\\\\n\\\" +\\n        \\\"                    transform: none;\\\\n\\\" +\\n        \\\"                }\\\\n\\\" +\\n        \\\"                50% {\\\\n\\\" +\\n        \\\"                    transform: scale3d(1.1, 1.1, 1);\\\\n\\\" +\\n        \\\"                }\\\\n\\\" +\\n        \\\"                70% {\\\\n\\\" +\\n        \\\"                    transform: scale3d(0.98, 0.98, 1);\\\\n\\\" +\\n        \\\"                }\\\\n\\\" +\\n        \\\"                85% {\\\\n\\\" +\\n        \\\"                    transform: scale3d(1.02, 1.02, 1);\\\\n\\\" +\\n        \\\"                }\\\\n\\\" +\\n        \\\"            }\\\\n\\\" +\\n        \\\"        </style>\\\\n\\\" +\\n        \\\"        <div style='display: flex; align-items: center; justify-content: center'>\\\\n\\\" +\\n        \\\"            <svg width='153' height='133' viewBox='0 0 153 133' fill='none' xmlns='http://www.w3.org/2000/svg'>\\\\n\\\" +\\n        \\\"                <path d='M6.30669 132.565C5.16116 132.565 4.17364 132.289 3.34412 131.775C2.47509 131.262 1.80358 130.551 1.32956 129.682C0.816049 128.892 0.539542 127.983 0.500041 126.996C0.46054 126.008 0.737047 124.981 1.32956 123.994L71.6019 2.80457C72.1944 1.85655 72.9055 1.18503 73.735 0.711019C74.5645 0.237006 75.5125 0 76.5 0C77.4876 0 78.4356 0.237006 79.2651 0.711019C80.0946 1.18503 80.8057 1.85655 81.3982 2.80457L151.671 123.994C152.263 124.981 152.54 126.008 152.5 126.996C152.461 127.983 152.184 128.892 151.671 129.682C151.197 130.551 150.525 131.262 149.656 131.775C148.787 132.289 147.799 132.565 146.693 132.565H6.30669ZM11.9553 123.599H141.045L76.5 12.2453L11.9553 123.599ZM77.0926 111.748C78.5146 111.748 79.6601 111.274 80.6082 110.326C81.5562 109.378 81.9907 108.193 81.9907 106.771C81.9907 105.349 81.5167 104.204 80.5687 103.256C79.6206 102.308 78.4356 101.873 77.0136 101.873C75.5915 101.873 74.446 102.347 73.498 103.295C72.5499 104.243 72.1154 105.428 72.1154 106.85C72.1154 108.272 72.5894 109.418 73.5375 110.366C74.4855 111.314 75.6705 111.748 77.0926 111.748ZM77.0926 92.3929C78.3566 92.3929 79.4231 91.9584 80.2921 91.0894C81.1217 90.2204 81.5562 89.1538 81.5562 87.8898V53.8399C81.5562 52.5759 81.1217 51.5094 80.2526 50.6403C79.3836 49.7713 78.3171 49.3368 77.0136 49.3368C75.71 49.3368 74.683 49.7713 73.814 50.6403C72.9845 51.5094 72.5499 52.5759 72.5499 53.8399V87.8898C72.5499 89.1538 72.9845 90.2204 73.8535 91.0894C74.7225 91.9584 75.789 92.3929 77.0926 92.3929Z' fill='#A31300'/>\\\\n\\\" +\\n        \\\"            </svg>\\\\n\\\" +\\n        \\\"        </div>`;\\\\n\\\" +\\n        \\\"        var heading = document.createElement('h3'); \\\\n\\\" +\\n        \\\"        heading.innerText = 'Transfer Error';\\\\n\\\" +\\n        \\\"        heading.style.marginTop = '5%';\\\\n\\\" +\\n        \\\"        divSection.appendChild(heading); \\\\n\\\" +\\n        \\\"    }\\\\n\\\" +\\n        \\\"}\\\\n\\\" +\\n        \\\"go();\\\\n\\\"\\n    );\\n}\\nif (callbacks.isEmpty()) {\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n        callbacksBuilder.textOutputCallback(0, \\\" \\\");\\n        callbacksBuilder.textOutputCallback(0, \\\"Your transfer failed.\\\");\\n    } \\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1739799327849,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845569014,
          "evaluatorVersion": "2.0"
        },
        "d4fac4b8-6c99-4d1b-a6ea-8c4f77f3e3f7": {
          "_id": "d4fac4b8-6c99-4d1b-a6ea-8c4f77f3e3f7",
          "name": "Money Transfer - Display make transfer page",
          "description": "Script to take inputs from user to make a transfer",
          "script": "\"try{\\n    var accounts = [\\\"Checking\\\", \\\"Savings\\\"];\\n    var options = {\\n        0.0 : 'Submit',\\n        1.0 : 'Cancel'\\n    };\\n\\n    var errorAccounts = nodeState.get(\\\"errorAccounts\\\"); \\n    nodeState.putShared(\\\"errorAccounts\\\", \\\"\\\");\\n    var errorAmount = nodeState.get(\\\"errorAmount\\\"); \\n    nodeState.putShared(\\\"errorAmount\\\", \\\"\\\");\\n    var from = nodeState.get(\\\"From\\\");\\n    var to = nodeState.get(\\\"To\\\");\\n    var fromIdx = from && (accounts.indexOf(from) || accounts.indexOf(from) === 0) ? accounts.indexOf(from) : 0;\\n    var toIdx = to && (accounts.indexOf(to) || accounts.indexOf(to) === 0) ? accounts.indexOf(to) : 1;\\n \\n    if (callbacks.isEmpty()) {\\n        // Request choice from the user\\n        if (errorAccounts && errorAccounts.length) callbacksBuilder.textOutputCallback(2, errorAccounts);\\n        if (errorAmount && errorAmount.length) callbacksBuilder.textOutputCallback(2, errorAmount);\\n        callbacksBuilder.choiceCallback(\\\"From\\\", accounts, fromIdx, false);\\n        callbacksBuilder.choiceCallback(\\\"To\\\", accounts, toIdx, false);\\n        callbacksBuilder.textInputCallback(\\\"Amount\\\");\\n        callbacksBuilder.confirmationCallback(0, [\\\"Make Transfer\\\", \\\"Cancel\\\"], 0);\\n\\n    } else {\\n      // Callbacks returned from browser, save selected choice\\n      var fromIndex = callbacks.getChoiceCallbacks().get(0)[0];\\n      var fromAccount = accounts[fromIndex];\\n      var toIndex = callbacks.getChoiceCallbacks().get(1)[0];\\n      var toAccount = accounts[toIndex];\\n      var amount = callbacks.getTextInputCallbacks().get(0);\\n      var index = callbacks.getConfirmationCallbacks().get(0);\\n\\n      if (fromAccount === null || !fromAccount || toAccount === null || !toAccount || index === null || (!index && index !== 0.0)) {\\n        action.goTo(\\\"Error\\\");\\n      } else {\\n        nodeState.putShared(\\\"From\\\", fromAccount);\\n        nodeState.putShared(\\\"To\\\", toAccount);\\n        nodeState.putShared(\\\"Amount\\\", amount);\\n        action.goTo(options[index]);\\n      }\\n    }\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1739252978983,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845712956,
          "evaluatorVersion": "2.0"
        },
        "331a879c-1eb7-4cfd-af64-311227b11977": {
          "_id": "331a879c-1eb7-4cfd-af64-311227b11977",
          "name": "Money Transfer - Display manage account page",
          "description": "Script to display manage account page and prompt user to proceed to make transfer page",
          "script": "\"try{\\n    var options = {\\n        0.0 : 'Continue',\\n        1.0 : 'Cancel'\\n    }\\n    if (callbacks.isEmpty()) {\\n      // Request confirmation from the user\\n        callbacksBuilder.confirmationCallback(0, [\\\"Make a Transfer\\\", \\\"Back\\\"], 0);\\n    } else {\\n      // Callbacks returned from browser, save selected choice\\n      var index = callbacks.getConfirmationCallbacks().get(0);\\n      if (index === null || (!index && index !== 0.0)) {\\n        action.goTo(\\\"Error\\\");\\n      } else{\\n        action.goTo(options[index]);\\n      }\\n    }\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1739251924824,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845568987,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {
        "moneyTransferRequest": {
          "_id": "emailTemplate/moneyTransferRequest",
          "advancedEditor": true,
          "defaultLocale": "en",
          "description": "To get approval for money transfer",
          "displayName": "Money Transfer Request",
          "enabled": true,
          "from": "",
          "html": {
            "en": ""
          },
          "message": {
            "en": "<div style=\"display:block;width:400px;margin:0 auto;font-family:sans-serif;padding:30px 20px;text-align:center\">\n  <img src=\"https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png\" alt=\"Company Logo\" style=\"height:65px;margin-bottom:10px\" />\n  <h1>Transfer Request</h1>\n  <div style=\"margin-top:20px;margin-bottom:25px;text-align:left\">\n    <p> A request to transfer money has been made. If this wasn't you, do not approve this transfer and change your password.</p>\n    <p>\n      <a href=\"{{object.resumeURI}}\">\n        Approve \n   Transfer\n      </a>\n    </p>\n  </div>\n</div>"
          },
          "mimeType": "text/html",
          "styles": "body {\n   background-color: #324054;\n   color: #455469;\n   padding: 60px;\n   text-align: center \n}\n a {\n   text-decoration: none;\n   color: #109cf1;\n}\n .content {\n   background-color: #fff;\n   border-radius: 4px;\n   margin: 0 auto;\n   padding: 48px;\n   width: 235px \n}\n",
          "subject": {
            "en": "Action Required: Transfer Request"
          },
          "templateId": "moneyTransferRequest"
        }
      },
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "Money Transfer SignOn - Inner Journey": {
      "tree": {
        "_id": "Money Transfer SignOn - Inner Journey",
        "_rev": "-706522992",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"Money Transfer\"]"
        },
        "entryNodeId": "e38d9656-9c5a-40e8-9dce-24bd25add131",
        "innerTreeOnly": true,
        "nodes": {
          "02150ba9-fd5d-4f59-a7d4-915f6915a103": {
            "connections": {
              "true": "57308ac0-9177-4988-bd51-5b1c5c757a91"
            },
            "displayName": "Set flowType As Authentication",
            "nodeType": "ScriptedDecisionNode",
            "x": 700,
            "y": 915.03125
          },
          "02d34190-aae8-474d-84e2-e3a31681a6a7": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "displayName": "Update P1 Protect Eval Success",
            "nodeType": "product-PingOneProtectResultNode",
            "x": 1485,
            "y": 100.03125
          },
          "084aa5d3-94b5-497e-9f1b-36c1baa46603": {
            "connections": {
              "outcome": "cb52681c-724e-44a1-bbd5-6f68bf9d0ed4"
            },
            "displayName": "Email Suspend Node",
            "nodeType": "EmailSuspendNode",
            "x": 528,
            "y": 6.03125
          },
          "0c453dac-abbe-4041-bb96-351dc80ca8d4": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "46b91f4c-b4d3-44a3-b095-3feede9d500d"
            },
            "displayName": "Account Active Decision",
            "nodeType": "AccountActiveDecisionNode",
            "x": 559,
            "y": 420.015625
          },
          "1d3d9966-5ce9-43fa-a22f-9fa76718a9f4": {
            "connections": {
              "outcome": "6f3a8f67-de1a-4ab7-b019-b2575d28d290"
            },
            "displayName": "Accept Terms and Conditions",
            "nodeType": "AcceptTermsAndConditionsNode",
            "x": 1171,
            "y": 150.015625
          },
          "3511c924-7990-48b0-a099-5a56a2bd5932": {
            "connections": {
              "false": "6105cbcb-0570-49b7-a3a3-b4c310b3ab87",
              "true": "534e475e-137b-40f6-911d-ba0a530f4d2e"
            },
            "displayName": "Is Protect Analysis Required?",
            "nodeType": "ScriptedDecisionNode",
            "x": 178,
            "y": 342.03125
          },
          "353dad15-c249-42e6-ac89-a1bebe186bc7": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "d60c37c7-94eb-41b4-ab98-6f61f8ee6c42"
            },
            "displayName": "Initialize P1 Protect",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1371,
            "y": 908.03125
          },
          "353e910c-76c8-4685-988a-11308ffaac73": {
            "connections": {
              "false": "4634d04a-6f5d-4b64-becb-6cf0d4461325",
              "true": "6105cbcb-0570-49b7-a3a3-b4c310b3ab87"
            },
            "displayName": "Protect Evaluation & Mitigation",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 165,
            "y": 52.015625
          },
          "4634d04a-6f5d-4b64-becb-6cf0d4461325": {
            "connections": {
              "outcome": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "displayName": "Update P1 Protect Eval Failure",
            "nodeType": "product-PingOneProtectResultNode",
            "x": 1543,
            "y": 651.03125
          },
          "46b91f4c-b4d3-44a3-b095-3feede9d500d": {
            "connections": {
              "false": "084aa5d3-94b5-497e-9f1b-36c1baa46603",
              "true": "b0bb9df0-ae6e-45aa-8caf-093a4d2935e9"
            },
            "displayName": "Is Email Verified?",
            "nodeType": "AttributeValueDecisionNode",
            "x": 536.203125,
            "y": 114.015625
          },
          "534e475e-137b-40f6-911d-ba0a530f4d2e": {
            "connections": {
              "true": "353e910c-76c8-4685-988a-11308ffaac73"
            },
            "displayName": "Set p1ProtectAction As Eval",
            "nodeType": "ScriptedDecisionNode",
            "x": 171,
            "y": 229.015625
          },
          "57308ac0-9177-4988-bd51-5b1c5c757a91": {
            "connections": {
              "true": "353dad15-c249-42e6-ac89-a1bebe186bc7"
            },
            "displayName": "Set p1ProtectAction As Init",
            "nodeType": "ScriptedDecisionNode",
            "x": 1038,
            "y": 922.03125
          },
          "5fda5adb-302e-471e-834e-39abbd71f7cc": {
            "connections": {
              "false": "1d3d9966-5ce9-43fa-a22f-9fa76718a9f4",
              "true": "02d34190-aae8-474d-84e2-e3a31681a6a7"
            },
            "displayName": "Terms and Conditions Decision",
            "nodeType": "TermsAndConditionsDecisionNode",
            "x": 1154,
            "y": 7.015625
          },
          "6105cbcb-0570-49b7-a3a3-b4c310b3ab87": {
            "connections": {
              "CANCELLED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "EXPIRED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "FALSE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "LOCKED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "TRUE": "0c453dac-abbe-4041-bb96-351dc80ca8d4"
            },
            "displayName": "Identity Store Decision",
            "nodeType": "IdentityStoreDecisionNode",
            "x": 566.15625,
            "y": 594.015625
          },
          "6f3a8f67-de1a-4ab7-b019-b2575d28d290": {
            "connections": {
              "FAILURE": "4634d04a-6f5d-4b64-becb-6cf0d4461325",
              "PATCHED": "02d34190-aae8-474d-84e2-e3a31681a6a7"
            },
            "displayName": "Patch Object",
            "nodeType": "PatchObjectNode",
            "x": 1264,
            "y": 270.015625
          },
          "7cfa88b3-54f1-4b49-9e20-42a3dbc25719": {
            "connections": {
              "false": "4634d04a-6f5d-4b64-becb-6cf0d4461325",
              "true": "5fda5adb-302e-471e-834e-39abbd71f7cc"
            },
            "displayName": "MFA Authentication",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 988,
            "y": 269.015625
          },
          "b0bb9df0-ae6e-45aa-8caf-093a4d2935e9": {
            "connections": {
              "false": "5fda5adb-302e-471e-834e-39abbd71f7cc",
              "true": "7cfa88b3-54f1-4b49-9e20-42a3dbc25719"
            },
            "displayName": "Auth Level Decision",
            "nodeType": "AuthLevelDecisionNode",
            "x": 801,
            "y": 133.015625
          },
          "cb52681c-724e-44a1-bbd5-6f68bf9d0ed4": {
            "connections": {
              "true": "b0bb9df0-ae6e-45aa-8caf-093a4d2935e9"
            },
            "displayName": "Set Email Ver. Status To True",
            "nodeType": "ScriptedDecisionNode",
            "x": 807,
            "y": 15.03125
          },
          "d60c37c7-94eb-41b4-ab98-6f61f8ee6c42": {
            "connections": {
              "true": "3511c924-7990-48b0-a099-5a56a2bd5932"
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 198,
            "y": 504.015625
          },
          "e0d5b3a1-7742-47c2-b230-5b9b5c979ae9": {
            "connections": {
              "false": "d60c37c7-94eb-41b4-ab98-6f61f8ee6c42",
              "true": "02150ba9-fd5d-4f59-a7d4-915f6915a103"
            },
            "displayName": "Is Protect Analysis Required?",
            "nodeType": "ScriptedDecisionNode",
            "x": 401,
            "y": 881.03125
          },
          "e38d9656-9c5a-40e8-9dce-24bd25add131": {
            "connections": {
              "DONE": "e0d5b3a1-7742-47c2-b230-5b9b5c979ae9"
            },
            "displayName": "Polling Wait Node",
            "nodeType": "PollingWaitNode",
            "x": 164,
            "y": 894.03125
          }
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 2143,
            "y": 98
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 2040,
            "y": 829
          },
          "startNode": {
            "x": 32,
            "y": 210
          }
        },
        "mustRun": false,
        "enabled": true
      },
      "nodes": {
        "02150ba9-fd5d-4f59-a7d4-915f6915a103": {
          "_id": "02150ba9-fd5d-4f59-a7d4-915f6915a103",
          "_rev": "-531222099",
          "script": "d06b0c32-79ff-46d9-af23-99b435bb5a49",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "flowType",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "02d34190-aae8-474d-84e2-e3a31681a6a7": {
          "_id": "02d34190-aae8-474d-84e2-e3a31681a6a7",
          "_rev": "-1279758973",
          "status": "SUCCESS",
          "_type": {
            "_id": "product-PingOneProtectResultNode",
            "name": "PingOne Protect Result",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "084aa5d3-94b5-497e-9f1b-36c1baa46603": {
          "_id": "084aa5d3-94b5-497e-9f1b-36c1baa46603",
          "_rev": "29157752",
          "emailSuspendMessage": {
            "en": "An email has been sent to the address you entered. Click the link in that email to proceed."
          },
          "emailTemplateName": "magicLinkTemplate",
          "identityAttribute": "userName",
          "emailAttribute": "mail",
          "objectLookup": true,
          "_type": {
            "_id": "EmailSuspendNode",
            "name": "Email Suspend Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "0c453dac-abbe-4041-bb96-351dc80ca8d4": {
          "_id": "0c453dac-abbe-4041-bb96-351dc80ca8d4",
          "_rev": "-2002500994",
          "_type": {
            "_id": "AccountActiveDecisionNode",
            "name": "Account Active Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "1d3d9966-5ce9-43fa-a22f-9fa76718a9f4": {
          "_id": "1d3d9966-5ce9-43fa-a22f-9fa76718a9f4",
          "_rev": "598807171",
          "_type": {
            "_id": "AcceptTermsAndConditionsNode",
            "name": "Accept Terms and Conditions",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "3511c924-7990-48b0-a099-5a56a2bd5932": {
          "_id": "3511c924-7990-48b0-a099-5a56a2bd5932",
          "_rev": "1131815004",
          "script": "2123ea21-2007-4e83-a3cc-d7e59e96638f",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_protectAnalysisRequired"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "353dad15-c249-42e6-ac89-a1bebe186bc7": {
          "_id": "353dad15-c249-42e6-ac89-a1bebe186bc7",
          "_rev": "590098644",
          "tree": "Money Transfer -Threat Detection - Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "353e910c-76c8-4685-988a-11308ffaac73": {
          "_id": "353e910c-76c8-4685-988a-11308ffaac73",
          "_rev": "348349499",
          "tree": "Money Transfer -Threat Detection - Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "4634d04a-6f5d-4b64-becb-6cf0d4461325": {
          "_id": "4634d04a-6f5d-4b64-becb-6cf0d4461325",
          "_rev": "-1420431407",
          "status": "FAILED",
          "_type": {
            "_id": "product-PingOneProtectResultNode",
            "name": "PingOne Protect Result",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "46b91f4c-b4d3-44a3-b095-3feede9d500d": {
          "_id": "46b91f4c-b4d3-44a3-b095-3feede9d500d",
          "_rev": "-1386203113",
          "comparisonValue": "true",
          "comparisonOperation": "EQUALS",
          "identityAttribute": "userName",
          "comparisonAttribute": "custom_emailVerified",
          "_type": {
            "_id": "AttributeValueDecisionNode",
            "name": "Attribute Value Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "534e475e-137b-40f6-911d-ba0a530f4d2e": {
          "_id": "534e475e-137b-40f6-911d-ba0a530f4d2e",
          "_rev": "-1550657859",
          "script": "0ae3e371-ea27-48a5-add8-09eb49ae5b57",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "p1ProtectAction",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "57308ac0-9177-4988-bd51-5b1c5c757a91": {
          "_id": "57308ac0-9177-4988-bd51-5b1c5c757a91",
          "_rev": "72894546",
          "script": "ff5af31d-95a3-4267-be21-a4dd7160b059",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "p1ProtectAction",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "5fda5adb-302e-471e-834e-39abbd71f7cc": {
          "_id": "5fda5adb-302e-471e-834e-39abbd71f7cc",
          "_rev": "-1935083218",
          "identityAttribute": "userName",
          "_type": {
            "_id": "TermsAndConditionsDecisionNode",
            "name": "Terms and Conditions Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "6105cbcb-0570-49b7-a3a3-b4c310b3ab87": {
          "_id": "6105cbcb-0570-49b7-a3a3-b4c310b3ab87",
          "_rev": "-1888515059",
          "useUniversalIdForUsername": false,
          "minimumPasswordLength": 8,
          "mixedCaseForPasswordChangeMessages": false,
          "_type": {
            "_id": "IdentityStoreDecisionNode",
            "name": "Identity Store Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "TRUE",
              "displayName": "True"
            },
            {
              "id": "FALSE",
              "displayName": "False"
            },
            {
              "id": "LOCKED",
              "displayName": "Locked"
            },
            {
              "id": "CANCELLED",
              "displayName": "Cancelled"
            },
            {
              "id": "EXPIRED",
              "displayName": "Expired"
            }
          ]
        },
        "6f3a8f67-de1a-4ab7-b019-b2575d28d290": {
          "_id": "6f3a8f67-de1a-4ab7-b019-b2575d28d290",
          "_rev": "-1336820210",
          "identityResource": "managed/alpha_user",
          "patchAsObject": false,
          "ignoredFields": [],
          "identityAttribute": "userName",
          "_type": {
            "_id": "PatchObjectNode",
            "name": "Patch Object",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "PATCHED",
              "displayName": "Patched"
            },
            {
              "id": "FAILURE",
              "displayName": "Failed"
            }
          ]
        },
        "7cfa88b3-54f1-4b49-9e20-42a3dbc25719": {
          "_id": "7cfa88b3-54f1-4b49-9e20-42a3dbc25719",
          "_rev": "-1289019036",
          "tree": "Money Transfer - MFA Authentication - Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "b0bb9df0-ae6e-45aa-8caf-093a4d2935e9": {
          "_id": "b0bb9df0-ae6e-45aa-8caf-093a4d2935e9",
          "_rev": "43992480",
          "authLevelRequirement": 1,
          "_type": {
            "_id": "AuthLevelDecisionNode",
            "name": "Auth Level Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "cb52681c-724e-44a1-bbd5-6f68bf9d0ed4": {
          "_id": "cb52681c-724e-44a1-bbd5-6f68bf9d0ed4",
          "_rev": "-1705264472",
          "script": "bb79fe1e-6bd3-407d-bb49-704f348b271c",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "_id",
            "ciam_allowedMFATypes"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "d60c37c7-94eb-41b4-ab98-6f61f8ee6c42": {
          "_id": "d60c37c7-94eb-41b4-ab98-6f61f8ee6c42",
          "_rev": "-1033054455",
          "nodes": [
            {
              "_id": "0dc4cdb0-39f0-4b5b-a335-f5c451606431",
              "nodeType": "ValidatedUsernameNode",
              "displayName": "Platform Username"
            },
            {
              "_id": "a5bef78a-334e-45ac-8f21-43c568c56449",
              "nodeType": "ValidatedPasswordNode",
              "displayName": "Platform Password"
            },
            {
              "_id": "379e30a5-73ba-48f9-88f3-d88e84515801",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Validate Inputs"
            }
          ],
          "pageDescription": {},
          "stage": "{\"submitButtonText\":{\"en\":\"Sign In\"}}",
          "pageHeader": {
            "en": "Sign In"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "e0d5b3a1-7742-47c2-b230-5b9b5c979ae9": {
          "_id": "e0d5b3a1-7742-47c2-b230-5b9b5c979ae9",
          "_rev": "1958450039",
          "script": "2123ea21-2007-4e83-a3cc-d7e59e96638f",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_protectAnalysisRequired"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "e38d9656-9c5a-40e8-9dce-24bd25add131": {
          "_id": "e38d9656-9c5a-40e8-9dce-24bd25add131",
          "_rev": "945665180",
          "spamDetectionTolerance": 3,
          "spamDetectionEnabled": false,
          "exitMessage": {},
          "waitingMessage": {
            "en": "Loading..."
          },
          "secondsToWait": 2,
          "exitable": false,
          "_type": {
            "_id": "PollingWaitNode",
            "name": "Polling Wait Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "DONE",
              "displayName": "Done"
            }
          ]
        }
      },
      "innerNodes": {
        "0dc4cdb0-39f0-4b5b-a335-f5c451606431": {
          "_id": "0dc4cdb0-39f0-4b5b-a335-f5c451606431",
          "_rev": "-1375421269",
          "usernameAttribute": "userName",
          "validateInput": false,
          "_type": {
            "_id": "ValidatedUsernameNode",
            "name": "Platform Username",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "a5bef78a-334e-45ac-8f21-43c568c56449": {
          "_id": "a5bef78a-334e-45ac-8f21-43c568c56449",
          "_rev": "-1201973132",
          "passwordAttribute": "password",
          "validateInput": false,
          "_type": {
            "_id": "ValidatedPasswordNode",
            "name": "Platform Password",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "379e30a5-73ba-48f9-88f3-d88e84515801": {
          "_id": "379e30a5-73ba-48f9-88f3-d88e84515801",
          "_rev": "-214489034",
          "script": "b1d84a77-35f5-47b9-a354-7982ad2b924b",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        }
      },
      "scripts": {
        "d06b0c32-79ff-46d9-af23-99b435bb5a49": {
          "_id": "d06b0c32-79ff-46d9-af23-99b435bb5a49",
          "name": "Money Transfer - Set Flow Type As Authentication",
          "description": "Script to set flowType as Authentication",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"ciam_protectAnalysisRequired\\\", esv.p1.protect.analysis.required\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\", \\\"false\\\"\\n*/\\n\\ntry {\\n    // Setting the flowType as Authentication, this will be used to differentiate paths in Threat Detection Journey\\n    nodeState.putShared(\\\"flowType\\\", \\\"Authentication\\\");\\n    // Go to true\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\\n\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741056003672,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845569001,
          "evaluatorVersion": "2.0"
        },
        "2123ea21-2007-4e83-a3cc-d7e59e96638f": {
          "_id": "2123ea21-2007-4e83-a3cc-d7e59e96638f",
          "name": "Money Transfer - Protect Analysis Required",
          "description": "Script to check if P1 Protect analysis is required or not",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"ciam_protectAnalysisRequired\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\", \\\"false\\\"\\n*/\\n\\n// Prerequisites: Set the environment variable: p1-protect-analysis-required\\n\\ntry {\\n    // Get Protect analysis required or not from the Environment variable\\n    var protectAnalysisRequired = (systemEnv.getProperty(\\\"esv.p1.protect.analysis.required\\\") && systemEnv.getProperty(\\\"esv.p1.protect.analysis.required\\\").length) ? systemEnv.getProperty(\\\"esv.p1.protect.analysis.required\\\") : nodeState.get(\\\"ciam_protectAnalysisRequired\\\");\\n    \\n    if(protectAnalysisRequired === \\\"true\\\" || protectAnalysisRequired === true) outcome = \\\"true\\\";\\n    else outcome = \\\"false\\\";\\n    // Go to outcome\\n    action.goTo(outcome);\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741055726903,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1742468488041,
          "evaluatorVersion": "2.0"
        },
        "0ae3e371-ea27-48a5-add8-09eb49ae5b57": {
          "_id": "0ae3e371-ea27-48a5-add8-09eb49ae5b57",
          "name": "Money Transfer - Set Protect Action As Eval",
          "description": "Script to set Protect action as Eval, will be used in Threat Detection Journey to evaluate Risk",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: null\\n    - Script Outputs: \\\"p1ProtectAction\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {  \\n    // Action to be taken in threat detection child journey\\n    nodeState.putShared(\\\"p1ProtectAction\\\", \\\"eval\\\");\\n    // Go to true\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\\n\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741057033186,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845568980,
          "evaluatorVersion": "2.0"
        },
        "ff5af31d-95a3-4267-be21-a4dd7160b059": {
          "_id": "ff5af31d-95a3-4267-be21-a4dd7160b059",
          "name": "Money Transfer - Set Protect Action Init",
          "description": "Script to set Protect action as Eval, will be used in Threat Detection Journey to initialize Protect SDK",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: null\\n    - Script Outputs: \\\"p1ProtectAction\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    // Action to be taken in threat detection child journey\\n    nodeState.putShared(\\\"p1ProtectAction\\\", \\\"init\\\");\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741055992053,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845569014,
          "evaluatorVersion": "2.0"
        },
        "bb79fe1e-6bd3-407d-bb49-704f348b271c": {
          "_id": "bb79fe1e-6bd3-407d-bb49-704f348b271c",
          "name": "Money Transfer - Set email verification status",
          "description": "Script to set email verification status in user's profile",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"_id\\\", \\\"ciam_allowedMFATypes\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\n// Caution: This script might auto-enroll the \\\"EMAIL\\\" as a MFA method in user's profile\\n\\n\\ntry {\\n    // Get the userId\\n    var userId = nodeState.get(\\\"_id\\\");\\n    \\n    // Update the email verification status attribute of user to \\\"true\\\"\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{\\\"operation\\\":\\\"replace\\\", \\\"field\\\":\\\"/custom_emailVerified\\\", \\\"value\\\":\\\"true\\\"}]);\\n\\n    // Enroll email as an MFA authentication method\\n    var allowedMFAMethods = nodeState.get(\\\"ciam_allowedMFATypes\\\");\\n    var mfaDevicesObj = openidm.read(\\\"managed/alpha_user/\\\" + userId, null, [\\\"custom_mfaDevices\\\"]);\\n    var mfaDevices = (mfaDevicesObj && mfaDevicesObj.custom_mfaDevices) ? mfaDevicesObj.custom_mfaDevices : [];\\n\\n    // By default returned mfaDevices is of Object type so values are parsed in a new array\\n    var usableMFADevices = [];\\n   \\n    mfaDevices.forEach(device => {\\n        usableMFADevices.push(device);\\n    });\\n\\n    var emailMFAAllowed = false;\\n    allowedMFAMethods.forEach(device => {\\n        if(device === \\\"EMAIL\\\") emailMFAAllowed = true;\\n    });\\n    \\n    // Add email to the MFA Devices list, if not already present \\n    if(emailMFAAllowed && !usableMFADevices.includes(\\\"EMAIL\\\")) usableMFADevices.push(\\\"EMAIL\\\");\\n    \\n    // Update the custom_mfaDevices Object\\n    openidm.patch(\\\"managed/alpha_user/\\\" + userId, null, [{\\\"operation\\\":\\\"replace\\\", \\\"field\\\":\\\"/custom_mfaDevices\\\", \\\"value\\\":usableMFADevices}]);\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error\\n    action.goTo(\\\"Error\\\");\\n}\\n\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741056859084,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845568987,
          "evaluatorVersion": "2.0"
        },
        "b1d84a77-35f5-47b9-a354-7982ad2b924b": {
          "_id": "b1d84a77-35f5-47b9-a354-7982ad2b924b",
          "name": "Money Transfer - Validating Inputs - Authentication",
          "description": "Script to validate inputs, sets constraints, and enables/disables the submit button based on validity",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: null\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    // Disable next button, if input is empty\\n    function validateInput() {\\n        return String(\\\" \\\\n\\\\\\n                    const submitBtn = document.querySelectorAll('button[type=\\\\\\\"submit\\\\\\\"]')[0]; \\\\n\\\\\\n                if(submitBtn) submitBtn.disabled = true; \\\\n\\\\\\n                function go(obs) { \\\\n\\\\\\n                    const username = document.querySelectorAll('input[data-vv-as=\\\\\\\"User Name\\\\\\\"]')[0]; \\\\n\\\\\\n                    const password = document.querySelectorAll('input[data-vv-as=\\\\\\\"Password\\\\\\\"]')[0]; \\\\n\\\\\\n                    if (username && password && submitBtn) { \\\\n\\\\\\n                        const enableSubmitBtn = () => { \\\\n\\\\\\n                              // Check input validity before enabling submit button \\\\n\\\\\\n                                const isValidInput = username.value.length > 0 && password.value.length > 0; \\\\n\\\\\\n                                if (isValidInput) { \\\\n\\\\\\n                                    submitBtn.disabled = false; \\\\n\\\\\\n                                } else { \\\\n\\\\\\n                                    // Otherwise, disable the button \\\\n\\\\\\n                                    submitBtn.disabled = true; \\\\n\\\\\\n                                } \\\\n\\\\\\n                        }; \\\\n\\\\\\n                        // Revalidate before form submission \\\\n\\\\\\n                        submitBtn.addEventListener('click', (event) => { \\\\n\\\\\\n                            const isValidInput = username.value.length > 0 && password.value.length > 0; \\\\n\\\\\\n                            if (!isValidInput) { \\\\n\\\\\\n                                event.preventDefault(); \\\\n\\\\\\n                                submitBtn.disabled = true; \\\\n\\\\\\n                            } \\\\n\\\\\\n                        }); \\\\n\\\\\\n                        username.addEventListener('input', enableSubmitBtn); \\\\n\\\\\\n                        password.addEventListener('input', enableSubmitBtn); \\\\n\\\\\\n                        if (obs) obs.disconnect(); \\\\n\\\\\\n                        return; \\\\n\\\\\\n                   } \\\\n\\\\\\n                  } \\\\n\\\\\\n                  if (document.querySelectorAll('input[data-vv-as=\\\\\\\"User Name\\\\\\\"]')[0] && document.querySelectorAll('input[data-vv-as=\\\\\\\"Password\\\\\\\"]')[0]) go(); \\\\n\\\\\\n                  else { \\\\n\\\\\\n                    const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\\\n\\\\\\n                    observer.observe(document, { childList: true, subtree: true }); \\\\n\\\\\\n                  } \\\\n\\\\\\n        \\\");\\n    }\\n    \\n    if (callbacks.isEmpty()) {                \\n        // Request callbacks\\n        callbacksBuilder.scriptTextOutputCallback(validateInput());\\n    }\\n    // Go to true\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error \\n    action.goTo(\\\"Error\\\");\\n}\\n\\n\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741056969509,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845568980,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {
        "magicLinkTemplate": {
          "_id": "emailTemplate/magicLinkTemplate",
          "advancedEditor": true,
          "defaultLocale": "en",
          "description": "To authenticate with email address ",
          "displayName": "Magic Link Template",
          "enabled": true,
          "from": "",
          "html": {
            "en": "",
            "fr": ""
          },
          "message": {
            "en": "<div style=\"display:block;text-align:center;font-family:sans-serif;border:1px solid #c5c5c5;width:400px;padding:30px 20px\">\n  <img src=\"https://assets.pingone.com/ux/ui-library/5.0.2/images/logo-pingidentity.png\" alt=\"Company Logo\" style=\"height:65px;margin-bottom:10px\" />\n  <h1>Sign On Request</h1>\n  <div style=\"margin-top:20px;margin-bottom:25px\">\n    <p>Please click the link below to authenticate. </p>\n    <a href=\"{{object.resumeURI}}\" style=\"font-size:14pt\">Complete Sign On</a>\n  </div>\n</div>",
            "fr": "<html>\n  <head></head>\n  <body style=\"background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;\">\n    <h3>Ceci est votre mail d'inscription.</h3>\n    <p>\n      <a href=\"{{object.resumeURI}}\" style=\"text-decoration: none; color: #109cf1;\">Lien de vérification email</a>\n    </p>\n  </body>\n</html>"
          },
          "mimeType": "text/html",
          "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
          "subject": {
            "en": "Sign On Request",
            "fr": "Créer un nouveau compte"
          },
          "templateId": "magicLinkTemplate"
        }
      },
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    },
    "Money Transfer - Main Journey": {
      "tree": {
        "_id": "Money Transfer - Main Journey",
        "_rev": "-1156354960",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"Money Transfer\"]"
        },
        "entryNodeId": "f5125828-6fd5-4955-8251-9c8eea12b43d",
        "innerTreeOnly": false,
        "nodes": {
          "0789e442-daef-444b-b9f3-c93ee79d2451": {
            "x": 995,
            "y": 59.015625,
            "connections": {
              "false": "94472b1c-e610-45f1-93ca-f19215a47c4a",
              "true": "a5598ee9-3da4-43ad-ae0a-300147e225dc"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "Protect Evaluation & Mitigation"
          },
          "2fdbfe90-c970-4002-ab3f-7f43166bbe62": {
            "x": 201,
            "y": 476.03125,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "78d6920a-a0f9-4e6c-bee0-1b4a33d1e3d0"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "Initialize P1 Protect"
          },
          "3ddbb445-97e0-4ec0-98f6-c1ee2ae5a77b": {
            "x": 972,
            "y": 1140.03125,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e0c6db75-5496-428a-ba80-c4c5fed77c85"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "Sign On Subflow"
          },
          "423cb964-38ca-4c47-a86a-b8fedaa8f603": {
            "x": 1585,
            "y": 954.03125,
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "product-PingOneProtectResultNode",
            "displayName": "Update P1 Protect Eval Success"
          },
          "483a0df7-baf2-4828-a9ca-369d44236275": {
            "x": 198,
            "y": 813.03125,
            "connections": {
              "true": "6d6b0165-2fb8-4dc1-abde-d6be11e91e81"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set flowType As Authorization"
          },
          "656e233d-4b08-48c7-b682-2cef78838fcf": {
            "x": 573,
            "y": 1127.515625,
            "connections": {
              "false": "3ddbb445-97e0-4ec0-98f6-c1ee2ae5a77b",
              "true": "9083cd7c-e10e-46f1-9a90-b40690a81e92"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Check For Existing Session"
          },
          "6a0c8e0a-8584-41d9-ab03-e27594927cbd": {
            "x": 1378.1666666666667,
            "y": 631.859375,
            "connections": {
              "false": "94472b1c-e610-45f1-93ca-f19215a47c4a",
              "true": "423cb964-38ca-4c47-a86a-b8fedaa8f603"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "Money Transfer"
          },
          "6c50fa52-1b93-4070-92d4-9b03bcab628a": {
            "x": 1146,
            "y": 487.015625,
            "connections": {
              "false": "94472b1c-e610-45f1-93ca-f19215a47c4a",
              "true": "6a0c8e0a-8584-41d9-ab03-e27594927cbd"
            },
            "nodeType": "InnerTreeEvaluatorNode",
            "displayName": "MFA Authentication"
          },
          "6d6b0165-2fb8-4dc1-abde-d6be11e91e81": {
            "x": 198,
            "y": 674.03125,
            "connections": {
              "true": "2fdbfe90-c970-4002-ab3f-7f43166bbe62"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set p1ProtectAction As Init"
          },
          "78d6920a-a0f9-4e6c-bee0-1b4a33d1e3d0": {
            "x": 188.15625,
            "y": 271.515625,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "8c96ab59-6e1b-4451-8a06-50bf00099be9"
            },
            "nodeType": "IdentifyExistingUserNode",
            "displayName": "Identify Existing User"
          },
          "7964d5d6-8893-43c7-a232-57047085794a": {
            "x": 225.42857142857144,
            "y": 1138.8080357142858,
            "connections": {
              "true": "656e233d-4b08-48c7-b682-2cef78838fcf"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Prerequisites & Init Variables"
          },
          "7e8f5bd7-2f3c-4b48-a85e-68978b8db527": {
            "x": 637,
            "y": 63.015625,
            "connections": {
              "true": "0789e442-daef-444b-b9f3-c93ee79d2451"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Set p1ProtectAction As Eval"
          },
          "8b3704da-a68b-4479-a32f-10442918459b": {
            "x": 863,
            "y": 479.015625,
            "connections": {
              "false": "6a0c8e0a-8584-41d9-ab03-e27594927cbd",
              "true": "6c50fa52-1b93-4070-92d4-9b03bcab628a"
            },
            "nodeType": "AuthLevelDecisionNode",
            "displayName": "Auth Level Decision"
          },
          "8c96ab59-6e1b-4451-8a06-50bf00099be9": {
            "x": 168,
            "y": 32.03125,
            "connections": {
              "false": "a5598ee9-3da4-43ad-ae0a-300147e225dc",
              "true": "7e8f5bd7-2f3c-4b48-a85e-68978b8db527"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Is Protect Analysis Required?"
          },
          "9083cd7c-e10e-46f1-9a90-b40690a81e92": {
            "x": 217,
            "y": 957.03125,
            "connections": {
              "false": "a5598ee9-3da4-43ad-ae0a-300147e225dc",
              "true": "483a0df7-baf2-4828-a9ca-369d44236275"
            },
            "nodeType": "ScriptedDecisionNode",
            "displayName": "Is Protect Analysis Required?"
          },
          "94472b1c-e610-45f1-93ca-f19215a47c4a": {
            "x": 1663,
            "y": 403.03125,
            "connections": {
              "outcome": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "nodeType": "product-PingOneProtectResultNode",
            "displayName": "Update P1 Protect Eval Failure"
          },
          "a5598ee9-3da4-43ad-ae0a-300147e225dc": {
            "x": 560,
            "y": 751.359375,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "a81befc4-1c82-4a08-8392-e9e3cbaeae3b"
            },
            "nodeType": "IdentifyExistingUserNode",
            "displayName": "Identify Existing User"
          },
          "a81befc4-1c82-4a08-8392-e9e3cbaeae3b": {
            "x": 548,
            "y": 476.015625,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "8b3704da-a68b-4479-a32f-10442918459b"
            },
            "nodeType": "AccountActiveDecisionNode",
            "displayName": "Account Active Decision"
          },
          "e0c6db75-5496-428a-ba80-c4c5fed77c85": {
            "x": 1440,
            "y": 1169.03125,
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
            },
            "nodeType": "SetSuccessUrlNode",
            "displayName": "Redirect To Money Transfer"
          },
          "f5125828-6fd5-4955-8251-9c8eea12b43d": {
            "x": 226,
            "y": 1262.03125,
            "connections": {
              "DONE": "7964d5d6-8893-43c7-a232-57047085794a"
            },
            "nodeType": "PollingWaitNode",
            "displayName": "Polling Wait Node"
          }
        },
        "staticNodes": {
          "startNode": {
            "x": 32,
            "y": 210
          },
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 2037,
            "y": 958
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 2040,
            "y": 829
          }
        },
        "mustRun": true,
        "enabled": true
      },
      "nodes": {
        "0789e442-daef-444b-b9f3-c93ee79d2451": {
          "_id": "0789e442-daef-444b-b9f3-c93ee79d2451",
          "_rev": "1883916861",
          "tree": "Money Transfer -Threat Detection - Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "2fdbfe90-c970-4002-ab3f-7f43166bbe62": {
          "_id": "2fdbfe90-c970-4002-ab3f-7f43166bbe62",
          "_rev": "-1125489862",
          "tree": "Money Transfer -Threat Detection - Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "3ddbb445-97e0-4ec0-98f6-c1ee2ae5a77b": {
          "_id": "3ddbb445-97e0-4ec0-98f6-c1ee2ae5a77b",
          "_rev": "-1036350191",
          "tree": "Money Transfer SignOn - Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "423cb964-38ca-4c47-a86a-b8fedaa8f603": {
          "_id": "423cb964-38ca-4c47-a86a-b8fedaa8f603",
          "_rev": "-1122756070",
          "status": "SUCCESS",
          "_type": {
            "_id": "product-PingOneProtectResultNode",
            "name": "PingOne Protect Result",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "483a0df7-baf2-4828-a9ca-369d44236275": {
          "_id": "483a0df7-baf2-4828-a9ca-369d44236275",
          "_rev": "1780787137",
          "script": "3e4f4238-01cd-4714-a166-cf952e2d517e",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "flowType",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "656e233d-4b08-48c7-b682-2cef78838fcf": {
          "_id": "656e233d-4b08-48c7-b682-2cef78838fcf",
          "_rev": "-970295477",
          "script": "616d3541-14d6-4a54-94dd-46a146ef2423",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "*"
          ],
          "inputs": [
            "*"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "6a0c8e0a-8584-41d9-ab03-e27594927cbd": {
          "_id": "6a0c8e0a-8584-41d9-ab03-e27594927cbd",
          "_rev": "1938325967",
          "tree": "Money Transfer - Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "6c50fa52-1b93-4070-92d4-9b03bcab628a": {
          "_id": "6c50fa52-1b93-4070-92d4-9b03bcab628a",
          "_rev": "152651310",
          "tree": "Money Transfer - MFA Authentication - Inner Journey",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "name": "Inner Tree Evaluator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "6d6b0165-2fb8-4dc1-abde-d6be11e91e81": {
          "_id": "6d6b0165-2fb8-4dc1-abde-d6be11e91e81",
          "_rev": "637823807",
          "script": "ff5af31d-95a3-4267-be21-a4dd7160b059",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "p1ProtectAction",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "78d6920a-a0f9-4e6c-bee0-1b4a33d1e3d0": {
          "_id": "78d6920a-a0f9-4e6c-bee0-1b4a33d1e3d0",
          "_rev": "2085915066",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "7964d5d6-8893-43c7-a232-57047085794a": {
          "_id": "7964d5d6-8893-43c7-a232-57047085794a",
          "_rev": "681018788",
          "script": "57479cf3-e75b-4a94-9b35-3c02aeefad6a",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "ciam_allowedMFATypes",
            "ciam_protectAnalysisRequired",
            "ciam_magicLinkEnabled"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "7e8f5bd7-2f3c-4b48-a85e-68978b8db527": {
          "_id": "7e8f5bd7-2f3c-4b48-a85e-68978b8db527",
          "_rev": "1281347585",
          "script": "0ae3e371-ea27-48a5-add8-09eb49ae5b57",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "p1ProtectAction",
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "null"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        },
        "8b3704da-a68b-4479-a32f-10442918459b": {
          "_id": "8b3704da-a68b-4479-a32f-10442918459b",
          "_rev": "-2045062374",
          "authLevelRequirement": 1,
          "_type": {
            "_id": "AuthLevelDecisionNode",
            "name": "Auth Level Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "8c96ab59-6e1b-4451-8a06-50bf00099be9": {
          "_id": "8c96ab59-6e1b-4451-8a06-50bf00099be9",
          "_rev": "-1681478268",
          "script": "2123ea21-2007-4e83-a3cc-d7e59e96638f",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_protectAnalysisRequired"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "9083cd7c-e10e-46f1-9a90-b40690a81e92": {
          "_id": "9083cd7c-e10e-46f1-9a90-b40690a81e92",
          "_rev": "920390884",
          "script": "2123ea21-2007-4e83-a3cc-d7e59e96638f",
          "outcomes": [
            "true",
            "false"
          ],
          "outputs": [
            "errorMessage",
            "errorDetails"
          ],
          "inputs": [
            "ciam_protectAnalysisRequired"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            },
            {
              "id": "false",
              "displayName": "false"
            }
          ]
        },
        "94472b1c-e610-45f1-93ca-f19215a47c4a": {
          "_id": "94472b1c-e610-45f1-93ca-f19215a47c4a",
          "_rev": "-383469084",
          "status": "FAILED",
          "_type": {
            "_id": "product-PingOneProtectResultNode",
            "name": "PingOne Protect Result",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "a5598ee9-3da4-43ad-ae0a-300147e225dc": {
          "_id": "a5598ee9-3da4-43ad-ae0a-300147e225dc",
          "_rev": "-1457158952",
          "identityAttribute": "userName",
          "identifier": "userName",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "name": "Identify Existing User",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "a81befc4-1c82-4a08-8392-e9e3cbaeae3b": {
          "_id": "a81befc4-1c82-4a08-8392-e9e3cbaeae3b",
          "_rev": "-937782238",
          "_type": {
            "_id": "AccountActiveDecisionNode",
            "name": "Account Active Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "e0c6db75-5496-428a-ba80-c4c5fed77c85": {
          "_id": "e0c6db75-5496-428a-ba80-c4c5fed77c85",
          "_rev": "-1417127475",
          "successUrl": "",
          "_type": {
            "_id": "SetSuccessUrlNode",
            "name": "Success URL",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "f5125828-6fd5-4955-8251-9c8eea12b43d": {
          "_id": "f5125828-6fd5-4955-8251-9c8eea12b43d",
          "_rev": "-1754981635",
          "spamDetectionTolerance": 3,
          "spamDetectionEnabled": false,
          "exitMessage": {},
          "waitingMessage": {
            "en": "Loading..."
          },
          "secondsToWait": 2,
          "exitable": false,
          "_type": {
            "_id": "PollingWaitNode",
            "name": "Polling Wait Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "DONE",
              "displayName": "Done"
            }
          ]
        }
      },
      "innerNodes": {},
      "scripts": {
        "3e4f4238-01cd-4714-a166-cf952e2d517e": {
          "_id": "3e4f4238-01cd-4714-a166-cf952e2d517e",
          "name": "Money Transfer - Set Flow Type As Authorization",
          "description": "Script to set flowType as Authorization",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"ciam_protectAnalysisRequired\\\", esv.p1.protect.analysis.required\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\", \\\"false\\\"\\n*/\\n\\ntry {\\n    // Setting the flowType as Authorization, this will be used to differentiate paths in Threat Detection Journey\\n    nodeState.putShared(\\\"flowType\\\", \\\"Authorization\\\");\\n    // Go to true\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\\n\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741057014682,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845569007,
          "evaluatorVersion": "2.0"
        },
        "616d3541-14d6-4a54-94dd-46a146ef2423": {
          "_id": "616d3541-14d6-4a54-94dd-46a146ef2423",
          "name": "Money Transfer - Check For Existing Session",
          "description": "Check For Existing Session",
          "script": "\"if (typeof existingSession !== 'undefined')\\n{\\n  outcome = \\\"true\\\";\\n}\\nelse\\n{\\n  outcome = \\\"false\\\";\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741103308181,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1742208365719,
          "evaluatorVersion": "1.0"
        },
        "ff5af31d-95a3-4267-be21-a4dd7160b059": {
          "_id": "ff5af31d-95a3-4267-be21-a4dd7160b059",
          "name": "Money Transfer - Set Protect Action Init",
          "description": "Script to set Protect action as Eval, will be used in Threat Detection Journey to initialize Protect SDK",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: null\\n    - Script Outputs: \\\"p1ProtectAction\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {\\n    // Action to be taken in threat detection child journey\\n    nodeState.putShared(\\\"p1ProtectAction\\\", \\\"init\\\");\\n    // Go to true path\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741055992053,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845569014,
          "evaluatorVersion": "2.0"
        },
        "57479cf3-e75b-4a94-9b35-3c02aeefad6a": {
          "_id": "57479cf3-e75b-4a94-9b35-3c02aeefad6a",
          "name": "Money Transfer - Initialize Variables",
          "description": "Script to Initialize variables that will be used further in the Journey",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/* Prerequisites for this Journey Pack\\n       -Create following custom attributes before proceeding:\\n           1. custom_emailVerified - string (To keep track that user has verified their emailAddress)\\n           2. custom_protectActivityCity - string (User's P1 Protect Activity City, used in notification template)\\n           3. custom_protectActivityState - string (User's P1 Protect Activity City, used in notification template)\\n           4. custom_protectDeviceOS - string (User's P1 Protect Activity City, used in notification template)\\n           5. custom_mfaDevices - array of string (To set, fetch and display user's registered MFA devices)\\n           6. custom_latestMFADevice - string (Recent MFA device registered by user, used in notification template)\\n           7. custom_savingsBalance - string (To fetch and update user's savings account balance after money transfer)\\n           8. custom_checkingBalance - string (To fetch and update user's checking account balance after money transfer)\\n           9. custom_currency - string (To fetch user's currency, to display after money transfer)\\n       -Configuration Check\\n           1. Set the environment variable p1-protect-analysis-required. If it is not set, the value specified in the code below for \\\"protectAnalysisRequired\\\" var will be used.\\n           2. Threat Detection Inner Journey (If Protect Analysis Is Required):\\n               a. Update the PingOne Worker Service ID (P1 Worker App), Risk Policy ID* in following nodes: (*Optional, if not provided default will be considered)\\n                   -- P1 Protect Initialize (1 instance)\\n                   -- P1 Protect Evaluation (2 instances)\\n           3. MFA Authenticaion Inner Journey (If \\\"SMS\\\", or \\\"VOICE\\\" are opted in below \\\"allowedMFATyps\\\" array):\\n               a. Update the required fields in:\\n                   -- Twilio Verify Lookup\\n                   -- Twilio Verify Sender\\n           4. Money Transfer Inner Journey (Configure PingOne Service in AM and set the authorization policies in PingOne)\\n               a. Update the PingOne Worker Service ID (P1 Worker App) in PingOne Authorize node\\n               b. Update the ENDPOINT ID(P1 Decision Endpoint) in PingOne Authorize node\\n               c. Edit Statement Codes as per your PingOne Authorize Policy in PingOne Authorize node\\n           5. Add Email Templates -  otp, suspiciousActivity, accountDisabled, newDeviceDetected etc.(refer documentation for sample formats)\\n           6. Money Transfer - Main Journey\\n               a. Update the Success URL node with preview URL of \\\"Money Transfer - Inner Journey\\\"\\n           7. Mark \\\"Run journey for all users regardless of current session.\\\" as true for \\\"Money Transfer - Main Journey\\\" from settings.\\n*/\\n\\n\\n// Allowed MFA device types by the Admin\\nvar allowedMFATypes = [\\\"FIDO2\\\", \\\"OATH\\\", \\\"PUSH\\\", \\\"EMAIL\\\", \\\"SMS\\\", \\\"VOICE\\\"];\\nnodeState.putShared(\\\"ciam_allowedMFATypes\\\", allowedMFATypes);\\n\\n// Check if Admin wants to enable/disable protectAnalysis\\nvar protectAnalysisRequired = true;\\nnodeState.putShared(\\\"ciam_protectAnalysisRequired\\\", protectAnalysisRequired);\\n\\n// Check if Admin wants to allow OOB Magic Link as an MFA authentication method\\nvar magicLinkEnabled = true;\\nnodeState.putShared(\\\"ciam_magicLinkEnabled\\\", magicLinkEnabled);\\n\\noutcome = \\\"true\\\";\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741056284964,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1742360249373,
          "evaluatorVersion": "2.0"
        },
        "0ae3e371-ea27-48a5-add8-09eb49ae5b57": {
          "_id": "0ae3e371-ea27-48a5-add8-09eb49ae5b57",
          "name": "Money Transfer - Set Protect Action As Eval",
          "description": "Script to set Protect action as Eval, will be used in Threat Detection Journey to evaluate Risk",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: null\\n    - Script Outputs: \\\"p1ProtectAction\\\", \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\"\\n*/\\n\\ntry {  \\n    // Action to be taken in threat detection child journey\\n    nodeState.putShared(\\\"p1ProtectAction\\\", \\\"eval\\\");\\n    // Go to true\\n    action.goTo(\\\"true\\\");\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error  \\n    action.goTo(\\\"Error\\\");\\n}\\n\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741057033186,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1741845568980,
          "evaluatorVersion": "2.0"
        },
        "2123ea21-2007-4e83-a3cc-d7e59e96638f": {
          "_id": "2123ea21-2007-4e83-a3cc-d7e59e96638f",
          "name": "Money Transfer - Protect Analysis Required",
          "description": "Script to check if P1 Protect analysis is required or not",
          "script": "\"/*\\n  - Data made available by nodes that have already executed are available in the sharedState variable.\\n  - The script should set outcome to either \\\"true\\\" or \\\"false\\\".\\n */\\n\\n/*\\n    - Script Inputs: \\\"ciam_protectAnalysisRequired\\\"\\n    - Script Outputs: \\\"errorMessage\\\", \\\"errorDetails\\\"\\n    - Outcomes: \\\"true\\\", \\\"false\\\"\\n*/\\n\\n// Prerequisites: Set the environment variable: p1-protect-analysis-required\\n\\ntry {\\n    // Get Protect analysis required or not from the Environment variable\\n    var protectAnalysisRequired = (systemEnv.getProperty(\\\"esv.p1.protect.analysis.required\\\") && systemEnv.getProperty(\\\"esv.p1.protect.analysis.required\\\").length) ? systemEnv.getProperty(\\\"esv.p1.protect.analysis.required\\\") : nodeState.get(\\\"ciam_protectAnalysisRequired\\\");\\n    \\n    if(protectAnalysisRequired === \\\"true\\\" || protectAnalysisRequired === true) outcome = \\\"true\\\";\\n    else outcome = \\\"false\\\";\\n    // Go to outcome\\n    action.goTo(outcome);\\n} catch (e) {\\n    // User-friendly error message\\n    nodeState.putShared(\\\"errorMessage\\\", \\\"An error has occurred. Contact support.\\\");\\n    // Detailed error information for debugging\\n    nodeState.putShared(\\\"errorDetails\\\", e.toString());\\n    // Go to Error \\n    action.goTo(\\\"Error\\\");\\n}\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "creationDate": 1741055726903,
          "lastModifiedBy": "id=6be5d31c-6ad3-48d2-8d5c-91abb58fa13a,ou=user,ou=am-config",
          "lastModifiedDate": 1742468488041,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {},
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    }
  }
}